/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:00:45 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __ADT_A03__281_H__
#define __ADT_A03__281_H__

#include "../../common/Util.h"
#include "../segment/ACC.h"
#include "../segment/AL1.h"
#include "../segment/ARV.h"
#include "../segment/AUT.h"
#include "../segment/DB1.h"
#include "../segment/DG1.h"
#include "../segment/DRG.h"
#include "../segment/EVN.h"
#include "../segment/GT1.h"
#include "../segment/IN1.h"
#include "../segment/IN2.h"
#include "../segment/IN3.h"
#include "../segment/MSH.h"
#include "../segment/NK1.h"
#include "../segment/OBX.h"
#include "../segment/PD1.h"
#include "../segment/PDA.h"
#include "../segment/PID.h"
#include "../segment/PR1.h"
#include "../segment/PV1.h"
#include "../segment/PV2.h"
#include "../segment/RF1.h"
#include "../segment/ROL.h"
#include "../segment/SFT.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct ADT_A03_PROCEDURE; /* PROCEDURE */
struct ADT_A03_INSURANCE; /* INSURANCE */

/* PROCEDURE */
struct ADT_A03_PROCEDURE : public HL7Group {
  ADT_A03_PROCEDURE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    ADT_A03_PR1_1,
    ADT_A03_ROL_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "ADT_A03_PROCEDURE"; }
  ADT_A03_PROCEDURE* create() const { return new ADT_A03_PROCEDURE(); }

 private:
  /* Initialize object */
  void init() {
    setName("ADT_A03.PROCEDURE");
    addObject<PR1>(ADT_A03_PR1_1, "PR1.1", HL7::optional, HL7::repetition_on);
    addObject<ROL>(ADT_A03_ROL_2, "ROL.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PR1* getPR1_1(size_t index = 0) {
    return (PR1*)this->getObjectSafe(index, ADT_A03_PR1_1);
  }
  ROL* getROL_2(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, ADT_A03_ROL_2);
  }

  /* Checker list */
  bool isPR1_1(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_PR1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_2(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_ROL_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* ADT_A03_PROCEDURE */

/* INSURANCE */
struct ADT_A03_INSURANCE : public HL7Group {
  ADT_A03_INSURANCE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    ADT_A03_AUT_1,
    ADT_A03_IN1_2,
    ADT_A03_IN2_3,
    ADT_A03_IN3_4,
    ADT_A03_RF1_5,
    ADT_A03_ROL_6,
    FIELD_ID_MAX
  };

  const char* className() const { return "ADT_A03_INSURANCE"; }
  ADT_A03_INSURANCE* create() const { return new ADT_A03_INSURANCE(); }

 private:
  /* Initialize object */
  void init() {
    setName("ADT_A03.INSURANCE");
    addObject<AUT>(ADT_A03_AUT_1, "AUT.1", HL7::optional, HL7::repetition_on);
    addObject<IN1>(ADT_A03_IN1_2, "IN1.2", HL7::optional, HL7::repetition_on);
    addObject<IN2>(ADT_A03_IN2_3, "IN2.3", HL7::optional, HL7::repetition_on);
    addObject<IN3>(ADT_A03_IN3_4, "IN3.4", HL7::optional, HL7::repetition_on);
    addObject<RF1>(ADT_A03_RF1_5, "RF1.5", HL7::optional, HL7::repetition_on);
    addObject<ROL>(ADT_A03_ROL_6, "ROL.6", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AUT* getAUT_1(size_t index = 0) {
    return (AUT*)this->getObjectSafe(index, ADT_A03_AUT_1);
  }
  IN1* getIN1_2(size_t index = 0) {
    return (IN1*)this->getObjectSafe(index, ADT_A03_IN1_2);
  }
  IN2* getIN2_3(size_t index = 0) {
    return (IN2*)this->getObjectSafe(index, ADT_A03_IN2_3);
  }
  IN3* getIN3_4(size_t index = 0) {
    return (IN3*)this->getObjectSafe(index, ADT_A03_IN3_4);
  }
  RF1* getRF1_5(size_t index = 0) {
    return (RF1*)this->getObjectSafe(index, ADT_A03_RF1_5);
  }
  ROL* getROL_6(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, ADT_A03_ROL_6);
  }

  /* Checker list */
  bool isAUT_1(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_AUT_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN1_2(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_IN1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN2_3(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_IN2_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN3_4(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_IN3_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRF1_5(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_RF1_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_6(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_ROL_6) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* ADT_A03_INSURANCE */

/* ADT_A03 */
struct ADT_A03 : public HL7Message {
  ADT_A03() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    ADT_A03_MSH_1,
    ADT_A03_SFT_2,
    ADT_A03_UAC_3,
    ADT_A03_EVN_4,
    ADT_A03_PID_5,
    ADT_A03_PD1_6,
    ADT_A03_ARV_7,
    ADT_A03_ROL_8,
    ADT_A03_NK1_9,
    ADT_A03_PV1_10,
    ADT_A03_PV2_11,
    ADT_A03_ARV_12,
    ADT_A03_ROL_13,
    ADT_A03_DB1_14,
    ADT_A03_AL1_15,
    ADT_A03_DG1_16,
    ADT_A03_DRG_17,
    ADT_A03_OBX_19,
    ADT_A03_GT1_20,
    ADT_A03_ACC_22,
    ADT_A03_PDA_23,
    ADT_A03_IN1_24,
    ADT_A03_IN2_25,
    ADT_A03_IN3_26,
    ADT_A03_ROL_27,
    ADT_A03_AUT_28,
    ADT_A03_RF1_29,
    ADT_A03_PR1_30,
    ADT_A03_ROL_31,
    FIELD_ID_MAX
  };

  const char* className() const { return "ADT_A03"; }
  ADT_A03* create() const { return new ADT_A03(); }

 private:
  /* Initialize object */
  void init() {
    setName("ADT_A03");
    addObject<MSH>(ADT_A03_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(ADT_A03_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(ADT_A03_UAC_3, "UAC.3", HL7::optional, HL7::repetition_off);
    addObject<EVN>(ADT_A03_EVN_4, "EVN.4", HL7::initialized, HL7::repetition_off);
    addObject<PID>(ADT_A03_PID_5, "PID.5", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(ADT_A03_PD1_6, "PD1.6", HL7::optional, HL7::repetition_off);
    addObject<ARV>(ADT_A03_ARV_7, "ARV.7", HL7::optional, HL7::repetition_on);
    addObject<ROL>(ADT_A03_ROL_8, "ROL.8", HL7::optional, HL7::repetition_on);
    addObject<NK1>(ADT_A03_NK1_9, "NK1.9", HL7::optional, HL7::repetition_on);
    addObject<PV1>(ADT_A03_PV1_10, "PV1.10", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(ADT_A03_PV2_11, "PV2.11", HL7::optional, HL7::repetition_off);
    addObject<ARV>(ADT_A03_ARV_12, "ARV.12", HL7::optional, HL7::repetition_on);
    addObject<ROL>(ADT_A03_ROL_13, "ROL.13", HL7::optional, HL7::repetition_on);
    addObject<DB1>(ADT_A03_DB1_14, "DB1.14", HL7::optional, HL7::repetition_on);
    addObject<AL1>(ADT_A03_AL1_15, "AL1.15", HL7::optional, HL7::repetition_on);
    addObject<DG1>(ADT_A03_DG1_16, "DG1.16", HL7::optional, HL7::repetition_on);
    addObject<DRG>(ADT_A03_DRG_17, "DRG.17", HL7::optional, HL7::repetition_off);
    addObject<OBX>(ADT_A03_OBX_19, "OBX.19", HL7::optional, HL7::repetition_on);
    addObject<GT1>(ADT_A03_GT1_20, "GT1.20", HL7::optional, HL7::repetition_on);
    addObject<ACC>(ADT_A03_ACC_22, "ACC.22", HL7::optional, HL7::repetition_off);
    addObject<PDA>(ADT_A03_PDA_23, "PDA.23", HL7::optional, HL7::repetition_off);
    addObject<IN1>(ADT_A03_IN1_24, "IN1.24", HL7::initialized, HL7::repetition_off);
    addObject<IN2>(ADT_A03_IN2_25, "IN2.25", HL7::optional, HL7::repetition_off);
    addObject<IN3>(ADT_A03_IN3_26, "IN3.26", HL7::optional, HL7::repetition_off);
    addObject<ROL>(ADT_A03_ROL_27, "ROL.27", HL7::optional, HL7::repetition_off);
    addObject<AUT>(ADT_A03_AUT_28, "AUT.28", HL7::optional, HL7::repetition_off);
    addObject<RF1>(ADT_A03_RF1_29, "RF1.29", HL7::optional, HL7::repetition_off);
    addObject<PR1>(ADT_A03_PR1_30, "PR1.30", HL7::initialized, HL7::repetition_off);
    addObject<ROL>(ADT_A03_ROL_31, "ROL.31", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, ADT_A03_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, ADT_A03_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, ADT_A03_UAC_3);
  }
  EVN* getEVN_4(size_t index = 0) {
    return (EVN*)this->getObjectSafe(index, ADT_A03_EVN_4);
  }
  PID* getPID_5(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, ADT_A03_PID_5);
  }
  PD1* getPD1_6(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, ADT_A03_PD1_6);
  }
  ARV* getARV_7(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, ADT_A03_ARV_7);
  }
  ROL* getROL_8(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, ADT_A03_ROL_8);
  }
  NK1* getNK1_9(size_t index = 0) {
    return (NK1*)this->getObjectSafe(index, ADT_A03_NK1_9);
  }
  PV1* getPV1_10(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, ADT_A03_PV1_10);
  }
  PV2* getPV2_11(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, ADT_A03_PV2_11);
  }
  ARV* getARV_12(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, ADT_A03_ARV_12);
  }
  ROL* getROL_13(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, ADT_A03_ROL_13);
  }
  DB1* getDB1_14(size_t index = 0) {
    return (DB1*)this->getObjectSafe(index, ADT_A03_DB1_14);
  }
  AL1* getAL1_15(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, ADT_A03_AL1_15);
  }
  DG1* getDG1_16(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, ADT_A03_DG1_16);
  }
  DRG* getDRG_17(size_t index = 0) {
    return (DRG*)this->getObjectSafe(index, ADT_A03_DRG_17);
  }
  OBX* getOBX_19(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, ADT_A03_OBX_19);
  }
  GT1* getGT1_20(size_t index = 0) {
    return (GT1*)this->getObjectSafe(index, ADT_A03_GT1_20);
  }
  ACC* getACC_22(size_t index = 0) {
    return (ACC*)this->getObjectSafe(index, ADT_A03_ACC_22);
  }
  PDA* getPDA_23(size_t index = 0) {
    return (PDA*)this->getObjectSafe(index, ADT_A03_PDA_23);
  }
  IN1* getIN1_24(size_t index = 0) {
    return (IN1*)this->getObjectSafe(index, ADT_A03_IN1_24);
  }
  IN2* getIN2_25(size_t index = 0) {
    return (IN2*)this->getObjectSafe(index, ADT_A03_IN2_25);
  }
  IN3* getIN3_26(size_t index = 0) {
    return (IN3*)this->getObjectSafe(index, ADT_A03_IN3_26);
  }
  ROL* getROL_27(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, ADT_A03_ROL_27);
  }
  AUT* getAUT_28(size_t index = 0) {
    return (AUT*)this->getObjectSafe(index, ADT_A03_AUT_28);
  }
  RF1* getRF1_29(size_t index = 0) {
    return (RF1*)this->getObjectSafe(index, ADT_A03_RF1_29);
  }
  PR1* getPR1_30(size_t index = 0) {
    return (PR1*)this->getObjectSafe(index, ADT_A03_PR1_30);
  }
  ROL* getROL_31(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, ADT_A03_ROL_31);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isEVN_4(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_EVN_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_5(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_PID_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_6(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_PD1_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_7(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_ARV_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_8(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_ROL_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNK1_9(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_NK1_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_10(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_PV1_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_11(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_PV2_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_12(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_ARV_12) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_13(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_ROL_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDB1_14(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_DB1_14) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_15(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_AL1_15) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDG1_16(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_DG1_16) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDRG_17(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_DRG_17) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_19(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_OBX_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isGT1_20(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_GT1_20) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isACC_22(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_ACC_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPDA_23(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_PDA_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN1_24(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_IN1_24) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN2_25(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_IN2_25) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN3_26(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_IN3_26) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_27(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_ROL_27) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAUT_28(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_AUT_28) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRF1_29(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_RF1_29) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPR1_30(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_PR1_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_31(size_t index = 0) {
    try {
      return this->getObject(index, ADT_A03_ROL_31) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* ADT_A03_ */
} /* namespace HL7_281 */
#endif /*  __ADT_A03__281_H__ */
