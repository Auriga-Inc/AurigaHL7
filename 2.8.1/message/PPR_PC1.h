/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:06:04 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __PPR_PC1__281_H__
#define __PPR_PC1__281_H__

#include "../../common/Util.h"
#include "../segment/GOL.h"
#include "../segment/Hxx.h"
#include "../segment/MSH.h"
#include "../segment/NTE.h"
#include "../segment/OBR.h"
#include "../segment/OBX.h"
#include "../segment/ORC.h"
#include "../segment/PID.h"
#include "../segment/PRB.h"
#include "../segment/PRT.h"
#include "../segment/PTH.h"
#include "../segment/PV1.h"
#include "../segment/PV2.h"
#include "../segment/ROL.h"
#include "../segment/SFT.h"
#include "../segment/UAC.h"
#include "../segment/VAR.h"

namespace HL7_281 {

/* Internal structures/groups */
struct PPR_PC1_PATIENT_VISIT; /* PATIENT_VISIT */
struct PPR_PC1_PROBLEM; /* PROBLEM */
struct PPR_PC1_PROBLEM_ROLE; /* PROBLEM_ROLE */
struct PPR_PC1_PATHWAY; /* PATHWAY */
struct PPR_PC1_PROBLEM_OBSERVATION; /* PROBLEM_OBSERVATION */
struct PPR_PC1_GOAL; /* GOAL */
struct PPR_PC1_ORDER; /* ORDER */
struct PPR_PC1_GOAL_ROLE; /* GOAL_ROLE */
struct PPR_PC1_GOAL_OBSERVATION; /* GOAL_OBSERVATION */
struct PPR_PC1_GOAL_ROLE; /* GOAL_ROLE */
struct PPR_PC1_GOAL_OBSERVATION; /* GOAL_OBSERVATION */
struct PPR_PC1_ORDER_DETAIL; /* ORDER_DETAIL */
struct PPR_PC1_ORDER_OBSERVATION; /* ORDER_OBSERVATION */

/* PATIENT_VISIT */
struct PPR_PC1_PATIENT_VISIT : public HL7Group {
  PPR_PC1_PATIENT_VISIT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    PPR_PC1_PV1_1,
    PPR_PC1_PV2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "PPR_PC1_PATIENT_VISIT"; }
  PPR_PC1_PATIENT_VISIT* create() const { return new PPR_PC1_PATIENT_VISIT(); }

 private:
  /* Initialize object */
  void init() {
    setName("PPR_PC1.PATIENT_VISIT");
    addObject<PV1>(PPR_PC1_PV1_1, "PV1.1", HL7::optional, HL7::repetition_on);
    addObject<PV2>(PPR_PC1_PV2_2, "PV2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PV1* getPV1_1(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, PPR_PC1_PV1_1);
  }
  PV2* getPV2_2(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, PPR_PC1_PV2_2);
  }

  /* Checker list */
  bool isPV1_1(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PV1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_2(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PV2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* PPR_PC1_PATIENT_VISIT */

/* PROBLEM */
struct PPR_PC1_PROBLEM : public HL7Group {
  PPR_PC1_PROBLEM() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    PPR_PC1_NTE_1,
    PPR_PC1_PPR_PC1_GOAL_2,
    PPR_PC1_PPR_PC1_ORDER_3,
    PPR_PC1_PPR_PC1_PATHWAY_4,
    PPR_PC1_PPR_PC1_PROBLEM_OBSERVATION_5,
    PPR_PC1_PPR_PC1_PROBLEM_ROLE_6,
    PPR_PC1_PRB_7,
    PPR_PC1_VAR_8,
    FIELD_ID_MAX
  };

  const char* className() const { return "PPR_PC1_PROBLEM"; }
  PPR_PC1_PROBLEM* create() const { return new PPR_PC1_PROBLEM(); }

 private:
  /* Initialize object */
  void init() {
    setName("PPR_PC1.PROBLEM");
    addObject<NTE>(PPR_PC1_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<PPR_PC1_GOAL>(PPR_PC1_PPR_PC1_GOAL_2, "PPR_PC1_GOAL.2", HL7::optional, HL7::repetition_on);
    addObject<PPR_PC1_ORDER>(PPR_PC1_PPR_PC1_ORDER_3, "PPR_PC1_ORDER.3", HL7::optional, HL7::repetition_on);
    addObject<PPR_PC1_PATHWAY>(PPR_PC1_PPR_PC1_PATHWAY_4, "PPR_PC1_PATHWAY.4", HL7::optional, HL7::repetition_on);
    addObject<PPR_PC1_PROBLEM_OBSERVATION>(PPR_PC1_PPR_PC1_PROBLEM_OBSERVATION_5, "PPR_PC1_PROBLEM_OBSERVATION.5", HL7::optional, HL7::repetition_on);
    addObject<PPR_PC1_PROBLEM_ROLE>(PPR_PC1_PPR_PC1_PROBLEM_ROLE_6, "PPR_PC1_PROBLEM_ROLE.6", HL7::optional, HL7::repetition_on);
    addObject<PRB>(PPR_PC1_PRB_7, "PRB.7", HL7::optional, HL7::repetition_on);
    addObject<VAR>(PPR_PC1_VAR_8, "VAR.8", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_1);
  }
  PPR_PC1_GOAL* getPPR_PC1_GOAL_2(size_t index = 0) {
    return (PPR_PC1_GOAL*)this->getObjectSafe(index, PPR_PC1_PPR_PC1_GOAL_2);
  }
  PPR_PC1_ORDER* getPPR_PC1_ORDER_3(size_t index = 0) {
    return (PPR_PC1_ORDER*)this->getObjectSafe(index, PPR_PC1_PPR_PC1_ORDER_3);
  }
  PPR_PC1_PATHWAY* getPPR_PC1_PATHWAY_4(size_t index = 0) {
    return (PPR_PC1_PATHWAY*)this->getObjectSafe(index, PPR_PC1_PPR_PC1_PATHWAY_4);
  }
  PPR_PC1_PROBLEM_OBSERVATION* getPPR_PC1_PROBLEM_OBSERVATION_5(size_t index = 0) {
    return (PPR_PC1_PROBLEM_OBSERVATION*)this->getObjectSafe(index, PPR_PC1_PPR_PC1_PROBLEM_OBSERVATION_5);
  }
  PPR_PC1_PROBLEM_ROLE* getPPR_PC1_PROBLEM_ROLE_6(size_t index = 0) {
    return (PPR_PC1_PROBLEM_ROLE*)this->getObjectSafe(index, PPR_PC1_PPR_PC1_PROBLEM_ROLE_6);
  }
  PRB* getPRB_7(size_t index = 0) {
    return (PRB*)this->getObjectSafe(index, PPR_PC1_PRB_7);
  }
  VAR* getVAR_8(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_8);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPPR_PC1_GOAL_2(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PPR_PC1_GOAL_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPPR_PC1_ORDER_3(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PPR_PC1_ORDER_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPPR_PC1_PATHWAY_4(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PPR_PC1_PATHWAY_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPPR_PC1_PROBLEM_OBSERVATION_5(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PPR_PC1_PROBLEM_OBSERVATION_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPPR_PC1_PROBLEM_ROLE_6(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PPR_PC1_PROBLEM_ROLE_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRB_7(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PRB_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_8(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_8) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* PPR_PC1_PROBLEM */

/* PROBLEM_ROLE */
struct PPR_PC1_PROBLEM_ROLE : public HL7Group {
  PPR_PC1_PROBLEM_ROLE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    PPR_PC1_ROL_1,
    PPR_PC1_VAR_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "PPR_PC1_PROBLEM_ROLE"; }
  PPR_PC1_PROBLEM_ROLE* create() const { return new PPR_PC1_PROBLEM_ROLE(); }

 private:
  /* Initialize object */
  void init() {
    setName("PPR_PC1.PROBLEM_ROLE");
    addObject<ROL>(PPR_PC1_ROL_1, "ROL.1", HL7::optional, HL7::repetition_on);
    addObject<VAR>(PPR_PC1_VAR_2, "VAR.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ROL* getROL_1(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, PPR_PC1_ROL_1);
  }
  VAR* getVAR_2(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_2);
  }

  /* Checker list */
  bool isROL_1(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ROL_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_2(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* PPR_PC1_PROBLEM_ROLE */

/* PATHWAY */
struct PPR_PC1_PATHWAY : public HL7Group {
  PPR_PC1_PATHWAY() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    PPR_PC1_PTH_1,
    PPR_PC1_VAR_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "PPR_PC1_PATHWAY"; }
  PPR_PC1_PATHWAY* create() const { return new PPR_PC1_PATHWAY(); }

 private:
  /* Initialize object */
  void init() {
    setName("PPR_PC1.PATHWAY");
    addObject<PTH>(PPR_PC1_PTH_1, "PTH.1", HL7::optional, HL7::repetition_on);
    addObject<VAR>(PPR_PC1_VAR_2, "VAR.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PTH* getPTH_1(size_t index = 0) {
    return (PTH*)this->getObjectSafe(index, PPR_PC1_PTH_1);
  }
  VAR* getVAR_2(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_2);
  }

  /* Checker list */
  bool isPTH_1(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PTH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_2(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* PPR_PC1_PATHWAY */

/* PROBLEM_OBSERVATION */
struct PPR_PC1_PROBLEM_OBSERVATION : public HL7Group {
  PPR_PC1_PROBLEM_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    PPR_PC1_NTE_1,
    PPR_PC1_OBX_2,
    PPR_PC1_PRT_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "PPR_PC1_PROBLEM_OBSERVATION"; }
  PPR_PC1_PROBLEM_OBSERVATION* create() const { return new PPR_PC1_PROBLEM_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("PPR_PC1.PROBLEM_OBSERVATION");
    addObject<NTE>(PPR_PC1_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(PPR_PC1_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(PPR_PC1_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, PPR_PC1_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, PPR_PC1_PRT_3);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* PPR_PC1_PROBLEM_OBSERVATION */

/* GOAL */
struct PPR_PC1_GOAL : public HL7Group {
  PPR_PC1_GOAL() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    PPR_PC1_GOL_1,
    PPR_PC1_NTE_2,
    PPR_PC1_PPR_PC1_GOAL_OBSERVATION_3,
    PPR_PC1_PPR_PC1_GOAL_ROLE_4,
    PPR_PC1_VAR_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "PPR_PC1_GOAL"; }
  PPR_PC1_GOAL* create() const { return new PPR_PC1_GOAL(); }

 private:
  /* Initialize object */
  void init() {
    setName("PPR_PC1.GOAL");
    addObject<GOL>(PPR_PC1_GOL_1, "GOL.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(PPR_PC1_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
    addObject<PPR_PC1_GOAL_OBSERVATION>(PPR_PC1_PPR_PC1_GOAL_OBSERVATION_3, "PPR_PC1_GOAL_OBSERVATION.3", HL7::optional, HL7::repetition_on);
    addObject<PPR_PC1_GOAL_ROLE>(PPR_PC1_PPR_PC1_GOAL_ROLE_4, "PPR_PC1_GOAL_ROLE.4", HL7::optional, HL7::repetition_on);
    addObject<VAR>(PPR_PC1_VAR_5, "VAR.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  GOL* getGOL_1(size_t index = 0) {
    return (GOL*)this->getObjectSafe(index, PPR_PC1_GOL_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_2);
  }
  PPR_PC1_GOAL_OBSERVATION* getPPR_PC1_GOAL_OBSERVATION_3(size_t index = 0) {
    return (PPR_PC1_GOAL_OBSERVATION*)this->getObjectSafe(index, PPR_PC1_PPR_PC1_GOAL_OBSERVATION_3);
  }
  PPR_PC1_GOAL_ROLE* getPPR_PC1_GOAL_ROLE_4(size_t index = 0) {
    return (PPR_PC1_GOAL_ROLE*)this->getObjectSafe(index, PPR_PC1_PPR_PC1_GOAL_ROLE_4);
  }
  VAR* getVAR_5(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_5);
  }

  /* Checker list */
  bool isGOL_1(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_GOL_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPPR_PC1_GOAL_OBSERVATION_3(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PPR_PC1_GOAL_OBSERVATION_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPPR_PC1_GOAL_ROLE_4(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PPR_PC1_GOAL_ROLE_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_5(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* PPR_PC1_GOAL */

/* ORDER */
struct PPR_PC1_ORDER : public HL7Group {
  PPR_PC1_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    PPR_PC1_ORC_1,
    PPR_PC1_PPR_PC1_ORDER_DETAIL_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "PPR_PC1_ORDER"; }
  PPR_PC1_ORDER* create() const { return new PPR_PC1_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("PPR_PC1.ORDER");
    addObject<ORC>(PPR_PC1_ORC_1, "ORC.1", HL7::optional, HL7::repetition_on);
    addObject<PPR_PC1_ORDER_DETAIL>(PPR_PC1_PPR_PC1_ORDER_DETAIL_2, "PPR_PC1_ORDER_DETAIL.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ORC* getORC_1(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, PPR_PC1_ORC_1);
  }
  PPR_PC1_ORDER_DETAIL* getPPR_PC1_ORDER_DETAIL_2(size_t index = 0) {
    return (PPR_PC1_ORDER_DETAIL*)this->getObjectSafe(index, PPR_PC1_PPR_PC1_ORDER_DETAIL_2);
  }

  /* Checker list */
  bool isORC_1(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ORC_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPPR_PC1_ORDER_DETAIL_2(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PPR_PC1_ORDER_DETAIL_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* PPR_PC1_ORDER */

/* GOAL_ROLE */
struct PPR_PC1_GOAL_ROLE : public HL7Group {
  PPR_PC1_GOAL_ROLE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    PPR_PC1_ROL_1,
    PPR_PC1_VAR_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "PPR_PC1_GOAL_ROLE"; }
  PPR_PC1_GOAL_ROLE* create() const { return new PPR_PC1_GOAL_ROLE(); }

 private:
  /* Initialize object */
  void init() {
    setName("PPR_PC1.GOAL_ROLE");
    addObject<ROL>(PPR_PC1_ROL_1, "ROL.1", HL7::optional, HL7::repetition_on);
    addObject<VAR>(PPR_PC1_VAR_2, "VAR.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ROL* getROL_1(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, PPR_PC1_ROL_1);
  }
  VAR* getVAR_2(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_2);
  }

  /* Checker list */
  bool isROL_1(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ROL_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_2(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* PPR_PC1_GOAL_ROLE */

/* GOAL_OBSERVATION */
struct PPR_PC1_GOAL_OBSERVATION : public HL7Group {
  PPR_PC1_GOAL_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    PPR_PC1_NTE_1,
    PPR_PC1_OBX_2,
    PPR_PC1_PRT_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "PPR_PC1_GOAL_OBSERVATION"; }
  PPR_PC1_GOAL_OBSERVATION* create() const { return new PPR_PC1_GOAL_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("PPR_PC1.GOAL_OBSERVATION");
    addObject<NTE>(PPR_PC1_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(PPR_PC1_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(PPR_PC1_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, PPR_PC1_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, PPR_PC1_PRT_3);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* PPR_PC1_GOAL_OBSERVATION */

/* ORDER_DETAIL */
struct PPR_PC1_ORDER_DETAIL : public HL7Group {
  PPR_PC1_ORDER_DETAIL() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    PPR_PC1_Hxx_1,
    PPR_PC1_NTE_2,
    PPR_PC1_OBR_3,
    PPR_PC1_PPR_PC1_ORDER_OBSERVATION_4,
    PPR_PC1_VAR_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "PPR_PC1_ORDER_DETAIL"; }
  PPR_PC1_ORDER_DETAIL* create() const { return new PPR_PC1_ORDER_DETAIL(); }

 private:
  /* Initialize object */
  void init() {
    setName("PPR_PC1.ORDER_DETAIL");
    addObject<Hxx>(PPR_PC1_Hxx_1, "Hxx.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(PPR_PC1_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
    addObject<OBR>(PPR_PC1_OBR_3, "OBR.3", HL7::optional, HL7::repetition_on);
    addObject<PPR_PC1_ORDER_OBSERVATION>(PPR_PC1_PPR_PC1_ORDER_OBSERVATION_4, "PPR_PC1_ORDER_OBSERVATION.4", HL7::optional, HL7::repetition_on);
    addObject<VAR>(PPR_PC1_VAR_5, "VAR.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  Hxx* getHxx_1(size_t index = 0) {
    return (Hxx*)this->getObjectSafe(index, PPR_PC1_Hxx_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_2);
  }
  OBR* getOBR_3(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, PPR_PC1_OBR_3);
  }
  PPR_PC1_ORDER_OBSERVATION* getPPR_PC1_ORDER_OBSERVATION_4(size_t index = 0) {
    return (PPR_PC1_ORDER_OBSERVATION*)this->getObjectSafe(index, PPR_PC1_PPR_PC1_ORDER_OBSERVATION_4);
  }
  VAR* getVAR_5(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_5);
  }

  /* Checker list */
  bool isHxx_1(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_Hxx_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_3(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_OBR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPPR_PC1_ORDER_OBSERVATION_4(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PPR_PC1_ORDER_OBSERVATION_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_5(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* PPR_PC1_ORDER_DETAIL */

/* ORDER_OBSERVATION */
struct PPR_PC1_ORDER_OBSERVATION : public HL7Group {
  PPR_PC1_ORDER_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    PPR_PC1_NTE_1,
    PPR_PC1_OBX_2,
    PPR_PC1_PRT_3,
    PPR_PC1_VAR_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "PPR_PC1_ORDER_OBSERVATION"; }
  PPR_PC1_ORDER_OBSERVATION* create() const { return new PPR_PC1_ORDER_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("PPR_PC1.ORDER_OBSERVATION");
    addObject<NTE>(PPR_PC1_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(PPR_PC1_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(PPR_PC1_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
    addObject<VAR>(PPR_PC1_VAR_4, "VAR.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, PPR_PC1_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, PPR_PC1_PRT_3);
  }
  VAR* getVAR_4(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_4);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_4(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* PPR_PC1_ORDER_OBSERVATION */

/* PPR_PC1 */
struct PPR_PC1 : public HL7Message {
  PPR_PC1() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    PPR_PC1_MSH_1,
    PPR_PC1_SFT_2,
    PPR_PC1_UAC_3,
    PPR_PC1_PID_4,
    PPR_PC1_PV1_7,
    PPR_PC1_PV2_8,
    PPR_PC1_PRB_9,
    PPR_PC1_NTE_10,
    PPR_PC1_VAR_11,
    PPR_PC1_ROL_17,
    PPR_PC1_VAR_18,
    PPR_PC1_ROL_19,
    PPR_PC1_VAR_20,
    PPR_PC1_PTH_21,
    PPR_PC1_VAR_22,
    PPR_PC1_ROL_23,
    PPR_PC1_VAR_24,
    PPR_PC1_PTH_25,
    PPR_PC1_VAR_26,
    PPR_PC1_OBX_27,
    PPR_PC1_PRT_28,
    PPR_PC1_NTE_29,
    PPR_PC1_ROL_30,
    PPR_PC1_VAR_31,
    PPR_PC1_PTH_32,
    PPR_PC1_VAR_33,
    PPR_PC1_OBX_34,
    PPR_PC1_PRT_35,
    PPR_PC1_NTE_36,
    PPR_PC1_GOL_37,
    PPR_PC1_NTE_38,
    PPR_PC1_VAR_39,
    PPR_PC1_ROL_42,
    PPR_PC1_VAR_43,
    PPR_PC1_ROL_44,
    PPR_PC1_VAR_45,
    PPR_PC1_OBX_46,
    PPR_PC1_PRT_47,
    PPR_PC1_NTE_48,
    PPR_PC1_ROL_49,
    PPR_PC1_VAR_50,
    PPR_PC1_PTH_51,
    PPR_PC1_VAR_52,
    PPR_PC1_OBX_53,
    PPR_PC1_PRT_54,
    PPR_PC1_NTE_55,
    PPR_PC1_GOL_56,
    PPR_PC1_NTE_57,
    PPR_PC1_VAR_58,
    PPR_PC1_ORC_61,
    PPR_PC1_ROL_63,
    PPR_PC1_VAR_64,
    PPR_PC1_ROL_65,
    PPR_PC1_VAR_66,
    PPR_PC1_OBX_67,
    PPR_PC1_PRT_68,
    PPR_PC1_NTE_69,
    PPR_PC1_ROL_70,
    PPR_PC1_VAR_71,
    PPR_PC1_OBX_72,
    PPR_PC1_PRT_73,
    PPR_PC1_NTE_74,
    PPR_PC1_OBR_75,
    PPR_PC1_Hxx_76,
    PPR_PC1_NTE_77,
    PPR_PC1_VAR_78,
    PPR_PC1_OBX_101,
    PPR_PC1_PRT_102,
    PPR_PC1_NTE_103,
    PPR_PC1_VAR_104,
    FIELD_ID_MAX
  };

  const char* className() const { return "PPR_PC1"; }
  PPR_PC1* create() const { return new PPR_PC1(); }

 private:
  /* Initialize object */
  void init() {
    setName("PPR_PC1");
    addObject<MSH>(PPR_PC1_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(PPR_PC1_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(PPR_PC1_UAC_3, "UAC.3", HL7::optional, HL7::repetition_off);
    addObject<PID>(PPR_PC1_PID_4, "PID.4", HL7::initialized, HL7::repetition_off);
    addObject<PV1>(PPR_PC1_PV1_7, "PV1.7", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(PPR_PC1_PV2_8, "PV2.8", HL7::optional, HL7::repetition_off);
    addObject<PRB>(PPR_PC1_PRB_9, "PRB.9", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(PPR_PC1_NTE_10, "NTE.10", HL7::optional, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_11, "VAR.11", HL7::optional, HL7::repetition_off);
    addObject<ROL>(PPR_PC1_ROL_17, "ROL.17", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_18, "VAR.18", HL7::optional, HL7::repetition_off);
    addObject<ROL>(PPR_PC1_ROL_19, "ROL.19", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_20, "VAR.20", HL7::optional, HL7::repetition_off);
    addObject<PTH>(PPR_PC1_PTH_21, "PTH.21", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_22, "VAR.22", HL7::optional, HL7::repetition_off);
    addObject<ROL>(PPR_PC1_ROL_23, "ROL.23", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_24, "VAR.24", HL7::optional, HL7::repetition_off);
    addObject<PTH>(PPR_PC1_PTH_25, "PTH.25", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_26, "VAR.26", HL7::optional, HL7::repetition_off);
    addObject<OBX>(PPR_PC1_OBX_27, "OBX.27", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(PPR_PC1_PRT_28, "PRT.28", HL7::optional, HL7::repetition_off);
    addObject<NTE>(PPR_PC1_NTE_29, "NTE.29", HL7::optional, HL7::repetition_off);
    addObject<ROL>(PPR_PC1_ROL_30, "ROL.30", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_31, "VAR.31", HL7::optional, HL7::repetition_off);
    addObject<PTH>(PPR_PC1_PTH_32, "PTH.32", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_33, "VAR.33", HL7::optional, HL7::repetition_off);
    addObject<OBX>(PPR_PC1_OBX_34, "OBX.34", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(PPR_PC1_PRT_35, "PRT.35", HL7::optional, HL7::repetition_off);
    addObject<NTE>(PPR_PC1_NTE_36, "NTE.36", HL7::optional, HL7::repetition_off);
    addObject<GOL>(PPR_PC1_GOL_37, "GOL.37", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(PPR_PC1_NTE_38, "NTE.38", HL7::optional, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_39, "VAR.39", HL7::optional, HL7::repetition_off);
    addObject<ROL>(PPR_PC1_ROL_42, "ROL.42", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_43, "VAR.43", HL7::optional, HL7::repetition_off);
    addObject<ROL>(PPR_PC1_ROL_44, "ROL.44", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_45, "VAR.45", HL7::optional, HL7::repetition_off);
    addObject<OBX>(PPR_PC1_OBX_46, "OBX.46", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(PPR_PC1_PRT_47, "PRT.47", HL7::optional, HL7::repetition_off);
    addObject<NTE>(PPR_PC1_NTE_48, "NTE.48", HL7::optional, HL7::repetition_off);
    addObject<ROL>(PPR_PC1_ROL_49, "ROL.49", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_50, "VAR.50", HL7::optional, HL7::repetition_off);
    addObject<PTH>(PPR_PC1_PTH_51, "PTH.51", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_52, "VAR.52", HL7::optional, HL7::repetition_off);
    addObject<OBX>(PPR_PC1_OBX_53, "OBX.53", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(PPR_PC1_PRT_54, "PRT.54", HL7::optional, HL7::repetition_off);
    addObject<NTE>(PPR_PC1_NTE_55, "NTE.55", HL7::optional, HL7::repetition_off);
    addObject<GOL>(PPR_PC1_GOL_56, "GOL.56", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(PPR_PC1_NTE_57, "NTE.57", HL7::optional, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_58, "VAR.58", HL7::optional, HL7::repetition_off);
    addObject<ORC>(PPR_PC1_ORC_61, "ORC.61", HL7::initialized, HL7::repetition_off);
    addObject<ROL>(PPR_PC1_ROL_63, "ROL.63", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_64, "VAR.64", HL7::optional, HL7::repetition_off);
    addObject<ROL>(PPR_PC1_ROL_65, "ROL.65", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_66, "VAR.66", HL7::optional, HL7::repetition_off);
    addObject<OBX>(PPR_PC1_OBX_67, "OBX.67", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(PPR_PC1_PRT_68, "PRT.68", HL7::optional, HL7::repetition_off);
    addObject<NTE>(PPR_PC1_NTE_69, "NTE.69", HL7::optional, HL7::repetition_off);
    addObject<ROL>(PPR_PC1_ROL_70, "ROL.70", HL7::initialized, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_71, "VAR.71", HL7::optional, HL7::repetition_off);
    addObject<OBX>(PPR_PC1_OBX_72, "OBX.72", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(PPR_PC1_PRT_73, "PRT.73", HL7::optional, HL7::repetition_off);
    addObject<NTE>(PPR_PC1_NTE_74, "NTE.74", HL7::optional, HL7::repetition_off);
    addObject<OBR>(PPR_PC1_OBR_75, "OBR.75", HL7::initialized, HL7::repetition_off);
    addObject<Hxx>(PPR_PC1_Hxx_76, "Hxx.76", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(PPR_PC1_NTE_77, "NTE.77", HL7::optional, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_78, "VAR.78", HL7::optional, HL7::repetition_off);
    addObject<OBX>(PPR_PC1_OBX_101, "OBX.101", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(PPR_PC1_PRT_102, "PRT.102", HL7::optional, HL7::repetition_off);
    addObject<NTE>(PPR_PC1_NTE_103, "NTE.103", HL7::optional, HL7::repetition_off);
    addObject<VAR>(PPR_PC1_VAR_104, "VAR.104", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, PPR_PC1_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, PPR_PC1_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, PPR_PC1_UAC_3);
  }
  PID* getPID_4(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, PPR_PC1_PID_4);
  }
  PV1* getPV1_7(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, PPR_PC1_PV1_7);
  }
  PV2* getPV2_8(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, PPR_PC1_PV2_8);
  }
  PRB* getPRB_9(size_t index = 0) {
    return (PRB*)this->getObjectSafe(index, PPR_PC1_PRB_9);
  }
  NTE* getNTE_10(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_10);
  }
  VAR* getVAR_11(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_11);
  }
  ROL* getROL_17(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, PPR_PC1_ROL_17);
  }
  VAR* getVAR_18(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_18);
  }
  ROL* getROL_19(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, PPR_PC1_ROL_19);
  }
  VAR* getVAR_20(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_20);
  }
  PTH* getPTH_21(size_t index = 0) {
    return (PTH*)this->getObjectSafe(index, PPR_PC1_PTH_21);
  }
  VAR* getVAR_22(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_22);
  }
  ROL* getROL_23(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, PPR_PC1_ROL_23);
  }
  VAR* getVAR_24(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_24);
  }
  PTH* getPTH_25(size_t index = 0) {
    return (PTH*)this->getObjectSafe(index, PPR_PC1_PTH_25);
  }
  VAR* getVAR_26(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_26);
  }
  OBX* getOBX_27(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, PPR_PC1_OBX_27);
  }
  PRT* getPRT_28(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, PPR_PC1_PRT_28);
  }
  NTE* getNTE_29(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_29);
  }
  ROL* getROL_30(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, PPR_PC1_ROL_30);
  }
  VAR* getVAR_31(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_31);
  }
  PTH* getPTH_32(size_t index = 0) {
    return (PTH*)this->getObjectSafe(index, PPR_PC1_PTH_32);
  }
  VAR* getVAR_33(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_33);
  }
  OBX* getOBX_34(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, PPR_PC1_OBX_34);
  }
  PRT* getPRT_35(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, PPR_PC1_PRT_35);
  }
  NTE* getNTE_36(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_36);
  }
  GOL* getGOL_37(size_t index = 0) {
    return (GOL*)this->getObjectSafe(index, PPR_PC1_GOL_37);
  }
  NTE* getNTE_38(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_38);
  }
  VAR* getVAR_39(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_39);
  }
  ROL* getROL_42(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, PPR_PC1_ROL_42);
  }
  VAR* getVAR_43(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_43);
  }
  ROL* getROL_44(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, PPR_PC1_ROL_44);
  }
  VAR* getVAR_45(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_45);
  }
  OBX* getOBX_46(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, PPR_PC1_OBX_46);
  }
  PRT* getPRT_47(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, PPR_PC1_PRT_47);
  }
  NTE* getNTE_48(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_48);
  }
  ROL* getROL_49(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, PPR_PC1_ROL_49);
  }
  VAR* getVAR_50(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_50);
  }
  PTH* getPTH_51(size_t index = 0) {
    return (PTH*)this->getObjectSafe(index, PPR_PC1_PTH_51);
  }
  VAR* getVAR_52(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_52);
  }
  OBX* getOBX_53(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, PPR_PC1_OBX_53);
  }
  PRT* getPRT_54(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, PPR_PC1_PRT_54);
  }
  NTE* getNTE_55(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_55);
  }
  GOL* getGOL_56(size_t index = 0) {
    return (GOL*)this->getObjectSafe(index, PPR_PC1_GOL_56);
  }
  NTE* getNTE_57(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_57);
  }
  VAR* getVAR_58(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_58);
  }
  ORC* getORC_61(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, PPR_PC1_ORC_61);
  }
  ROL* getROL_63(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, PPR_PC1_ROL_63);
  }
  VAR* getVAR_64(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_64);
  }
  ROL* getROL_65(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, PPR_PC1_ROL_65);
  }
  VAR* getVAR_66(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_66);
  }
  OBX* getOBX_67(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, PPR_PC1_OBX_67);
  }
  PRT* getPRT_68(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, PPR_PC1_PRT_68);
  }
  NTE* getNTE_69(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_69);
  }
  ROL* getROL_70(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, PPR_PC1_ROL_70);
  }
  VAR* getVAR_71(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_71);
  }
  OBX* getOBX_72(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, PPR_PC1_OBX_72);
  }
  PRT* getPRT_73(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, PPR_PC1_PRT_73);
  }
  NTE* getNTE_74(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_74);
  }
  OBR* getOBR_75(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, PPR_PC1_OBR_75);
  }
  Hxx* getHxx_76(size_t index = 0) {
    return (Hxx*)this->getObjectSafe(index, PPR_PC1_Hxx_76);
  }
  NTE* getNTE_77(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_77);
  }
  VAR* getVAR_78(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_78);
  }
  OBX* getOBX_101(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, PPR_PC1_OBX_101);
  }
  PRT* getPRT_102(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, PPR_PC1_PRT_102);
  }
  NTE* getNTE_103(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, PPR_PC1_NTE_103);
  }
  VAR* getVAR_104(size_t index = 0) {
    return (VAR*)this->getObjectSafe(index, PPR_PC1_VAR_104);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_4(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PID_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_7(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PV1_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_8(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PV2_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRB_9(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PRB_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_10(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_11(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_17(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ROL_17) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_18(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_18) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_19(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ROL_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_20(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_20) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPTH_21(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PTH_21) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_22(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_23(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ROL_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_24(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_24) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPTH_25(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PTH_25) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_26(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_26) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_27(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_OBX_27) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_28(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PRT_28) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_29(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_29) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_30(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ROL_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_31(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_31) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPTH_32(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PTH_32) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_33(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_33) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_34(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_OBX_34) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_35(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PRT_35) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_36(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_36) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isGOL_37(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_GOL_37) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_38(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_38) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_39(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_39) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_42(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ROL_42) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_43(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_43) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_44(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ROL_44) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_45(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_45) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_46(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_OBX_46) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_47(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PRT_47) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_48(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_48) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_49(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ROL_49) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_50(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_50) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPTH_51(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PTH_51) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_52(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_52) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_53(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_OBX_53) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_54(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PRT_54) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_55(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_55) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isGOL_56(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_GOL_56) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_57(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_57) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_58(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_58) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_61(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ORC_61) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_63(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ROL_63) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_64(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_64) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_65(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ROL_65) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_66(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_66) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_67(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_OBX_67) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_68(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PRT_68) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_69(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_69) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_70(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_ROL_70) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_71(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_71) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_72(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_OBX_72) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_73(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PRT_73) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_74(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_74) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_75(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_OBR_75) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isHxx_76(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_Hxx_76) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_77(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_77) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_78(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_78) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_101(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_OBX_101) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_102(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_PRT_102) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_103(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_NTE_103) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isVAR_104(size_t index = 0) {
    try {
      return this->getObject(index, PPR_PC1_VAR_104) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* PPR_PC1_ */
} /* namespace HL7_281 */
#endif /*  __PPR_PC1__281_H__ */
