/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:07:24 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __SRM_S01__281_H__
#define __SRM_S01__281_H__

#include "../../common/Util.h"
#include "../segment/AIG.h"
#include "../segment/AIL.h"
#include "../segment/AIP.h"
#include "../segment/AIS.h"
#include "../segment/APR.h"
#include "../segment/ARQ.h"
#include "../segment/DG1.h"
#include "../segment/MSH.h"
#include "../segment/NTE.h"
#include "../segment/OBX.h"
#include "../segment/PID.h"
#include "../segment/PRT.h"
#include "../segment/PV1.h"
#include "../segment/PV2.h"
#include "../segment/RGS.h"

namespace HL7_281 {

/* Internal structures/groups */
struct SRM_S01_PATIENT; /* PATIENT */
struct SRM_S01_RESOURCES; /* RESOURCES */
struct SRM_S01_OBXPRT; /* OBXPRT */
struct SRM_S01_SERVICE; /* SERVICE */
struct SRM_S01_GENERAL_RESOURCE; /* GENERAL_RESOURCE */
struct SRM_S01_LOCATION_RESOURCE; /* LOCATION_RESOURCE */
struct SRM_S01_PERSONNEL_RESOURCE; /* PERSONNEL_RESOURCE */

/* PATIENT */
struct SRM_S01_PATIENT : public HL7Group {
  SRM_S01_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRM_S01_DG1_1,
    SRM_S01_PID_2,
    SRM_S01_PV1_3,
    SRM_S01_PV2_4,
    SRM_S01_SRM_S01_OBXPRT_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRM_S01_PATIENT"; }
  SRM_S01_PATIENT* create() const { return new SRM_S01_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRM_S01.PATIENT");
    addObject<DG1>(SRM_S01_DG1_1, "DG1.1", HL7::optional, HL7::repetition_on);
    addObject<PID>(SRM_S01_PID_2, "PID.2", HL7::optional, HL7::repetition_on);
    addObject<PV1>(SRM_S01_PV1_3, "PV1.3", HL7::optional, HL7::repetition_on);
    addObject<PV2>(SRM_S01_PV2_4, "PV2.4", HL7::optional, HL7::repetition_on);
    addObject<SRM_S01_OBXPRT>(SRM_S01_SRM_S01_OBXPRT_5, "SRM_S01_OBXPRT.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  DG1* getDG1_1(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, SRM_S01_DG1_1);
  }
  PID* getPID_2(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, SRM_S01_PID_2);
  }
  PV1* getPV1_3(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, SRM_S01_PV1_3);
  }
  PV2* getPV2_4(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, SRM_S01_PV2_4);
  }
  SRM_S01_OBXPRT* getSRM_S01_OBXPRT_5(size_t index = 0) {
    return (SRM_S01_OBXPRT*)this->getObjectSafe(index, SRM_S01_SRM_S01_OBXPRT_5);
  }

  /* Checker list */
  bool isDG1_1(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_DG1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_2(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_PID_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_3(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_PV1_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_4(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_PV2_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSRM_S01_OBXPRT_5(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_SRM_S01_OBXPRT_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRM_S01_PATIENT */

/* RESOURCES */
struct SRM_S01_RESOURCES : public HL7Group {
  SRM_S01_RESOURCES() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRM_S01_RGS_1,
    SRM_S01_SRM_S01_GENERAL_RESOURCE_2,
    SRM_S01_SRM_S01_LOCATION_RESOURCE_3,
    SRM_S01_SRM_S01_PERSONNEL_RESOURCE_4,
    SRM_S01_SRM_S01_SERVICE_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRM_S01_RESOURCES"; }
  SRM_S01_RESOURCES* create() const { return new SRM_S01_RESOURCES(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRM_S01.RESOURCES");
    addObject<RGS>(SRM_S01_RGS_1, "RGS.1", HL7::optional, HL7::repetition_on);
    addObject<SRM_S01_GENERAL_RESOURCE>(SRM_S01_SRM_S01_GENERAL_RESOURCE_2, "SRM_S01_GENERAL_RESOURCE.2", HL7::optional, HL7::repetition_on);
    addObject<SRM_S01_LOCATION_RESOURCE>(SRM_S01_SRM_S01_LOCATION_RESOURCE_3, "SRM_S01_LOCATION_RESOURCE.3", HL7::optional, HL7::repetition_on);
    addObject<SRM_S01_PERSONNEL_RESOURCE>(SRM_S01_SRM_S01_PERSONNEL_RESOURCE_4, "SRM_S01_PERSONNEL_RESOURCE.4", HL7::optional, HL7::repetition_on);
    addObject<SRM_S01_SERVICE>(SRM_S01_SRM_S01_SERVICE_5, "SRM_S01_SERVICE.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  RGS* getRGS_1(size_t index = 0) {
    return (RGS*)this->getObjectSafe(index, SRM_S01_RGS_1);
  }
  SRM_S01_GENERAL_RESOURCE* getSRM_S01_GENERAL_RESOURCE_2(size_t index = 0) {
    return (SRM_S01_GENERAL_RESOURCE*)this->getObjectSafe(index, SRM_S01_SRM_S01_GENERAL_RESOURCE_2);
  }
  SRM_S01_LOCATION_RESOURCE* getSRM_S01_LOCATION_RESOURCE_3(size_t index = 0) {
    return (SRM_S01_LOCATION_RESOURCE*)this->getObjectSafe(index, SRM_S01_SRM_S01_LOCATION_RESOURCE_3);
  }
  SRM_S01_PERSONNEL_RESOURCE* getSRM_S01_PERSONNEL_RESOURCE_4(size_t index = 0) {
    return (SRM_S01_PERSONNEL_RESOURCE*)this->getObjectSafe(index, SRM_S01_SRM_S01_PERSONNEL_RESOURCE_4);
  }
  SRM_S01_SERVICE* getSRM_S01_SERVICE_5(size_t index = 0) {
    return (SRM_S01_SERVICE*)this->getObjectSafe(index, SRM_S01_SRM_S01_SERVICE_5);
  }

  /* Checker list */
  bool isRGS_1(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_RGS_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSRM_S01_GENERAL_RESOURCE_2(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_SRM_S01_GENERAL_RESOURCE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSRM_S01_LOCATION_RESOURCE_3(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_SRM_S01_LOCATION_RESOURCE_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSRM_S01_PERSONNEL_RESOURCE_4(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_SRM_S01_PERSONNEL_RESOURCE_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSRM_S01_SERVICE_5(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_SRM_S01_SERVICE_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRM_S01_RESOURCES */

/* OBXPRT */
struct SRM_S01_OBXPRT : public HL7Group {
  SRM_S01_OBXPRT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRM_S01_OBX_1,
    SRM_S01_PRT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRM_S01_OBXPRT"; }
  SRM_S01_OBXPRT* create() const { return new SRM_S01_OBXPRT(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRM_S01.OBXPRT");
    addObject<OBX>(SRM_S01_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(SRM_S01_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, SRM_S01_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, SRM_S01_PRT_2);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRM_S01_OBXPRT */

/* SERVICE */
struct SRM_S01_SERVICE : public HL7Group {
  SRM_S01_SERVICE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRM_S01_AIS_1,
    SRM_S01_APR_2,
    SRM_S01_NTE_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRM_S01_SERVICE"; }
  SRM_S01_SERVICE* create() const { return new SRM_S01_SERVICE(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRM_S01.SERVICE");
    addObject<AIS>(SRM_S01_AIS_1, "AIS.1", HL7::optional, HL7::repetition_on);
    addObject<APR>(SRM_S01_APR_2, "APR.2", HL7::optional, HL7::repetition_on);
    addObject<NTE>(SRM_S01_NTE_3, "NTE.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AIS* getAIS_1(size_t index = 0) {
    return (AIS*)this->getObjectSafe(index, SRM_S01_AIS_1);
  }
  APR* getAPR_2(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_2);
  }
  NTE* getNTE_3(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_3);
  }

  /* Checker list */
  bool isAIS_1(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIS_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_2(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_3(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRM_S01_SERVICE */

/* GENERAL_RESOURCE */
struct SRM_S01_GENERAL_RESOURCE : public HL7Group {
  SRM_S01_GENERAL_RESOURCE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRM_S01_AIG_1,
    SRM_S01_APR_2,
    SRM_S01_NTE_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRM_S01_GENERAL_RESOURCE"; }
  SRM_S01_GENERAL_RESOURCE* create() const { return new SRM_S01_GENERAL_RESOURCE(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRM_S01.GENERAL_RESOURCE");
    addObject<AIG>(SRM_S01_AIG_1, "AIG.1", HL7::optional, HL7::repetition_on);
    addObject<APR>(SRM_S01_APR_2, "APR.2", HL7::optional, HL7::repetition_on);
    addObject<NTE>(SRM_S01_NTE_3, "NTE.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AIG* getAIG_1(size_t index = 0) {
    return (AIG*)this->getObjectSafe(index, SRM_S01_AIG_1);
  }
  APR* getAPR_2(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_2);
  }
  NTE* getNTE_3(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_3);
  }

  /* Checker list */
  bool isAIG_1(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIG_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_2(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_3(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRM_S01_GENERAL_RESOURCE */

/* LOCATION_RESOURCE */
struct SRM_S01_LOCATION_RESOURCE : public HL7Group {
  SRM_S01_LOCATION_RESOURCE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRM_S01_AIL_1,
    SRM_S01_APR_2,
    SRM_S01_NTE_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRM_S01_LOCATION_RESOURCE"; }
  SRM_S01_LOCATION_RESOURCE* create() const { return new SRM_S01_LOCATION_RESOURCE(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRM_S01.LOCATION_RESOURCE");
    addObject<AIL>(SRM_S01_AIL_1, "AIL.1", HL7::optional, HL7::repetition_on);
    addObject<APR>(SRM_S01_APR_2, "APR.2", HL7::optional, HL7::repetition_on);
    addObject<NTE>(SRM_S01_NTE_3, "NTE.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AIL* getAIL_1(size_t index = 0) {
    return (AIL*)this->getObjectSafe(index, SRM_S01_AIL_1);
  }
  APR* getAPR_2(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_2);
  }
  NTE* getNTE_3(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_3);
  }

  /* Checker list */
  bool isAIL_1(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIL_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_2(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_3(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRM_S01_LOCATION_RESOURCE */

/* PERSONNEL_RESOURCE */
struct SRM_S01_PERSONNEL_RESOURCE : public HL7Group {
  SRM_S01_PERSONNEL_RESOURCE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRM_S01_AIP_1,
    SRM_S01_APR_2,
    SRM_S01_NTE_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRM_S01_PERSONNEL_RESOURCE"; }
  SRM_S01_PERSONNEL_RESOURCE* create() const { return new SRM_S01_PERSONNEL_RESOURCE(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRM_S01.PERSONNEL_RESOURCE");
    addObject<AIP>(SRM_S01_AIP_1, "AIP.1", HL7::optional, HL7::repetition_on);
    addObject<APR>(SRM_S01_APR_2, "APR.2", HL7::optional, HL7::repetition_on);
    addObject<NTE>(SRM_S01_NTE_3, "NTE.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AIP* getAIP_1(size_t index = 0) {
    return (AIP*)this->getObjectSafe(index, SRM_S01_AIP_1);
  }
  APR* getAPR_2(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_2);
  }
  NTE* getNTE_3(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_3);
  }

  /* Checker list */
  bool isAIP_1(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIP_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_2(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_3(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRM_S01_PERSONNEL_RESOURCE */

/* SRM_S01 */
struct SRM_S01 : public HL7Message {
  SRM_S01() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRM_S01_MSH_1,
    SRM_S01_ARQ_2,
    SRM_S01_APR_3,
    SRM_S01_NTE_4,
    SRM_S01_PID_7,
    SRM_S01_PV1_8,
    SRM_S01_PV2_9,
    SRM_S01_DG1_11,
    SRM_S01_OBX_12,
    SRM_S01_PRT_13,
    SRM_S01_RGS_14,
    SRM_S01_AIS_19,
    SRM_S01_APR_20,
    SRM_S01_NTE_21,
    SRM_S01_AIS_22,
    SRM_S01_APR_23,
    SRM_S01_NTE_24,
    SRM_S01_AIG_25,
    SRM_S01_APR_26,
    SRM_S01_NTE_27,
    SRM_S01_AIS_28,
    SRM_S01_APR_29,
    SRM_S01_NTE_30,
    SRM_S01_AIG_31,
    SRM_S01_APR_32,
    SRM_S01_NTE_33,
    SRM_S01_AIL_34,
    SRM_S01_APR_35,
    SRM_S01_NTE_36,
    SRM_S01_AIS_37,
    SRM_S01_APR_38,
    SRM_S01_NTE_39,
    SRM_S01_AIG_40,
    SRM_S01_APR_41,
    SRM_S01_NTE_42,
    SRM_S01_AIL_43,
    SRM_S01_APR_44,
    SRM_S01_NTE_45,
    SRM_S01_AIP_46,
    SRM_S01_APR_47,
    SRM_S01_NTE_48,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRM_S01"; }
  SRM_S01* create() const { return new SRM_S01(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRM_S01");
    addObject<MSH>(SRM_S01_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<ARQ>(SRM_S01_ARQ_2, "ARQ.2", HL7::initialized, HL7::repetition_off);
    addObject<APR>(SRM_S01_APR_3, "APR.3", HL7::optional, HL7::repetition_off);
    addObject<NTE>(SRM_S01_NTE_4, "NTE.4", HL7::optional, HL7::repetition_on);
    addObject<PID>(SRM_S01_PID_7, "PID.7", HL7::initialized, HL7::repetition_off);
    addObject<PV1>(SRM_S01_PV1_8, "PV1.8", HL7::optional, HL7::repetition_off);
    addObject<PV2>(SRM_S01_PV2_9, "PV2.9", HL7::optional, HL7::repetition_off);
    addObject<DG1>(SRM_S01_DG1_11, "DG1.11", HL7::optional, HL7::repetition_off);
    addObject<OBX>(SRM_S01_OBX_12, "OBX.12", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(SRM_S01_PRT_13, "PRT.13", HL7::optional, HL7::repetition_off);
    addObject<RGS>(SRM_S01_RGS_14, "RGS.14", HL7::initialized, HL7::repetition_off);
    addObject<AIS>(SRM_S01_AIS_19, "AIS.19", HL7::initialized, HL7::repetition_off);
    addObject<APR>(SRM_S01_APR_20, "APR.20", HL7::optional, HL7::repetition_off);
    addObject<NTE>(SRM_S01_NTE_21, "NTE.21", HL7::optional, HL7::repetition_off);
    addObject<AIS>(SRM_S01_AIS_22, "AIS.22", HL7::initialized, HL7::repetition_off);
    addObject<APR>(SRM_S01_APR_23, "APR.23", HL7::optional, HL7::repetition_off);
    addObject<NTE>(SRM_S01_NTE_24, "NTE.24", HL7::optional, HL7::repetition_off);
    addObject<AIG>(SRM_S01_AIG_25, "AIG.25", HL7::initialized, HL7::repetition_off);
    addObject<APR>(SRM_S01_APR_26, "APR.26", HL7::optional, HL7::repetition_off);
    addObject<NTE>(SRM_S01_NTE_27, "NTE.27", HL7::optional, HL7::repetition_off);
    addObject<AIS>(SRM_S01_AIS_28, "AIS.28", HL7::initialized, HL7::repetition_off);
    addObject<APR>(SRM_S01_APR_29, "APR.29", HL7::optional, HL7::repetition_off);
    addObject<NTE>(SRM_S01_NTE_30, "NTE.30", HL7::optional, HL7::repetition_off);
    addObject<AIG>(SRM_S01_AIG_31, "AIG.31", HL7::initialized, HL7::repetition_off);
    addObject<APR>(SRM_S01_APR_32, "APR.32", HL7::optional, HL7::repetition_off);
    addObject<NTE>(SRM_S01_NTE_33, "NTE.33", HL7::optional, HL7::repetition_off);
    addObject<AIL>(SRM_S01_AIL_34, "AIL.34", HL7::initialized, HL7::repetition_off);
    addObject<APR>(SRM_S01_APR_35, "APR.35", HL7::optional, HL7::repetition_off);
    addObject<NTE>(SRM_S01_NTE_36, "NTE.36", HL7::optional, HL7::repetition_off);
    addObject<AIS>(SRM_S01_AIS_37, "AIS.37", HL7::initialized, HL7::repetition_off);
    addObject<APR>(SRM_S01_APR_38, "APR.38", HL7::optional, HL7::repetition_off);
    addObject<NTE>(SRM_S01_NTE_39, "NTE.39", HL7::optional, HL7::repetition_off);
    addObject<AIG>(SRM_S01_AIG_40, "AIG.40", HL7::initialized, HL7::repetition_off);
    addObject<APR>(SRM_S01_APR_41, "APR.41", HL7::optional, HL7::repetition_off);
    addObject<NTE>(SRM_S01_NTE_42, "NTE.42", HL7::optional, HL7::repetition_off);
    addObject<AIL>(SRM_S01_AIL_43, "AIL.43", HL7::initialized, HL7::repetition_off);
    addObject<APR>(SRM_S01_APR_44, "APR.44", HL7::optional, HL7::repetition_off);
    addObject<NTE>(SRM_S01_NTE_45, "NTE.45", HL7::optional, HL7::repetition_off);
    addObject<AIP>(SRM_S01_AIP_46, "AIP.46", HL7::initialized, HL7::repetition_off);
    addObject<APR>(SRM_S01_APR_47, "APR.47", HL7::optional, HL7::repetition_off);
    addObject<NTE>(SRM_S01_NTE_48, "NTE.48", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, SRM_S01_MSH_1);
  }
  ARQ* getARQ_2(size_t index = 0) {
    return (ARQ*)this->getObjectSafe(index, SRM_S01_ARQ_2);
  }
  APR* getAPR_3(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_3);
  }
  NTE* getNTE_4(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_4);
  }
  PID* getPID_7(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, SRM_S01_PID_7);
  }
  PV1* getPV1_8(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, SRM_S01_PV1_8);
  }
  PV2* getPV2_9(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, SRM_S01_PV2_9);
  }
  DG1* getDG1_11(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, SRM_S01_DG1_11);
  }
  OBX* getOBX_12(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, SRM_S01_OBX_12);
  }
  PRT* getPRT_13(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, SRM_S01_PRT_13);
  }
  RGS* getRGS_14(size_t index = 0) {
    return (RGS*)this->getObjectSafe(index, SRM_S01_RGS_14);
  }
  AIS* getAIS_19(size_t index = 0) {
    return (AIS*)this->getObjectSafe(index, SRM_S01_AIS_19);
  }
  APR* getAPR_20(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_20);
  }
  NTE* getNTE_21(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_21);
  }
  AIS* getAIS_22(size_t index = 0) {
    return (AIS*)this->getObjectSafe(index, SRM_S01_AIS_22);
  }
  APR* getAPR_23(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_23);
  }
  NTE* getNTE_24(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_24);
  }
  AIG* getAIG_25(size_t index = 0) {
    return (AIG*)this->getObjectSafe(index, SRM_S01_AIG_25);
  }
  APR* getAPR_26(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_26);
  }
  NTE* getNTE_27(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_27);
  }
  AIS* getAIS_28(size_t index = 0) {
    return (AIS*)this->getObjectSafe(index, SRM_S01_AIS_28);
  }
  APR* getAPR_29(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_29);
  }
  NTE* getNTE_30(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_30);
  }
  AIG* getAIG_31(size_t index = 0) {
    return (AIG*)this->getObjectSafe(index, SRM_S01_AIG_31);
  }
  APR* getAPR_32(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_32);
  }
  NTE* getNTE_33(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_33);
  }
  AIL* getAIL_34(size_t index = 0) {
    return (AIL*)this->getObjectSafe(index, SRM_S01_AIL_34);
  }
  APR* getAPR_35(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_35);
  }
  NTE* getNTE_36(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_36);
  }
  AIS* getAIS_37(size_t index = 0) {
    return (AIS*)this->getObjectSafe(index, SRM_S01_AIS_37);
  }
  APR* getAPR_38(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_38);
  }
  NTE* getNTE_39(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_39);
  }
  AIG* getAIG_40(size_t index = 0) {
    return (AIG*)this->getObjectSafe(index, SRM_S01_AIG_40);
  }
  APR* getAPR_41(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_41);
  }
  NTE* getNTE_42(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_42);
  }
  AIL* getAIL_43(size_t index = 0) {
    return (AIL*)this->getObjectSafe(index, SRM_S01_AIL_43);
  }
  APR* getAPR_44(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_44);
  }
  NTE* getNTE_45(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_45);
  }
  AIP* getAIP_46(size_t index = 0) {
    return (AIP*)this->getObjectSafe(index, SRM_S01_AIP_46);
  }
  APR* getAPR_47(size_t index = 0) {
    return (APR*)this->getObjectSafe(index, SRM_S01_APR_47);
  }
  NTE* getNTE_48(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRM_S01_NTE_48);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARQ_2(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_ARQ_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_3(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_4(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_7(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_PID_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_8(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_PV1_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_9(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_PV2_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDG1_11(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_DG1_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_12(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_OBX_12) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_13(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_PRT_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRGS_14(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_RGS_14) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIS_19(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIS_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_20(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_20) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_21(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_21) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIS_22(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIS_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_23(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_24(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_24) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIG_25(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIG_25) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_26(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_26) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_27(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_27) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIS_28(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIS_28) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_29(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_29) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_30(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIG_31(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIG_31) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_32(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_32) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_33(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_33) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIL_34(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIL_34) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_35(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_35) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_36(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_36) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIS_37(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIS_37) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_38(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_38) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_39(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_39) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIG_40(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIG_40) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_41(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_41) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_42(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_42) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIL_43(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIL_43) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_44(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_44) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_45(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_45) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIP_46(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_AIP_46) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAPR_47(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_APR_47) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_48(size_t index = 0) {
    try {
      return this->getObject(index, SRM_S01_NTE_48) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRM_S01_ */
} /* namespace HL7_281 */
#endif /*  __SRM_S01__281_H__ */
