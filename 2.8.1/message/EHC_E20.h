/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:03:21 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __EHC_E20__281_H__
#define __EHC_E20__281_H__

#include "../../common/Util.h"
#include "../segment/ACC.h"
#include "../segment/ADJ.h"
#include "../segment/CTD.h"
#include "../segment/DG1.h"
#include "../segment/IN1.h"
#include "../segment/IN2.h"
#include "../segment/IVC.h"
#include "../segment/LOC.h"
#include "../segment/MSH.h"
#include "../segment/NTE.h"
#include "../segment/OBX.h"
#include "../segment/PID.h"
#include "../segment/PRT.h"
#include "../segment/PSL.h"
#include "../segment/ROL.h"
#include "../segment/SFT.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct EHC_E20_PAT_INFO; /* PAT_INFO */
struct EHC_E20_PSL_ITEM_INFO; /* PSL_ITEM_INFO */
struct EHC_E20_INSURANCE; /* INSURANCE */
struct EHC_E20_DIAGNOSIS; /* DIAGNOSIS */

/* PAT_INFO */
struct EHC_E20_PAT_INFO : public HL7Group {
  EHC_E20_PAT_INFO() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    EHC_E20_ACC_1,
    EHC_E20_EHC_E20_DIAGNOSIS_2,
    EHC_E20_EHC_E20_INSURANCE_3,
    EHC_E20_OBX_4,
    EHC_E20_PID_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "EHC_E20_PAT_INFO"; }
  EHC_E20_PAT_INFO* create() const { return new EHC_E20_PAT_INFO(); }

 private:
  /* Initialize object */
  void init() {
    setName("EHC_E20.PAT_INFO");
    addObject<ACC>(EHC_E20_ACC_1, "ACC.1", HL7::optional, HL7::repetition_on);
    addObject<EHC_E20_DIAGNOSIS>(EHC_E20_EHC_E20_DIAGNOSIS_2, "EHC_E20_DIAGNOSIS.2", HL7::optional, HL7::repetition_on);
    addObject<EHC_E20_INSURANCE>(EHC_E20_EHC_E20_INSURANCE_3, "EHC_E20_INSURANCE.3", HL7::optional, HL7::repetition_on);
    addObject<OBX>(EHC_E20_OBX_4, "OBX.4", HL7::optional, HL7::repetition_on);
    addObject<PID>(EHC_E20_PID_5, "PID.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ACC* getACC_1(size_t index = 0) {
    return (ACC*)this->getObjectSafe(index, EHC_E20_ACC_1);
  }
  EHC_E20_DIAGNOSIS* getEHC_E20_DIAGNOSIS_2(size_t index = 0) {
    return (EHC_E20_DIAGNOSIS*)this->getObjectSafe(index, EHC_E20_EHC_E20_DIAGNOSIS_2);
  }
  EHC_E20_INSURANCE* getEHC_E20_INSURANCE_3(size_t index = 0) {
    return (EHC_E20_INSURANCE*)this->getObjectSafe(index, EHC_E20_EHC_E20_INSURANCE_3);
  }
  OBX* getOBX_4(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, EHC_E20_OBX_4);
  }
  PID* getPID_5(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, EHC_E20_PID_5);
  }

  /* Checker list */
  bool isACC_1(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_ACC_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isEHC_E20_DIAGNOSIS_2(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_EHC_E20_DIAGNOSIS_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isEHC_E20_INSURANCE_3(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_EHC_E20_INSURANCE_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_4(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_OBX_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_5(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_PID_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* EHC_E20_PAT_INFO */

/* PSL_ITEM_INFO */
struct EHC_E20_PSL_ITEM_INFO : public HL7Group {
  EHC_E20_PSL_ITEM_INFO() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    EHC_E20_ADJ_1,
    EHC_E20_LOC_2,
    EHC_E20_NTE_3,
    EHC_E20_PRT_4,
    EHC_E20_PSL_5,
    EHC_E20_ROL_6,
    FIELD_ID_MAX
  };

  const char* className() const { return "EHC_E20_PSL_ITEM_INFO"; }
  EHC_E20_PSL_ITEM_INFO* create() const { return new EHC_E20_PSL_ITEM_INFO(); }

 private:
  /* Initialize object */
  void init() {
    setName("EHC_E20.PSL_ITEM_INFO");
    addObject<ADJ>(EHC_E20_ADJ_1, "ADJ.1", HL7::optional, HL7::repetition_on);
    addObject<LOC>(EHC_E20_LOC_2, "LOC.2", HL7::optional, HL7::repetition_on);
    addObject<NTE>(EHC_E20_NTE_3, "NTE.3", HL7::optional, HL7::repetition_on);
    addObject<PRT>(EHC_E20_PRT_4, "PRT.4", HL7::optional, HL7::repetition_on);
    addObject<PSL>(EHC_E20_PSL_5, "PSL.5", HL7::optional, HL7::repetition_on);
    addObject<ROL>(EHC_E20_ROL_6, "ROL.6", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ADJ* getADJ_1(size_t index = 0) {
    return (ADJ*)this->getObjectSafe(index, EHC_E20_ADJ_1);
  }
  LOC* getLOC_2(size_t index = 0) {
    return (LOC*)this->getObjectSafe(index, EHC_E20_LOC_2);
  }
  NTE* getNTE_3(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, EHC_E20_NTE_3);
  }
  PRT* getPRT_4(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, EHC_E20_PRT_4);
  }
  PSL* getPSL_5(size_t index = 0) {
    return (PSL*)this->getObjectSafe(index, EHC_E20_PSL_5);
  }
  ROL* getROL_6(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, EHC_E20_ROL_6);
  }

  /* Checker list */
  bool isADJ_1(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_ADJ_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isLOC_2(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_LOC_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_3(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_NTE_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_4(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_PRT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPSL_5(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_PSL_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_6(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_ROL_6) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* EHC_E20_PSL_ITEM_INFO */

/* INSURANCE */
struct EHC_E20_INSURANCE : public HL7Group {
  EHC_E20_INSURANCE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    EHC_E20_IN1_1,
    EHC_E20_IN2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "EHC_E20_INSURANCE"; }
  EHC_E20_INSURANCE* create() const { return new EHC_E20_INSURANCE(); }

 private:
  /* Initialize object */
  void init() {
    setName("EHC_E20.INSURANCE");
    addObject<IN1>(EHC_E20_IN1_1, "IN1.1", HL7::optional, HL7::repetition_on);
    addObject<IN2>(EHC_E20_IN2_2, "IN2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  IN1* getIN1_1(size_t index = 0) {
    return (IN1*)this->getObjectSafe(index, EHC_E20_IN1_1);
  }
  IN2* getIN2_2(size_t index = 0) {
    return (IN2*)this->getObjectSafe(index, EHC_E20_IN2_2);
  }

  /* Checker list */
  bool isIN1_1(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_IN1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN2_2(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_IN2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* EHC_E20_INSURANCE */

/* DIAGNOSIS */
struct EHC_E20_DIAGNOSIS : public HL7Group {
  EHC_E20_DIAGNOSIS() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    EHC_E20_DG1_1,
    EHC_E20_NTE_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "EHC_E20_DIAGNOSIS"; }
  EHC_E20_DIAGNOSIS* create() const { return new EHC_E20_DIAGNOSIS(); }

 private:
  /* Initialize object */
  void init() {
    setName("EHC_E20.DIAGNOSIS");
    addObject<DG1>(EHC_E20_DG1_1, "DG1.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(EHC_E20_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  DG1* getDG1_1(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, EHC_E20_DG1_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, EHC_E20_NTE_2);
  }

  /* Checker list */
  bool isDG1_1(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_DG1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* EHC_E20_DIAGNOSIS */

/* EHC_E20 */
struct EHC_E20 : public HL7Message {
  EHC_E20() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    EHC_E20_MSH_1,
    EHC_E20_SFT_2,
    EHC_E20_UAC_3,
    EHC_E20_IVC_4,
    EHC_E20_CTD_5,
    EHC_E20_LOC_6,
    EHC_E20_ROL_7,
    EHC_E20_PID_10,
    EHC_E20_ACC_11,
    EHC_E20_OBX_14,
    EHC_E20_IN1_36,
    EHC_E20_IN2_37,
    EHC_E20_IN1_59,
    EHC_E20_IN2_60,
    EHC_E20_DG1_82,
    EHC_E20_NTE_83,
    EHC_E20_PSL_105,
    EHC_E20_NTE_106,
    EHC_E20_ADJ_107,
    EHC_E20_LOC_108,
    EHC_E20_PRT_109,
    EHC_E20_ROL_110,
    FIELD_ID_MAX
  };

  const char* className() const { return "EHC_E20"; }
  EHC_E20* create() const { return new EHC_E20(); }

 private:
  /* Initialize object */
  void init() {
    setName("EHC_E20");
    addObject<MSH>(EHC_E20_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(EHC_E20_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(EHC_E20_UAC_3, "UAC.3", HL7::optional, HL7::repetition_on);
    addObject<IVC>(EHC_E20_IVC_4, "IVC.4", HL7::initialized, HL7::repetition_off);
    addObject<CTD>(EHC_E20_CTD_5, "CTD.5", HL7::initialized, HL7::repetition_on);
    addObject<LOC>(EHC_E20_LOC_6, "LOC.6", HL7::optional, HL7::repetition_on);
    addObject<ROL>(EHC_E20_ROL_7, "ROL.7", HL7::optional, HL7::repetition_on);
    addObject<PID>(EHC_E20_PID_10, "PID.10", HL7::initialized, HL7::repetition_off);
    addObject<ACC>(EHC_E20_ACC_11, "ACC.11", HL7::optional, HL7::repetition_off);
    addObject<OBX>(EHC_E20_OBX_14, "OBX.14", HL7::optional, HL7::repetition_off);
    addObject<IN1>(EHC_E20_IN1_36, "IN1.36", HL7::initialized, HL7::repetition_off);
    addObject<IN2>(EHC_E20_IN2_37, "IN2.37", HL7::optional, HL7::repetition_off);
    addObject<IN1>(EHC_E20_IN1_59, "IN1.59", HL7::initialized, HL7::repetition_off);
    addObject<IN2>(EHC_E20_IN2_60, "IN2.60", HL7::optional, HL7::repetition_off);
    addObject<DG1>(EHC_E20_DG1_82, "DG1.82", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(EHC_E20_NTE_83, "NTE.83", HL7::optional, HL7::repetition_off);
    addObject<PSL>(EHC_E20_PSL_105, "PSL.105", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(EHC_E20_NTE_106, "NTE.106", HL7::optional, HL7::repetition_off);
    addObject<ADJ>(EHC_E20_ADJ_107, "ADJ.107", HL7::optional, HL7::repetition_off);
    addObject<LOC>(EHC_E20_LOC_108, "LOC.108", HL7::optional, HL7::repetition_off);
    addObject<PRT>(EHC_E20_PRT_109, "PRT.109", HL7::optional, HL7::repetition_off);
    addObject<ROL>(EHC_E20_ROL_110, "ROL.110", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, EHC_E20_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, EHC_E20_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, EHC_E20_UAC_3);
  }
  IVC* getIVC_4(size_t index = 0) {
    return (IVC*)this->getObjectSafe(index, EHC_E20_IVC_4);
  }
  CTD* getCTD_5(size_t index = 0) {
    return (CTD*)this->getObjectSafe(index, EHC_E20_CTD_5);
  }
  LOC* getLOC_6(size_t index = 0) {
    return (LOC*)this->getObjectSafe(index, EHC_E20_LOC_6);
  }
  ROL* getROL_7(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, EHC_E20_ROL_7);
  }
  PID* getPID_10(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, EHC_E20_PID_10);
  }
  ACC* getACC_11(size_t index = 0) {
    return (ACC*)this->getObjectSafe(index, EHC_E20_ACC_11);
  }
  OBX* getOBX_14(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, EHC_E20_OBX_14);
  }
  IN1* getIN1_36(size_t index = 0) {
    return (IN1*)this->getObjectSafe(index, EHC_E20_IN1_36);
  }
  IN2* getIN2_37(size_t index = 0) {
    return (IN2*)this->getObjectSafe(index, EHC_E20_IN2_37);
  }
  IN1* getIN1_59(size_t index = 0) {
    return (IN1*)this->getObjectSafe(index, EHC_E20_IN1_59);
  }
  IN2* getIN2_60(size_t index = 0) {
    return (IN2*)this->getObjectSafe(index, EHC_E20_IN2_60);
  }
  DG1* getDG1_82(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, EHC_E20_DG1_82);
  }
  NTE* getNTE_83(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, EHC_E20_NTE_83);
  }
  PSL* getPSL_105(size_t index = 0) {
    return (PSL*)this->getObjectSafe(index, EHC_E20_PSL_105);
  }
  NTE* getNTE_106(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, EHC_E20_NTE_106);
  }
  ADJ* getADJ_107(size_t index = 0) {
    return (ADJ*)this->getObjectSafe(index, EHC_E20_ADJ_107);
  }
  LOC* getLOC_108(size_t index = 0) {
    return (LOC*)this->getObjectSafe(index, EHC_E20_LOC_108);
  }
  PRT* getPRT_109(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, EHC_E20_PRT_109);
  }
  ROL* getROL_110(size_t index = 0) {
    return (ROL*)this->getObjectSafe(index, EHC_E20_ROL_110);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIVC_4(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_IVC_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCTD_5(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_CTD_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isLOC_6(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_LOC_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_7(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_ROL_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_10(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_PID_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isACC_11(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_ACC_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_14(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_OBX_14) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN1_36(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_IN1_36) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN2_37(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_IN2_37) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN1_59(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_IN1_59) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN2_60(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_IN2_60) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDG1_82(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_DG1_82) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_83(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_NTE_83) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPSL_105(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_PSL_105) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_106(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_NTE_106) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isADJ_107(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_ADJ_107) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isLOC_108(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_LOC_108) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_109(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_PRT_109) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isROL_110(size_t index = 0) {
    try {
      return this->getObject(index, EHC_E20_ROL_110) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* EHC_E20_ */
} /* namespace HL7_281 */
#endif /*  __EHC_E20__281_H__ */
