/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:02:36 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __CRM_C01__281_H__
#define __CRM_C01__281_H__

#include "../../common/Util.h"
#include "../segment/ARV.h"
#include "../segment/CSP.h"
#include "../segment/CSR.h"
#include "../segment/MSH.h"
#include "../segment/PID.h"
#include "../segment/PRT.h"
#include "../segment/PV1.h"
#include "../segment/SFT.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct CRM_C01_PATIENT; /* PATIENT */
struct CRM_C01_PATIENT_VISIT; /* PATIENT_VISIT */

/* PATIENT */
struct CRM_C01_PATIENT : public HL7Group {
  CRM_C01_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    CRM_C01_ARV_1,
    CRM_C01_CRM_C01_PATIENT_VISIT_2,
    CRM_C01_CSP_3,
    CRM_C01_CSR_4,
    CRM_C01_PID_5,
    CRM_C01_PRT_6,
    FIELD_ID_MAX
  };

  const char* className() const { return "CRM_C01_PATIENT"; }
  CRM_C01_PATIENT* create() const { return new CRM_C01_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("CRM_C01.PATIENT");
    addObject<ARV>(CRM_C01_ARV_1, "ARV.1", HL7::optional, HL7::repetition_on);
    addObject<CRM_C01_PATIENT_VISIT>(CRM_C01_CRM_C01_PATIENT_VISIT_2, "CRM_C01_PATIENT_VISIT.2", HL7::optional, HL7::repetition_on);
    addObject<CSP>(CRM_C01_CSP_3, "CSP.3", HL7::optional, HL7::repetition_on);
    addObject<CSR>(CRM_C01_CSR_4, "CSR.4", HL7::optional, HL7::repetition_on);
    addObject<PID>(CRM_C01_PID_5, "PID.5", HL7::optional, HL7::repetition_on);
    addObject<PRT>(CRM_C01_PRT_6, "PRT.6", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ARV* getARV_1(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, CRM_C01_ARV_1);
  }
  CRM_C01_PATIENT_VISIT* getCRM_C01_PATIENT_VISIT_2(size_t index = 0) {
    return (CRM_C01_PATIENT_VISIT*)this->getObjectSafe(index, CRM_C01_CRM_C01_PATIENT_VISIT_2);
  }
  CSP* getCSP_3(size_t index = 0) {
    return (CSP*)this->getObjectSafe(index, CRM_C01_CSP_3);
  }
  CSR* getCSR_4(size_t index = 0) {
    return (CSR*)this->getObjectSafe(index, CRM_C01_CSR_4);
  }
  PID* getPID_5(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, CRM_C01_PID_5);
  }
  PRT* getPRT_6(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, CRM_C01_PRT_6);
  }

  /* Checker list */
  bool isARV_1(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_ARV_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCRM_C01_PATIENT_VISIT_2(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_CRM_C01_PATIENT_VISIT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCSP_3(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_CSP_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCSR_4(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_CSR_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_5(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_PID_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_6(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_PRT_6) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* CRM_C01_PATIENT */

/* PATIENT_VISIT */
struct CRM_C01_PATIENT_VISIT : public HL7Group {
  CRM_C01_PATIENT_VISIT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    CRM_C01_PRT_1,
    CRM_C01_PV1_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "CRM_C01_PATIENT_VISIT"; }
  CRM_C01_PATIENT_VISIT* create() const { return new CRM_C01_PATIENT_VISIT(); }

 private:
  /* Initialize object */
  void init() {
    setName("CRM_C01.PATIENT_VISIT");
    addObject<PRT>(CRM_C01_PRT_1, "PRT.1", HL7::optional, HL7::repetition_on);
    addObject<PV1>(CRM_C01_PV1_2, "PV1.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PRT* getPRT_1(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, CRM_C01_PRT_1);
  }
  PV1* getPV1_2(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, CRM_C01_PV1_2);
  }

  /* Checker list */
  bool isPRT_1(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_PRT_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_2(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_PV1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* CRM_C01_PATIENT_VISIT */

/* CRM_C01 */
struct CRM_C01 : public HL7Message {
  CRM_C01() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    CRM_C01_MSH_1,
    CRM_C01_SFT_2,
    CRM_C01_UAC_3,
    CRM_C01_PID_5,
    CRM_C01_PRT_6,
    CRM_C01_ARV_7,
    CRM_C01_CSR_9,
    CRM_C01_CSP_10,
    CRM_C01_PV1_11,
    CRM_C01_PRT_12,
    FIELD_ID_MAX
  };

  const char* className() const { return "CRM_C01"; }
  CRM_C01* create() const { return new CRM_C01(); }

 private:
  /* Initialize object */
  void init() {
    setName("CRM_C01");
    addObject<MSH>(CRM_C01_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(CRM_C01_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(CRM_C01_UAC_3, "UAC.3", HL7::optional, HL7::repetition_off);
    addObject<PID>(CRM_C01_PID_5, "PID.5", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(CRM_C01_PRT_6, "PRT.6", HL7::optional, HL7::repetition_off);
    addObject<ARV>(CRM_C01_ARV_7, "ARV.7", HL7::optional, HL7::repetition_off);
    addObject<CSR>(CRM_C01_CSR_9, "CSR.9", HL7::initialized, HL7::repetition_off);
    addObject<CSP>(CRM_C01_CSP_10, "CSP.10", HL7::optional, HL7::repetition_off);
    addObject<PV1>(CRM_C01_PV1_11, "PV1.11", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(CRM_C01_PRT_12, "PRT.12", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, CRM_C01_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, CRM_C01_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, CRM_C01_UAC_3);
  }
  PID* getPID_5(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, CRM_C01_PID_5);
  }
  PRT* getPRT_6(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, CRM_C01_PRT_6);
  }
  ARV* getARV_7(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, CRM_C01_ARV_7);
  }
  CSR* getCSR_9(size_t index = 0) {
    return (CSR*)this->getObjectSafe(index, CRM_C01_CSR_9);
  }
  CSP* getCSP_10(size_t index = 0) {
    return (CSP*)this->getObjectSafe(index, CRM_C01_CSP_10);
  }
  PV1* getPV1_11(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, CRM_C01_PV1_11);
  }
  PRT* getPRT_12(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, CRM_C01_PRT_12);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_5(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_PID_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_6(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_PRT_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_7(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_ARV_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCSR_9(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_CSR_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCSP_10(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_CSP_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_11(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_PV1_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_12(size_t index = 0) {
    try {
      return this->getObject(index, CRM_C01_PRT_12) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* CRM_C01_ */
} /* namespace HL7_281 */
#endif /*  __CRM_C01__281_H__ */
