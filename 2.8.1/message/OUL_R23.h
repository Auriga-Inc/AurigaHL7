/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:05:33 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __OUL_R23__281_H__
#define __OUL_R23__281_H__

#include "../../common/Util.h"
#include "../segment/ARV.h"
#include "../segment/CTI.h"
#include "../segment/DSC.h"
#include "../segment/INV.h"
#include "../segment/MSH.h"
#include "../segment/NK1.h"
#include "../segment/NTE.h"
#include "../segment/OBR.h"
#include "../segment/OBX.h"
#include "../segment/ORC.h"
#include "../segment/PD1.h"
#include "../segment/PID.h"
#include "../segment/PRT.h"
#include "../segment/PV1.h"
#include "../segment/PV2.h"
#include "../segment/SAC.h"
#include "../segment/SFT.h"
#include "../segment/SID.h"
#include "../segment/SPM.h"
#include "../segment/TCD.h"
#include "../segment/TQ1.h"
#include "../segment/TQ2.h"
#include "../segment/TXA.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct OUL_R23_PATIENT; /* PATIENT */
struct OUL_R23_SPECIMEN; /* SPECIMEN */
struct OUL_R23_PATIENT_OBSERVATION; /* PATIENT_OBSERVATION */
struct OUL_R23_VISIT; /* VISIT */
struct OUL_R23_SPECIMEN_OBSERVATION; /* SPECIMEN_OBSERVATION */
struct OUL_R23_CONTAINER; /* CONTAINER */
struct OUL_R23_ORDER; /* ORDER */
struct OUL_R23_COMMON_ORDER; /* COMMON_ORDER */
struct OUL_R23_TIMING_QTY; /* TIMING_QTY */
struct OUL_R23_RESULT; /* RESULT */
struct OUL_R23_ORDER_DOCUMENT; /* ORDER_DOCUMENT */
struct OUL_R23_ORDER_DOCUMENT; /* ORDER_DOCUMENT */
struct OUL_R23_ORDER_DOCUMENT; /* ORDER_DOCUMENT */

/* PATIENT */
struct OUL_R23_PATIENT : public HL7Group {
  OUL_R23_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R23_ARV_1,
    OUL_R23_NTE_2,
    OUL_R23_OUL_R23_PATIENT_OBSERVATION_3,
    OUL_R23_OUL_R23_VISIT_4,
    OUL_R23_PD1_5,
    OUL_R23_PID_6,
    OUL_R23_PRT_7,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R23_PATIENT"; }
  OUL_R23_PATIENT* create() const { return new OUL_R23_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R23.PATIENT");
    addObject<ARV>(OUL_R23_ARV_1, "ARV.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(OUL_R23_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
    addObject<OUL_R23_PATIENT_OBSERVATION>(OUL_R23_OUL_R23_PATIENT_OBSERVATION_3, "OUL_R23_PATIENT_OBSERVATION.3", HL7::optional, HL7::repetition_on);
    addObject<OUL_R23_VISIT>(OUL_R23_OUL_R23_VISIT_4, "OUL_R23_VISIT.4", HL7::optional, HL7::repetition_on);
    addObject<PD1>(OUL_R23_PD1_5, "PD1.5", HL7::optional, HL7::repetition_on);
    addObject<PID>(OUL_R23_PID_6, "PID.6", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R23_PRT_7, "PRT.7", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ARV* getARV_1(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OUL_R23_ARV_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R23_NTE_2);
  }
  OUL_R23_PATIENT_OBSERVATION* getOUL_R23_PATIENT_OBSERVATION_3(size_t index = 0) {
    return (OUL_R23_PATIENT_OBSERVATION*)this->getObjectSafe(index, OUL_R23_OUL_R23_PATIENT_OBSERVATION_3);
  }
  OUL_R23_VISIT* getOUL_R23_VISIT_4(size_t index = 0) {
    return (OUL_R23_VISIT*)this->getObjectSafe(index, OUL_R23_OUL_R23_VISIT_4);
  }
  PD1* getPD1_5(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OUL_R23_PD1_5);
  }
  PID* getPID_6(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OUL_R23_PID_6);
  }
  PRT* getPRT_7(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_7);
  }

  /* Checker list */
  bool isARV_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_ARV_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R23_PATIENT_OBSERVATION_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OUL_R23_PATIENT_OBSERVATION_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R23_VISIT_4(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OUL_R23_VISIT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_5(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PD1_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_6(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PID_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_7(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_7) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R23_PATIENT */

/* SPECIMEN */
struct OUL_R23_SPECIMEN : public HL7Group {
  OUL_R23_SPECIMEN() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R23_OUL_R23_CONTAINER_1,
    OUL_R23_OUL_R23_SPECIMEN_OBSERVATION_2,
    OUL_R23_SPM_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R23_SPECIMEN"; }
  OUL_R23_SPECIMEN* create() const { return new OUL_R23_SPECIMEN(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R23.SPECIMEN");
    addObject<OUL_R23_CONTAINER>(OUL_R23_OUL_R23_CONTAINER_1, "OUL_R23_CONTAINER.1", HL7::optional, HL7::repetition_on);
    addObject<OUL_R23_SPECIMEN_OBSERVATION>(OUL_R23_OUL_R23_SPECIMEN_OBSERVATION_2, "OUL_R23_SPECIMEN_OBSERVATION.2", HL7::optional, HL7::repetition_on);
    addObject<SPM>(OUL_R23_SPM_3, "SPM.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OUL_R23_CONTAINER* getOUL_R23_CONTAINER_1(size_t index = 0) {
    return (OUL_R23_CONTAINER*)this->getObjectSafe(index, OUL_R23_OUL_R23_CONTAINER_1);
  }
  OUL_R23_SPECIMEN_OBSERVATION* getOUL_R23_SPECIMEN_OBSERVATION_2(size_t index = 0) {
    return (OUL_R23_SPECIMEN_OBSERVATION*)this->getObjectSafe(index, OUL_R23_OUL_R23_SPECIMEN_OBSERVATION_2);
  }
  SPM* getSPM_3(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OUL_R23_SPM_3);
  }

  /* Checker list */
  bool isOUL_R23_CONTAINER_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OUL_R23_CONTAINER_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R23_SPECIMEN_OBSERVATION_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OUL_R23_SPECIMEN_OBSERVATION_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_SPM_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R23_SPECIMEN */

/* PATIENT_OBSERVATION */
struct OUL_R23_PATIENT_OBSERVATION : public HL7Group {
  OUL_R23_PATIENT_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R23_OBX_1,
    OUL_R23_PRT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R23_PATIENT_OBSERVATION"; }
  OUL_R23_PATIENT_OBSERVATION* create() const { return new OUL_R23_PATIENT_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R23.PATIENT_OBSERVATION");
    addObject<OBX>(OUL_R23_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R23_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R23_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_2);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R23_PATIENT_OBSERVATION */

/* VISIT */
struct OUL_R23_VISIT : public HL7Group {
  OUL_R23_VISIT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R23_PRT_1,
    OUL_R23_PV1_2,
    OUL_R23_PV2_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R23_VISIT"; }
  OUL_R23_VISIT* create() const { return new OUL_R23_VISIT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R23.VISIT");
    addObject<PRT>(OUL_R23_PRT_1, "PRT.1", HL7::optional, HL7::repetition_on);
    addObject<PV1>(OUL_R23_PV1_2, "PV1.2", HL7::optional, HL7::repetition_on);
    addObject<PV2>(OUL_R23_PV2_3, "PV2.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PRT* getPRT_1(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_1);
  }
  PV1* getPV1_2(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OUL_R23_PV1_2);
  }
  PV2* getPV2_3(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OUL_R23_PV2_3);
  }

  /* Checker list */
  bool isPRT_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PV1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PV2_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R23_VISIT */

/* SPECIMEN_OBSERVATION */
struct OUL_R23_SPECIMEN_OBSERVATION : public HL7Group {
  OUL_R23_SPECIMEN_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R23_OBX_1,
    OUL_R23_PRT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R23_SPECIMEN_OBSERVATION"; }
  OUL_R23_SPECIMEN_OBSERVATION* create() const { return new OUL_R23_SPECIMEN_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R23.SPECIMEN_OBSERVATION");
    addObject<OBX>(OUL_R23_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R23_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R23_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_2);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R23_SPECIMEN_OBSERVATION */

/* CONTAINER */
struct OUL_R23_CONTAINER : public HL7Group {
  OUL_R23_CONTAINER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R23_INV_1,
    OUL_R23_OUL_R23_ORDER_2,
    OUL_R23_SAC_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R23_CONTAINER"; }
  OUL_R23_CONTAINER* create() const { return new OUL_R23_CONTAINER(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R23.CONTAINER");
    addObject<INV>(OUL_R23_INV_1, "INV.1", HL7::optional, HL7::repetition_on);
    addObject<OUL_R23_ORDER>(OUL_R23_OUL_R23_ORDER_2, "OUL_R23_ORDER.2", HL7::optional, HL7::repetition_on);
    addObject<SAC>(OUL_R23_SAC_3, "SAC.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  INV* getINV_1(size_t index = 0) {
    return (INV*)this->getObjectSafe(index, OUL_R23_INV_1);
  }
  OUL_R23_ORDER* getOUL_R23_ORDER_2(size_t index = 0) {
    return (OUL_R23_ORDER*)this->getObjectSafe(index, OUL_R23_OUL_R23_ORDER_2);
  }
  SAC* getSAC_3(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OUL_R23_SAC_3);
  }

  /* Checker list */
  bool isINV_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_INV_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R23_ORDER_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OUL_R23_ORDER_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_SAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R23_CONTAINER */

/* ORDER */
struct OUL_R23_ORDER : public HL7Group {
  OUL_R23_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R23_CTI_1,
    OUL_R23_NTE_2,
    OUL_R23_OBR_3,
    OUL_R23_OUL_R23_COMMON_ORDER_4,
    OUL_R23_OUL_R23_RESULT_5,
    OUL_R23_OUL_R23_TIMING_QTY_6,
    OUL_R23_PRT_7,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R23_ORDER"; }
  OUL_R23_ORDER* create() const { return new OUL_R23_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R23.ORDER");
    addObject<CTI>(OUL_R23_CTI_1, "CTI.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(OUL_R23_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
    addObject<OBR>(OUL_R23_OBR_3, "OBR.3", HL7::optional, HL7::repetition_on);
    addObject<OUL_R23_COMMON_ORDER>(OUL_R23_OUL_R23_COMMON_ORDER_4, "OUL_R23_COMMON_ORDER.4", HL7::optional, HL7::repetition_on);
    addObject<OUL_R23_RESULT>(OUL_R23_OUL_R23_RESULT_5, "OUL_R23_RESULT.5", HL7::optional, HL7::repetition_on);
    addObject<OUL_R23_TIMING_QTY>(OUL_R23_OUL_R23_TIMING_QTY_6, "OUL_R23_TIMING_QTY.6", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R23_PRT_7, "PRT.7", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  CTI* getCTI_1(size_t index = 0) {
    return (CTI*)this->getObjectSafe(index, OUL_R23_CTI_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R23_NTE_2);
  }
  OBR* getOBR_3(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OUL_R23_OBR_3);
  }
  OUL_R23_COMMON_ORDER* getOUL_R23_COMMON_ORDER_4(size_t index = 0) {
    return (OUL_R23_COMMON_ORDER*)this->getObjectSafe(index, OUL_R23_OUL_R23_COMMON_ORDER_4);
  }
  OUL_R23_RESULT* getOUL_R23_RESULT_5(size_t index = 0) {
    return (OUL_R23_RESULT*)this->getObjectSafe(index, OUL_R23_OUL_R23_RESULT_5);
  }
  OUL_R23_TIMING_QTY* getOUL_R23_TIMING_QTY_6(size_t index = 0) {
    return (OUL_R23_TIMING_QTY*)this->getObjectSafe(index, OUL_R23_OUL_R23_TIMING_QTY_6);
  }
  PRT* getPRT_7(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_7);
  }

  /* Checker list */
  bool isCTI_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_CTI_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R23_COMMON_ORDER_4(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OUL_R23_COMMON_ORDER_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R23_RESULT_5(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OUL_R23_RESULT_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R23_TIMING_QTY_6(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OUL_R23_TIMING_QTY_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_7(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_7) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R23_ORDER */

/* COMMON_ORDER */
struct OUL_R23_COMMON_ORDER : public HL7Group {
  OUL_R23_COMMON_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R23_ORC_1,
    OUL_R23_OUL_R23_ORDER_DOCUMENT_2,
    OUL_R23_PRT_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R23_COMMON_ORDER"; }
  OUL_R23_COMMON_ORDER* create() const { return new OUL_R23_COMMON_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R23.COMMON_ORDER");
    addObject<ORC>(OUL_R23_ORC_1, "ORC.1", HL7::optional, HL7::repetition_on);
    addObject<OUL_R23_ORDER_DOCUMENT>(OUL_R23_OUL_R23_ORDER_DOCUMENT_2, "OUL_R23_ORDER_DOCUMENT.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R23_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ORC* getORC_1(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OUL_R23_ORC_1);
  }
  OUL_R23_ORDER_DOCUMENT* getOUL_R23_ORDER_DOCUMENT_2(size_t index = 0) {
    return (OUL_R23_ORDER_DOCUMENT*)this->getObjectSafe(index, OUL_R23_OUL_R23_ORDER_DOCUMENT_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_3);
  }

  /* Checker list */
  bool isORC_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_ORC_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R23_ORDER_DOCUMENT_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OUL_R23_ORDER_DOCUMENT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R23_COMMON_ORDER */

/* TIMING_QTY */
struct OUL_R23_TIMING_QTY : public HL7Group {
  OUL_R23_TIMING_QTY() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R23_TQ1_1,
    OUL_R23_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R23_TIMING_QTY"; }
  OUL_R23_TIMING_QTY* create() const { return new OUL_R23_TIMING_QTY(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R23.TIMING_QTY");
    addObject<TQ1>(OUL_R23_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(OUL_R23_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OUL_R23_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OUL_R23_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R23_TIMING_QTY */

/* RESULT */
struct OUL_R23_RESULT : public HL7Group {
  OUL_R23_RESULT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R23_NTE_1,
    OUL_R23_OBX_2,
    OUL_R23_PRT_3,
    OUL_R23_SID_4,
    OUL_R23_TCD_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R23_RESULT"; }
  OUL_R23_RESULT* create() const { return new OUL_R23_RESULT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R23.RESULT");
    addObject<NTE>(OUL_R23_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(OUL_R23_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R23_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
    addObject<SID>(OUL_R23_SID_4, "SID.4", HL7::optional, HL7::repetition_on);
    addObject<TCD>(OUL_R23_TCD_5, "TCD.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R23_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R23_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_3);
  }
  SID* getSID_4(size_t index = 0) {
    return (SID*)this->getObjectSafe(index, OUL_R23_SID_4);
  }
  TCD* getTCD_5(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OUL_R23_TCD_5);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSID_4(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_SID_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_5(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_TCD_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R23_RESULT */

/* ORDER_DOCUMENT */
struct OUL_R23_ORDER_DOCUMENT : public HL7Group {
  OUL_R23_ORDER_DOCUMENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R23_OBX_1,
    OUL_R23_PRT_2,
    OUL_R23_TXA_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R23_ORDER_DOCUMENT"; }
  OUL_R23_ORDER_DOCUMENT* create() const { return new OUL_R23_ORDER_DOCUMENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R23.ORDER_DOCUMENT");
    addObject<OBX>(OUL_R23_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R23_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
    addObject<TXA>(OUL_R23_TXA_3, "TXA.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R23_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_2);
  }
  TXA* getTXA_3(size_t index = 0) {
    return (TXA*)this->getObjectSafe(index, OUL_R23_TXA_3);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTXA_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_TXA_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R23_ORDER_DOCUMENT */

/* OUL_R23 */
struct OUL_R23 : public HL7Message {
  OUL_R23() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R23_MSH_1,
    OUL_R23_SFT_2,
    OUL_R23_UAC_3,
    OUL_R23_NTE_4,
    OUL_R23_NK1_6,
    OUL_R23_DSC_8,
    OUL_R23_PID_9,
    OUL_R23_PD1_10,
    OUL_R23_PRT_11,
    OUL_R23_ARV_12,
    OUL_R23_NTE_13,
    OUL_R23_OBX_16,
    OUL_R23_PRT_17,
    OUL_R23_OBX_18,
    OUL_R23_PRT_19,
    OUL_R23_PV1_20,
    OUL_R23_PV2_21,
    OUL_R23_PRT_22,
    OUL_R23_SPM_23,
    OUL_R23_OBX_26,
    OUL_R23_PRT_27,
    OUL_R23_OBX_28,
    OUL_R23_PRT_29,
    OUL_R23_SAC_30,
    OUL_R23_INV_31,
    OUL_R23_OBR_33,
    OUL_R23_PRT_34,
    OUL_R23_NTE_36,
    OUL_R23_PRT_37,
    OUL_R23_CTI_40,
    OUL_R23_ORC_41,
    OUL_R23_PRT_42,
    OUL_R23_OBX_44,
    OUL_R23_PRT_45,
    OUL_R23_TXA_46,
    OUL_R23_ORC_47,
    OUL_R23_PRT_48,
    OUL_R23_TQ1_50,
    OUL_R23_TQ2_51,
    OUL_R23_OBX_52,
    OUL_R23_PRT_53,
    OUL_R23_TXA_54,
    OUL_R23_ORC_55,
    OUL_R23_PRT_56,
    OUL_R23_TQ1_58,
    OUL_R23_TQ2_59,
    OUL_R23_OBX_60,
    OUL_R23_PRT_61,
    OUL_R23_TCD_62,
    OUL_R23_SID_63,
    OUL_R23_NTE_64,
    OUL_R23_OBX_65,
    OUL_R23_PRT_66,
    OUL_R23_TXA_67,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R23"; }
  OUL_R23* create() const { return new OUL_R23(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R23");
    addObject<MSH>(OUL_R23_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(OUL_R23_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(OUL_R23_UAC_3, "UAC.3", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OUL_R23_NTE_4, "NTE.4", HL7::optional, HL7::repetition_off);
    addObject<NK1>(OUL_R23_NK1_6, "NK1.6", HL7::optional, HL7::repetition_on);
    addObject<DSC>(OUL_R23_DSC_8, "DSC.8", HL7::optional, HL7::repetition_off);
    addObject<PID>(OUL_R23_PID_9, "PID.9", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OUL_R23_PD1_10, "PD1.10", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_11, "PRT.11", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OUL_R23_ARV_12, "ARV.12", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OUL_R23_NTE_13, "NTE.13", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R23_OBX_16, "OBX.16", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_17, "PRT.17", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R23_OBX_18, "OBX.18", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_19, "PRT.19", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OUL_R23_PV1_20, "PV1.20", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OUL_R23_PV2_21, "PV2.21", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_22, "PRT.22", HL7::optional, HL7::repetition_off);
    addObject<SPM>(OUL_R23_SPM_23, "SPM.23", HL7::initialized, HL7::repetition_off);
    addObject<OBX>(OUL_R23_OBX_26, "OBX.26", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_27, "PRT.27", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R23_OBX_28, "OBX.28", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_29, "PRT.29", HL7::optional, HL7::repetition_off);
    addObject<SAC>(OUL_R23_SAC_30, "SAC.30", HL7::initialized, HL7::repetition_off);
    addObject<INV>(OUL_R23_INV_31, "INV.31", HL7::optional, HL7::repetition_off);
    addObject<OBR>(OUL_R23_OBR_33, "OBR.33", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_34, "PRT.34", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OUL_R23_NTE_36, "NTE.36", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_37, "PRT.37", HL7::optional, HL7::repetition_off);
    addObject<CTI>(OUL_R23_CTI_40, "CTI.40", HL7::optional, HL7::repetition_off);
    addObject<ORC>(OUL_R23_ORC_41, "ORC.41", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_42, "PRT.42", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R23_OBX_44, "OBX.44", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_45, "PRT.45", HL7::optional, HL7::repetition_off);
    addObject<TXA>(OUL_R23_TXA_46, "TXA.46", HL7::initialized, HL7::repetition_off);
    addObject<ORC>(OUL_R23_ORC_47, "ORC.47", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_48, "PRT.48", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OUL_R23_TQ1_50, "TQ1.50", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OUL_R23_TQ2_51, "TQ2.51", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R23_OBX_52, "OBX.52", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_53, "PRT.53", HL7::optional, HL7::repetition_off);
    addObject<TXA>(OUL_R23_TXA_54, "TXA.54", HL7::initialized, HL7::repetition_off);
    addObject<ORC>(OUL_R23_ORC_55, "ORC.55", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_56, "PRT.56", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OUL_R23_TQ1_58, "TQ1.58", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OUL_R23_TQ2_59, "TQ2.59", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R23_OBX_60, "OBX.60", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_61, "PRT.61", HL7::optional, HL7::repetition_off);
    addObject<TCD>(OUL_R23_TCD_62, "TCD.62", HL7::optional, HL7::repetition_off);
    addObject<SID>(OUL_R23_SID_63, "SID.63", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OUL_R23_NTE_64, "NTE.64", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R23_OBX_65, "OBX.65", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R23_PRT_66, "PRT.66", HL7::optional, HL7::repetition_off);
    addObject<TXA>(OUL_R23_TXA_67, "TXA.67", HL7::initialized, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, OUL_R23_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, OUL_R23_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, OUL_R23_UAC_3);
  }
  NTE* getNTE_4(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R23_NTE_4);
  }
  NK1* getNK1_6(size_t index = 0) {
    return (NK1*)this->getObjectSafe(index, OUL_R23_NK1_6);
  }
  DSC* getDSC_8(size_t index = 0) {
    return (DSC*)this->getObjectSafe(index, OUL_R23_DSC_8);
  }
  PID* getPID_9(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OUL_R23_PID_9);
  }
  PD1* getPD1_10(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OUL_R23_PD1_10);
  }
  PRT* getPRT_11(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_11);
  }
  ARV* getARV_12(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OUL_R23_ARV_12);
  }
  NTE* getNTE_13(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R23_NTE_13);
  }
  OBX* getOBX_16(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R23_OBX_16);
  }
  PRT* getPRT_17(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_17);
  }
  OBX* getOBX_18(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R23_OBX_18);
  }
  PRT* getPRT_19(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_19);
  }
  PV1* getPV1_20(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OUL_R23_PV1_20);
  }
  PV2* getPV2_21(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OUL_R23_PV2_21);
  }
  PRT* getPRT_22(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_22);
  }
  SPM* getSPM_23(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OUL_R23_SPM_23);
  }
  OBX* getOBX_26(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R23_OBX_26);
  }
  PRT* getPRT_27(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_27);
  }
  OBX* getOBX_28(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R23_OBX_28);
  }
  PRT* getPRT_29(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_29);
  }
  SAC* getSAC_30(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OUL_R23_SAC_30);
  }
  INV* getINV_31(size_t index = 0) {
    return (INV*)this->getObjectSafe(index, OUL_R23_INV_31);
  }
  OBR* getOBR_33(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OUL_R23_OBR_33);
  }
  PRT* getPRT_34(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_34);
  }
  NTE* getNTE_36(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R23_NTE_36);
  }
  PRT* getPRT_37(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_37);
  }
  CTI* getCTI_40(size_t index = 0) {
    return (CTI*)this->getObjectSafe(index, OUL_R23_CTI_40);
  }
  ORC* getORC_41(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OUL_R23_ORC_41);
  }
  PRT* getPRT_42(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_42);
  }
  OBX* getOBX_44(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R23_OBX_44);
  }
  PRT* getPRT_45(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_45);
  }
  TXA* getTXA_46(size_t index = 0) {
    return (TXA*)this->getObjectSafe(index, OUL_R23_TXA_46);
  }
  ORC* getORC_47(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OUL_R23_ORC_47);
  }
  PRT* getPRT_48(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_48);
  }
  TQ1* getTQ1_50(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OUL_R23_TQ1_50);
  }
  TQ2* getTQ2_51(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OUL_R23_TQ2_51);
  }
  OBX* getOBX_52(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R23_OBX_52);
  }
  PRT* getPRT_53(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_53);
  }
  TXA* getTXA_54(size_t index = 0) {
    return (TXA*)this->getObjectSafe(index, OUL_R23_TXA_54);
  }
  ORC* getORC_55(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OUL_R23_ORC_55);
  }
  PRT* getPRT_56(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_56);
  }
  TQ1* getTQ1_58(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OUL_R23_TQ1_58);
  }
  TQ2* getTQ2_59(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OUL_R23_TQ2_59);
  }
  OBX* getOBX_60(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R23_OBX_60);
  }
  PRT* getPRT_61(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_61);
  }
  TCD* getTCD_62(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OUL_R23_TCD_62);
  }
  SID* getSID_63(size_t index = 0) {
    return (SID*)this->getObjectSafe(index, OUL_R23_SID_63);
  }
  NTE* getNTE_64(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R23_NTE_64);
  }
  OBX* getOBX_65(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R23_OBX_65);
  }
  PRT* getPRT_66(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R23_PRT_66);
  }
  TXA* getTXA_67(size_t index = 0) {
    return (TXA*)this->getObjectSafe(index, OUL_R23_TXA_67);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_4(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_NTE_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNK1_6(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_NK1_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDSC_8(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_DSC_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_9(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PID_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_10(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PD1_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_11(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_12(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_ARV_12) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_13(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_NTE_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_16(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBX_16) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_17(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_17) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_18(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBX_18) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_19(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_20(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PV1_20) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_21(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PV2_21) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_22(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_23(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_SPM_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_26(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBX_26) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_27(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_27) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_28(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBX_28) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_29(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_29) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_30(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_SAC_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isINV_31(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_INV_31) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_33(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBR_33) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_34(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_34) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_36(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_NTE_36) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_37(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_37) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCTI_40(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_CTI_40) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_41(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_ORC_41) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_42(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_42) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_44(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBX_44) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_45(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_45) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTXA_46(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_TXA_46) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_47(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_ORC_47) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_48(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_48) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_50(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_TQ1_50) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_51(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_TQ2_51) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_52(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBX_52) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_53(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_53) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTXA_54(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_TXA_54) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_55(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_ORC_55) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_56(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_56) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_58(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_TQ1_58) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_59(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_TQ2_59) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_60(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBX_60) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_61(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_61) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_62(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_TCD_62) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSID_63(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_SID_63) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_64(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_NTE_64) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_65(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_OBX_65) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_66(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_PRT_66) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTXA_67(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R23_TXA_67) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R23_ */
} /* namespace HL7_281 */
#endif /*  __OUL_R23__281_H__ */
