/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:06:49 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __RSP_E22__281_H__
#define __RSP_E22__281_H__

#include "../../common/Util.h"
#include "../segment/ERR.h"
#include "../segment/IVC.h"
#include "../segment/MSA.h"
#include "../segment/MSH.h"
#include "../segment/PSG.h"
#include "../segment/PSL.h"
#include "../segment/QAK.h"
#include "../segment/QPD.h"
#include "../segment/SFT.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct RSP_E22_AUTHORIZATION_INFO; /* AUTHORIZATION_INFO */
struct RSP_E22_PSL_ITEM_INFO; /* PSL_ITEM_INFO */

/* AUTHORIZATION_INFO */
struct RSP_E22_AUTHORIZATION_INFO : public HL7Group {
  RSP_E22_AUTHORIZATION_INFO() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_E22_IVC_1,
    RSP_E22_PSG_2,
    RSP_E22_RSP_E22_PSL_ITEM_INFO_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_E22_AUTHORIZATION_INFO"; }
  RSP_E22_AUTHORIZATION_INFO* create() const { return new RSP_E22_AUTHORIZATION_INFO(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_E22.AUTHORIZATION_INFO");
    addObject<IVC>(RSP_E22_IVC_1, "IVC.1", HL7::optional, HL7::repetition_on);
    addObject<PSG>(RSP_E22_PSG_2, "PSG.2", HL7::optional, HL7::repetition_on);
    addObject<RSP_E22_PSL_ITEM_INFO>(RSP_E22_RSP_E22_PSL_ITEM_INFO_3, "RSP_E22_PSL_ITEM_INFO.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  IVC* getIVC_1(size_t index = 0) {
    return (IVC*)this->getObjectSafe(index, RSP_E22_IVC_1);
  }
  PSG* getPSG_2(size_t index = 0) {
    return (PSG*)this->getObjectSafe(index, RSP_E22_PSG_2);
  }
  RSP_E22_PSL_ITEM_INFO* getRSP_E22_PSL_ITEM_INFO_3(size_t index = 0) {
    return (RSP_E22_PSL_ITEM_INFO*)this->getObjectSafe(index, RSP_E22_RSP_E22_PSL_ITEM_INFO_3);
  }

  /* Checker list */
  bool isIVC_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_IVC_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPSG_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_PSG_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_E22_PSL_ITEM_INFO_3(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_RSP_E22_PSL_ITEM_INFO_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_E22_AUTHORIZATION_INFO */

/* PSL_ITEM_INFO */
struct RSP_E22_PSL_ITEM_INFO : public HL7Group {
  RSP_E22_PSL_ITEM_INFO() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_E22_PSL_1,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_E22_PSL_ITEM_INFO"; }
  RSP_E22_PSL_ITEM_INFO* create() const { return new RSP_E22_PSL_ITEM_INFO(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_E22.PSL_ITEM_INFO");
    addObject<PSL>(RSP_E22_PSL_1, "PSL.1", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PSL* getPSL_1(size_t index = 0) {
    return (PSL*)this->getObjectSafe(index, RSP_E22_PSL_1);
  }

  /* Checker list */
  bool isPSL_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_PSL_1) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_E22_PSL_ITEM_INFO */

/* RSP_E22 */
struct RSP_E22 : public HL7Message {
  RSP_E22() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_E22_MSH_1,
    RSP_E22_SFT_2,
    RSP_E22_UAC_3,
    RSP_E22_MSA_4,
    RSP_E22_ERR_5,
    RSP_E22_QAK_6,
    RSP_E22_QPD_7,
    RSP_E22_IVC_9,
    RSP_E22_PSG_10,
    RSP_E22_PSL_33,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_E22"; }
  RSP_E22* create() const { return new RSP_E22(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_E22");
    addObject<MSH>(RSP_E22_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(RSP_E22_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(RSP_E22_UAC_3, "UAC.3", HL7::optional, HL7::repetition_on);
    addObject<MSA>(RSP_E22_MSA_4, "MSA.4", HL7::initialized, HL7::repetition_off);
    addObject<ERR>(RSP_E22_ERR_5, "ERR.5", HL7::optional, HL7::repetition_on);
    addObject<QAK>(RSP_E22_QAK_6, "QAK.6", HL7::initialized, HL7::repetition_off);
    addObject<QPD>(RSP_E22_QPD_7, "QPD.7", HL7::initialized, HL7::repetition_off);
    addObject<IVC>(RSP_E22_IVC_9, "IVC.9", HL7::initialized, HL7::repetition_off);
    addObject<PSG>(RSP_E22_PSG_10, "PSG.10", HL7::initialized, HL7::repetition_off);
    addObject<PSL>(RSP_E22_PSL_33, "PSL.33", HL7::initialized, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, RSP_E22_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, RSP_E22_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, RSP_E22_UAC_3);
  }
  MSA* getMSA_4(size_t index = 0) {
    return (MSA*)this->getObjectSafe(index, RSP_E22_MSA_4);
  }
  ERR* getERR_5(size_t index = 0) {
    return (ERR*)this->getObjectSafe(index, RSP_E22_ERR_5);
  }
  QAK* getQAK_6(size_t index = 0) {
    return (QAK*)this->getObjectSafe(index, RSP_E22_QAK_6);
  }
  QPD* getQPD_7(size_t index = 0) {
    return (QPD*)this->getObjectSafe(index, RSP_E22_QPD_7);
  }
  IVC* getIVC_9(size_t index = 0) {
    return (IVC*)this->getObjectSafe(index, RSP_E22_IVC_9);
  }
  PSG* getPSG_10(size_t index = 0) {
    return (PSG*)this->getObjectSafe(index, RSP_E22_PSG_10);
  }
  PSL* getPSL_33(size_t index = 0) {
    return (PSL*)this->getObjectSafe(index, RSP_E22_PSL_33);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isMSA_4(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_MSA_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isERR_5(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_ERR_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isQAK_6(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_QAK_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isQPD_7(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_QPD_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIVC_9(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_IVC_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPSG_10(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_PSG_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPSL_33(size_t index = 0) {
    try {
      return this->getObject(index, RSP_E22_PSL_33) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_E22_ */
} /* namespace HL7_281 */
#endif /*  __RSP_E22__281_H__ */
