/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:04:48 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __OPU_R25__281_H__
#define __OPU_R25__281_H__

#include "../../common/Util.h"
#include "../segment/ARV.h"
#include "../segment/INV.h"
#include "../segment/MSH.h"
#include "../segment/NK1.h"
#include "../segment/NTE.h"
#include "../segment/OBR.h"
#include "../segment/OBX.h"
#include "../segment/ORC.h"
#include "../segment/PD1.h"
#include "../segment/PID.h"
#include "../segment/PRT.h"
#include "../segment/PV1.h"
#include "../segment/PV2.h"
#include "../segment/SAC.h"
#include "../segment/SFT.h"
#include "../segment/SPM.h"
#include "../segment/TQ1.h"
#include "../segment/TQ2.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct OPU_R25_PATIENT_VISIT_OBSERVATION; /* PATIENT_VISIT_OBSERVATION */
struct OPU_R25_ACCESSION_DETAIL; /* ACCESSION_DETAIL */
struct OPU_R25_PATIENT; /* PATIENT */
struct OPU_R25_SPECIMEN; /* SPECIMEN */
struct OPU_R25_PATIENT_OBSERVATION; /* PATIENT_OBSERVATION */
struct OPU_R25_PATIENT_OBSERVATION; /* PATIENT_OBSERVATION */
struct OPU_R25_SPECIMEN_OBSERVATION; /* SPECIMEN_OBSERVATION */
struct OPU_R25_CONTAINER; /* CONTAINER */
struct OPU_R25_ORDER; /* ORDER */
struct OPU_R25_COMMON_ORDER; /* COMMON_ORDER */
struct OPU_R25_TIMING_QTY; /* TIMING_QTY */
struct OPU_R25_RESULT; /* RESULT */

/* PATIENT_VISIT_OBSERVATION */
struct OPU_R25_PATIENT_VISIT_OBSERVATION : public HL7Group {
  OPU_R25_PATIENT_VISIT_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPU_R25_NTE_1,
    OPU_R25_OBX_2,
    OPU_R25_PRT_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPU_R25_PATIENT_VISIT_OBSERVATION"; }
  OPU_R25_PATIENT_VISIT_OBSERVATION* create() const { return new OPU_R25_PATIENT_VISIT_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPU_R25.PATIENT_VISIT_OBSERVATION");
    addObject<NTE>(OPU_R25_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(OPU_R25_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OPU_R25_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_3);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPU_R25_PATIENT_VISIT_OBSERVATION */

/* ACCESSION_DETAIL */
struct OPU_R25_ACCESSION_DETAIL : public HL7Group {
  OPU_R25_ACCESSION_DETAIL() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPU_R25_NK1_1,
    OPU_R25_OPU_R25_PATIENT_2,
    OPU_R25_OPU_R25_SPECIMEN_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPU_R25_ACCESSION_DETAIL"; }
  OPU_R25_ACCESSION_DETAIL* create() const { return new OPU_R25_ACCESSION_DETAIL(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPU_R25.ACCESSION_DETAIL");
    addObject<NK1>(OPU_R25_NK1_1, "NK1.1", HL7::optional, HL7::repetition_on);
    addObject<OPU_R25_PATIENT>(OPU_R25_OPU_R25_PATIENT_2, "OPU_R25_PATIENT.2", HL7::optional, HL7::repetition_on);
    addObject<OPU_R25_SPECIMEN>(OPU_R25_OPU_R25_SPECIMEN_3, "OPU_R25_SPECIMEN.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NK1* getNK1_1(size_t index = 0) {
    return (NK1*)this->getObjectSafe(index, OPU_R25_NK1_1);
  }
  OPU_R25_PATIENT* getOPU_R25_PATIENT_2(size_t index = 0) {
    return (OPU_R25_PATIENT*)this->getObjectSafe(index, OPU_R25_OPU_R25_PATIENT_2);
  }
  OPU_R25_SPECIMEN* getOPU_R25_SPECIMEN_3(size_t index = 0) {
    return (OPU_R25_SPECIMEN*)this->getObjectSafe(index, OPU_R25_OPU_R25_SPECIMEN_3);
  }

  /* Checker list */
  bool isNK1_1(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NK1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOPU_R25_PATIENT_2(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OPU_R25_PATIENT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOPU_R25_SPECIMEN_3(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OPU_R25_SPECIMEN_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPU_R25_ACCESSION_DETAIL */

/* PATIENT */
struct OPU_R25_PATIENT : public HL7Group {
  OPU_R25_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPU_R25_ARV_1,
    OPU_R25_OPU_R25_PATIENT_OBSERVATION_2,
    OPU_R25_PD1_3,
    OPU_R25_PID_4,
    OPU_R25_PRT_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPU_R25_PATIENT"; }
  OPU_R25_PATIENT* create() const { return new OPU_R25_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPU_R25.PATIENT");
    addObject<ARV>(OPU_R25_ARV_1, "ARV.1", HL7::optional, HL7::repetition_on);
    addObject<OPU_R25_PATIENT_OBSERVATION>(OPU_R25_OPU_R25_PATIENT_OBSERVATION_2, "OPU_R25_PATIENT_OBSERVATION.2", HL7::optional, HL7::repetition_on);
    addObject<PD1>(OPU_R25_PD1_3, "PD1.3", HL7::optional, HL7::repetition_on);
    addObject<PID>(OPU_R25_PID_4, "PID.4", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OPU_R25_PRT_5, "PRT.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ARV* getARV_1(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OPU_R25_ARV_1);
  }
  OPU_R25_PATIENT_OBSERVATION* getOPU_R25_PATIENT_OBSERVATION_2(size_t index = 0) {
    return (OPU_R25_PATIENT_OBSERVATION*)this->getObjectSafe(index, OPU_R25_OPU_R25_PATIENT_OBSERVATION_2);
  }
  PD1* getPD1_3(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OPU_R25_PD1_3);
  }
  PID* getPID_4(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OPU_R25_PID_4);
  }
  PRT* getPRT_5(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_5);
  }

  /* Checker list */
  bool isARV_1(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_ARV_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOPU_R25_PATIENT_OBSERVATION_2(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OPU_R25_PATIENT_OBSERVATION_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_3(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PD1_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_4(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PID_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_5(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPU_R25_PATIENT */

/* SPECIMEN */
struct OPU_R25_SPECIMEN : public HL7Group {
  OPU_R25_SPECIMEN() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPU_R25_OPU_R25_CONTAINER_1,
    OPU_R25_OPU_R25_ORDER_2,
    OPU_R25_OPU_R25_SPECIMEN_OBSERVATION_3,
    OPU_R25_SPM_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPU_R25_SPECIMEN"; }
  OPU_R25_SPECIMEN* create() const { return new OPU_R25_SPECIMEN(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPU_R25.SPECIMEN");
    addObject<OPU_R25_CONTAINER>(OPU_R25_OPU_R25_CONTAINER_1, "OPU_R25_CONTAINER.1", HL7::optional, HL7::repetition_on);
    addObject<OPU_R25_ORDER>(OPU_R25_OPU_R25_ORDER_2, "OPU_R25_ORDER.2", HL7::optional, HL7::repetition_on);
    addObject<OPU_R25_SPECIMEN_OBSERVATION>(OPU_R25_OPU_R25_SPECIMEN_OBSERVATION_3, "OPU_R25_SPECIMEN_OBSERVATION.3", HL7::optional, HL7::repetition_on);
    addObject<SPM>(OPU_R25_SPM_4, "SPM.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OPU_R25_CONTAINER* getOPU_R25_CONTAINER_1(size_t index = 0) {
    return (OPU_R25_CONTAINER*)this->getObjectSafe(index, OPU_R25_OPU_R25_CONTAINER_1);
  }
  OPU_R25_ORDER* getOPU_R25_ORDER_2(size_t index = 0) {
    return (OPU_R25_ORDER*)this->getObjectSafe(index, OPU_R25_OPU_R25_ORDER_2);
  }
  OPU_R25_SPECIMEN_OBSERVATION* getOPU_R25_SPECIMEN_OBSERVATION_3(size_t index = 0) {
    return (OPU_R25_SPECIMEN_OBSERVATION*)this->getObjectSafe(index, OPU_R25_OPU_R25_SPECIMEN_OBSERVATION_3);
  }
  SPM* getSPM_4(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OPU_R25_SPM_4);
  }

  /* Checker list */
  bool isOPU_R25_CONTAINER_1(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OPU_R25_CONTAINER_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOPU_R25_ORDER_2(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OPU_R25_ORDER_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOPU_R25_SPECIMEN_OBSERVATION_3(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OPU_R25_SPECIMEN_OBSERVATION_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_4(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_SPM_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPU_R25_SPECIMEN */

/* PATIENT_OBSERVATION */
struct OPU_R25_PATIENT_OBSERVATION : public HL7Group {
  OPU_R25_PATIENT_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPU_R25_NTE_1,
    OPU_R25_OBX_2,
    OPU_R25_PRT_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPU_R25_PATIENT_OBSERVATION"; }
  OPU_R25_PATIENT_OBSERVATION* create() const { return new OPU_R25_PATIENT_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPU_R25.PATIENT_OBSERVATION");
    addObject<NTE>(OPU_R25_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(OPU_R25_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OPU_R25_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_3);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPU_R25_PATIENT_OBSERVATION */

/* SPECIMEN_OBSERVATION */
struct OPU_R25_SPECIMEN_OBSERVATION : public HL7Group {
  OPU_R25_SPECIMEN_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPU_R25_NTE_1,
    OPU_R25_OBX_2,
    OPU_R25_PRT_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPU_R25_SPECIMEN_OBSERVATION"; }
  OPU_R25_SPECIMEN_OBSERVATION* create() const { return new OPU_R25_SPECIMEN_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPU_R25.SPECIMEN_OBSERVATION");
    addObject<NTE>(OPU_R25_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(OPU_R25_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OPU_R25_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_3);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPU_R25_SPECIMEN_OBSERVATION */

/* CONTAINER */
struct OPU_R25_CONTAINER : public HL7Group {
  OPU_R25_CONTAINER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPU_R25_INV_1,
    OPU_R25_SAC_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPU_R25_CONTAINER"; }
  OPU_R25_CONTAINER* create() const { return new OPU_R25_CONTAINER(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPU_R25.CONTAINER");
    addObject<INV>(OPU_R25_INV_1, "INV.1", HL7::optional, HL7::repetition_on);
    addObject<SAC>(OPU_R25_SAC_2, "SAC.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  INV* getINV_1(size_t index = 0) {
    return (INV*)this->getObjectSafe(index, OPU_R25_INV_1);
  }
  SAC* getSAC_2(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OPU_R25_SAC_2);
  }

  /* Checker list */
  bool isINV_1(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_INV_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_2(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_SAC_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPU_R25_CONTAINER */

/* ORDER */
struct OPU_R25_ORDER : public HL7Group {
  OPU_R25_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPU_R25_NTE_1,
    OPU_R25_OBR_2,
    OPU_R25_OPU_R25_COMMON_ORDER_3,
    OPU_R25_OPU_R25_RESULT_4,
    OPU_R25_OPU_R25_TIMING_QTY_5,
    OPU_R25_PRT_6,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPU_R25_ORDER"; }
  OPU_R25_ORDER* create() const { return new OPU_R25_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPU_R25.ORDER");
    addObject<NTE>(OPU_R25_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBR>(OPU_R25_OBR_2, "OBR.2", HL7::optional, HL7::repetition_on);
    addObject<OPU_R25_COMMON_ORDER>(OPU_R25_OPU_R25_COMMON_ORDER_3, "OPU_R25_COMMON_ORDER.3", HL7::optional, HL7::repetition_on);
    addObject<OPU_R25_RESULT>(OPU_R25_OPU_R25_RESULT_4, "OPU_R25_RESULT.4", HL7::optional, HL7::repetition_on);
    addObject<OPU_R25_TIMING_QTY>(OPU_R25_OPU_R25_TIMING_QTY_5, "OPU_R25_TIMING_QTY.5", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OPU_R25_PRT_6, "PRT.6", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_1);
  }
  OBR* getOBR_2(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OPU_R25_OBR_2);
  }
  OPU_R25_COMMON_ORDER* getOPU_R25_COMMON_ORDER_3(size_t index = 0) {
    return (OPU_R25_COMMON_ORDER*)this->getObjectSafe(index, OPU_R25_OPU_R25_COMMON_ORDER_3);
  }
  OPU_R25_RESULT* getOPU_R25_RESULT_4(size_t index = 0) {
    return (OPU_R25_RESULT*)this->getObjectSafe(index, OPU_R25_OPU_R25_RESULT_4);
  }
  OPU_R25_TIMING_QTY* getOPU_R25_TIMING_QTY_5(size_t index = 0) {
    return (OPU_R25_TIMING_QTY*)this->getObjectSafe(index, OPU_R25_OPU_R25_TIMING_QTY_5);
  }
  PRT* getPRT_6(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_6);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_2(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBR_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOPU_R25_COMMON_ORDER_3(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OPU_R25_COMMON_ORDER_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOPU_R25_RESULT_4(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OPU_R25_RESULT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOPU_R25_TIMING_QTY_5(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OPU_R25_TIMING_QTY_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_6(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_6) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPU_R25_ORDER */

/* COMMON_ORDER */
struct OPU_R25_COMMON_ORDER : public HL7Group {
  OPU_R25_COMMON_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPU_R25_ORC_1,
    OPU_R25_PRT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPU_R25_COMMON_ORDER"; }
  OPU_R25_COMMON_ORDER* create() const { return new OPU_R25_COMMON_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPU_R25.COMMON_ORDER");
    addObject<ORC>(OPU_R25_ORC_1, "ORC.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OPU_R25_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ORC* getORC_1(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OPU_R25_ORC_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_2);
  }

  /* Checker list */
  bool isORC_1(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_ORC_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPU_R25_COMMON_ORDER */

/* TIMING_QTY */
struct OPU_R25_TIMING_QTY : public HL7Group {
  OPU_R25_TIMING_QTY() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPU_R25_TQ1_1,
    OPU_R25_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPU_R25_TIMING_QTY"; }
  OPU_R25_TIMING_QTY* create() const { return new OPU_R25_TIMING_QTY(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPU_R25.TIMING_QTY");
    addObject<TQ1>(OPU_R25_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(OPU_R25_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OPU_R25_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OPU_R25_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPU_R25_TIMING_QTY */

/* RESULT */
struct OPU_R25_RESULT : public HL7Group {
  OPU_R25_RESULT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPU_R25_NTE_1,
    OPU_R25_OBX_2,
    OPU_R25_PRT_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPU_R25_RESULT"; }
  OPU_R25_RESULT* create() const { return new OPU_R25_RESULT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPU_R25.RESULT");
    addObject<NTE>(OPU_R25_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(OPU_R25_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OPU_R25_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_3);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPU_R25_RESULT */

/* OPU_R25 */
struct OPU_R25 : public HL7Message {
  OPU_R25() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPU_R25_MSH_1,
    OPU_R25_SFT_2,
    OPU_R25_UAC_3,
    OPU_R25_NTE_4,
    OPU_R25_PV1_5,
    OPU_R25_PV2_6,
    OPU_R25_PRT_7,
    OPU_R25_NK1_10,
    OPU_R25_PID_13,
    OPU_R25_PD1_14,
    OPU_R25_PRT_15,
    OPU_R25_ARV_16,
    OPU_R25_OBX_18,
    OPU_R25_PRT_19,
    OPU_R25_NTE_20,
    OPU_R25_PID_21,
    OPU_R25_PD1_22,
    OPU_R25_PRT_23,
    OPU_R25_ARV_24,
    OPU_R25_SPM_26,
    OPU_R25_OBX_30,
    OPU_R25_PRT_31,
    OPU_R25_NTE_32,
    OPU_R25_OBX_33,
    OPU_R25_PRT_34,
    OPU_R25_NTE_35,
    OPU_R25_OBX_36,
    OPU_R25_PRT_37,
    OPU_R25_NTE_38,
    OPU_R25_OBX_39,
    OPU_R25_PRT_40,
    OPU_R25_NTE_41,
    OPU_R25_OBX_42,
    OPU_R25_PRT_43,
    OPU_R25_NTE_44,
    OPU_R25_SAC_45,
    OPU_R25_INV_46,
    OPU_R25_OBX_47,
    OPU_R25_PRT_48,
    OPU_R25_NTE_49,
    OPU_R25_OBX_50,
    OPU_R25_PRT_51,
    OPU_R25_NTE_52,
    OPU_R25_SAC_53,
    OPU_R25_INV_54,
    OPU_R25_OBR_55,
    OPU_R25_PRT_56,
    OPU_R25_NTE_58,
    OPU_R25_PRT_59,
    OPU_R25_ORC_62,
    OPU_R25_PRT_63,
    OPU_R25_ORC_64,
    OPU_R25_PRT_65,
    OPU_R25_TQ1_66,
    OPU_R25_TQ2_67,
    OPU_R25_ORC_68,
    OPU_R25_PRT_69,
    OPU_R25_TQ1_70,
    OPU_R25_TQ2_71,
    OPU_R25_OBX_72,
    OPU_R25_PRT_73,
    OPU_R25_NTE_74,
    OPU_R25_OBX_75,
    OPU_R25_NTE_76,
    OPU_R25_PRT_77,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPU_R25"; }
  OPU_R25* create() const { return new OPU_R25(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPU_R25");
    addObject<MSH>(OPU_R25_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(OPU_R25_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(OPU_R25_UAC_3, "UAC.3", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OPU_R25_NTE_4, "NTE.4", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OPU_R25_PV1_5, "PV1.5", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OPU_R25_PV2_6, "PV2.6", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_7, "PRT.7", HL7::optional, HL7::repetition_on);
    addObject<NK1>(OPU_R25_NK1_10, "NK1.10", HL7::initialized, HL7::repetition_off);
    addObject<PID>(OPU_R25_PID_13, "PID.13", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OPU_R25_PD1_14, "PD1.14", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_15, "PRT.15", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OPU_R25_ARV_16, "ARV.16", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OPU_R25_OBX_18, "OBX.18", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_19, "PRT.19", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OPU_R25_NTE_20, "NTE.20", HL7::optional, HL7::repetition_off);
    addObject<PID>(OPU_R25_PID_21, "PID.21", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OPU_R25_PD1_22, "PD1.22", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_23, "PRT.23", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OPU_R25_ARV_24, "ARV.24", HL7::optional, HL7::repetition_off);
    addObject<SPM>(OPU_R25_SPM_26, "SPM.26", HL7::initialized, HL7::repetition_off);
    addObject<OBX>(OPU_R25_OBX_30, "OBX.30", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_31, "PRT.31", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OPU_R25_NTE_32, "NTE.32", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OPU_R25_OBX_33, "OBX.33", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_34, "PRT.34", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OPU_R25_NTE_35, "NTE.35", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OPU_R25_OBX_36, "OBX.36", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_37, "PRT.37", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OPU_R25_NTE_38, "NTE.38", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OPU_R25_OBX_39, "OBX.39", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_40, "PRT.40", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OPU_R25_NTE_41, "NTE.41", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OPU_R25_OBX_42, "OBX.42", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_43, "PRT.43", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OPU_R25_NTE_44, "NTE.44", HL7::optional, HL7::repetition_off);
    addObject<SAC>(OPU_R25_SAC_45, "SAC.45", HL7::initialized, HL7::repetition_off);
    addObject<INV>(OPU_R25_INV_46, "INV.46", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OPU_R25_OBX_47, "OBX.47", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_48, "PRT.48", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OPU_R25_NTE_49, "NTE.49", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OPU_R25_OBX_50, "OBX.50", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_51, "PRT.51", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OPU_R25_NTE_52, "NTE.52", HL7::optional, HL7::repetition_off);
    addObject<SAC>(OPU_R25_SAC_53, "SAC.53", HL7::initialized, HL7::repetition_off);
    addObject<INV>(OPU_R25_INV_54, "INV.54", HL7::optional, HL7::repetition_off);
    addObject<OBR>(OPU_R25_OBR_55, "OBR.55", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_56, "PRT.56", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OPU_R25_NTE_58, "NTE.58", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_59, "PRT.59", HL7::optional, HL7::repetition_off);
    addObject<ORC>(OPU_R25_ORC_62, "ORC.62", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_63, "PRT.63", HL7::optional, HL7::repetition_off);
    addObject<ORC>(OPU_R25_ORC_64, "ORC.64", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_65, "PRT.65", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OPU_R25_TQ1_66, "TQ1.66", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OPU_R25_TQ2_67, "TQ2.67", HL7::optional, HL7::repetition_off);
    addObject<ORC>(OPU_R25_ORC_68, "ORC.68", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_69, "PRT.69", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OPU_R25_TQ1_70, "TQ1.70", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OPU_R25_TQ2_71, "TQ2.71", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OPU_R25_OBX_72, "OBX.72", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_73, "PRT.73", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OPU_R25_NTE_74, "NTE.74", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OPU_R25_OBX_75, "OBX.75", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(OPU_R25_NTE_76, "NTE.76", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OPU_R25_PRT_77, "PRT.77", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, OPU_R25_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, OPU_R25_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, OPU_R25_UAC_3);
  }
  NTE* getNTE_4(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_4);
  }
  PV1* getPV1_5(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OPU_R25_PV1_5);
  }
  PV2* getPV2_6(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OPU_R25_PV2_6);
  }
  PRT* getPRT_7(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_7);
  }
  NK1* getNK1_10(size_t index = 0) {
    return (NK1*)this->getObjectSafe(index, OPU_R25_NK1_10);
  }
  PID* getPID_13(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OPU_R25_PID_13);
  }
  PD1* getPD1_14(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OPU_R25_PD1_14);
  }
  PRT* getPRT_15(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_15);
  }
  ARV* getARV_16(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OPU_R25_ARV_16);
  }
  OBX* getOBX_18(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_18);
  }
  PRT* getPRT_19(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_19);
  }
  NTE* getNTE_20(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_20);
  }
  PID* getPID_21(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OPU_R25_PID_21);
  }
  PD1* getPD1_22(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OPU_R25_PD1_22);
  }
  PRT* getPRT_23(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_23);
  }
  ARV* getARV_24(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OPU_R25_ARV_24);
  }
  SPM* getSPM_26(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OPU_R25_SPM_26);
  }
  OBX* getOBX_30(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_30);
  }
  PRT* getPRT_31(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_31);
  }
  NTE* getNTE_32(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_32);
  }
  OBX* getOBX_33(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_33);
  }
  PRT* getPRT_34(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_34);
  }
  NTE* getNTE_35(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_35);
  }
  OBX* getOBX_36(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_36);
  }
  PRT* getPRT_37(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_37);
  }
  NTE* getNTE_38(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_38);
  }
  OBX* getOBX_39(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_39);
  }
  PRT* getPRT_40(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_40);
  }
  NTE* getNTE_41(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_41);
  }
  OBX* getOBX_42(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_42);
  }
  PRT* getPRT_43(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_43);
  }
  NTE* getNTE_44(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_44);
  }
  SAC* getSAC_45(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OPU_R25_SAC_45);
  }
  INV* getINV_46(size_t index = 0) {
    return (INV*)this->getObjectSafe(index, OPU_R25_INV_46);
  }
  OBX* getOBX_47(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_47);
  }
  PRT* getPRT_48(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_48);
  }
  NTE* getNTE_49(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_49);
  }
  OBX* getOBX_50(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_50);
  }
  PRT* getPRT_51(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_51);
  }
  NTE* getNTE_52(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_52);
  }
  SAC* getSAC_53(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OPU_R25_SAC_53);
  }
  INV* getINV_54(size_t index = 0) {
    return (INV*)this->getObjectSafe(index, OPU_R25_INV_54);
  }
  OBR* getOBR_55(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OPU_R25_OBR_55);
  }
  PRT* getPRT_56(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_56);
  }
  NTE* getNTE_58(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_58);
  }
  PRT* getPRT_59(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_59);
  }
  ORC* getORC_62(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OPU_R25_ORC_62);
  }
  PRT* getPRT_63(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_63);
  }
  ORC* getORC_64(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OPU_R25_ORC_64);
  }
  PRT* getPRT_65(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_65);
  }
  TQ1* getTQ1_66(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OPU_R25_TQ1_66);
  }
  TQ2* getTQ2_67(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OPU_R25_TQ2_67);
  }
  ORC* getORC_68(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OPU_R25_ORC_68);
  }
  PRT* getPRT_69(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_69);
  }
  TQ1* getTQ1_70(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OPU_R25_TQ1_70);
  }
  TQ2* getTQ2_71(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OPU_R25_TQ2_71);
  }
  OBX* getOBX_72(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_72);
  }
  PRT* getPRT_73(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_73);
  }
  NTE* getNTE_74(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_74);
  }
  OBX* getOBX_75(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPU_R25_OBX_75);
  }
  NTE* getNTE_76(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPU_R25_NTE_76);
  }
  PRT* getPRT_77(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPU_R25_PRT_77);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_4(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_5(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PV1_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_6(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PV2_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_7(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNK1_10(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NK1_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_13(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PID_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_14(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PD1_14) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_15(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_15) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_16(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_ARV_16) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_18(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_18) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_19(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_20(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_20) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_21(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PID_21) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_22(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PD1_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_23(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_24(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_ARV_24) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_26(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_SPM_26) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_30(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_31(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_31) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_32(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_32) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_33(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_33) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_34(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_34) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_35(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_35) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_36(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_36) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_37(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_37) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_38(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_38) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_39(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_39) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_40(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_40) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_41(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_41) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_42(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_42) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_43(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_43) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_44(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_44) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_45(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_SAC_45) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isINV_46(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_INV_46) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_47(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_47) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_48(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_48) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_49(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_49) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_50(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_50) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_51(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_51) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_52(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_52) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_53(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_SAC_53) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isINV_54(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_INV_54) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_55(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBR_55) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_56(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_56) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_58(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_58) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_59(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_59) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_62(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_ORC_62) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_63(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_63) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_64(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_ORC_64) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_65(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_65) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_66(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_TQ1_66) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_67(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_TQ2_67) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_68(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_ORC_68) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_69(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_69) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_70(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_TQ1_70) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_71(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_TQ2_71) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_72(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_72) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_73(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_73) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_74(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_74) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_75(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_OBX_75) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_76(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_NTE_76) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_77(size_t index = 0) {
    try {
      return this->getObject(index, OPU_R25_PRT_77) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPU_R25_ */
} /* namespace HL7_281 */
#endif /*  __OPU_R25__281_H__ */
