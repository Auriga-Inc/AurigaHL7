/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:05:30 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __OUL_R22__281_H__
#define __OUL_R22__281_H__

#include "../../common/Util.h"
#include "../segment/ARV.h"
#include "../segment/CTI.h"
#include "../segment/DSC.h"
#include "../segment/INV.h"
#include "../segment/MSH.h"
#include "../segment/NK1.h"
#include "../segment/NTE.h"
#include "../segment/OBR.h"
#include "../segment/OBX.h"
#include "../segment/ORC.h"
#include "../segment/PD1.h"
#include "../segment/PID.h"
#include "../segment/PRT.h"
#include "../segment/PV1.h"
#include "../segment/PV2.h"
#include "../segment/SAC.h"
#include "../segment/SFT.h"
#include "../segment/SID.h"
#include "../segment/SPM.h"
#include "../segment/TCD.h"
#include "../segment/TQ1.h"
#include "../segment/TQ2.h"
#include "../segment/TXA.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct OUL_R22_PATIENT; /* PATIENT */
struct OUL_R22_SPECIMEN; /* SPECIMEN */
struct OUL_R22_PATIENT_OBSERVATION; /* PATIENT_OBSERVATION */
struct OUL_R22_VISIT; /* VISIT */
struct OUL_R22_SPECIMEN_OBSERVATION; /* SPECIMEN_OBSERVATION */
struct OUL_R22_CONTAINER; /* CONTAINER */
struct OUL_R22_ORDER; /* ORDER */
struct OUL_R22_COMMON_ORDER; /* COMMON_ORDER */
struct OUL_R22_TIMING_QTY; /* TIMING_QTY */
struct OUL_R22_RESULT; /* RESULT */
struct OUL_R22_ORDER_DOCUMENT; /* ORDER_DOCUMENT */
struct OUL_R22_ORDER_DOCUMENT; /* ORDER_DOCUMENT */
struct OUL_R22_ORDER_DOCUMENT; /* ORDER_DOCUMENT */

/* PATIENT */
struct OUL_R22_PATIENT : public HL7Group {
  OUL_R22_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R22_ARV_1,
    OUL_R22_NTE_2,
    OUL_R22_OUL_R22_PATIENT_OBSERVATION_3,
    OUL_R22_OUL_R22_VISIT_4,
    OUL_R22_PD1_5,
    OUL_R22_PID_6,
    OUL_R22_PRT_7,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R22_PATIENT"; }
  OUL_R22_PATIENT* create() const { return new OUL_R22_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R22.PATIENT");
    addObject<ARV>(OUL_R22_ARV_1, "ARV.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(OUL_R22_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
    addObject<OUL_R22_PATIENT_OBSERVATION>(OUL_R22_OUL_R22_PATIENT_OBSERVATION_3, "OUL_R22_PATIENT_OBSERVATION.3", HL7::optional, HL7::repetition_on);
    addObject<OUL_R22_VISIT>(OUL_R22_OUL_R22_VISIT_4, "OUL_R22_VISIT.4", HL7::optional, HL7::repetition_on);
    addObject<PD1>(OUL_R22_PD1_5, "PD1.5", HL7::optional, HL7::repetition_on);
    addObject<PID>(OUL_R22_PID_6, "PID.6", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R22_PRT_7, "PRT.7", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ARV* getARV_1(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OUL_R22_ARV_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R22_NTE_2);
  }
  OUL_R22_PATIENT_OBSERVATION* getOUL_R22_PATIENT_OBSERVATION_3(size_t index = 0) {
    return (OUL_R22_PATIENT_OBSERVATION*)this->getObjectSafe(index, OUL_R22_OUL_R22_PATIENT_OBSERVATION_3);
  }
  OUL_R22_VISIT* getOUL_R22_VISIT_4(size_t index = 0) {
    return (OUL_R22_VISIT*)this->getObjectSafe(index, OUL_R22_OUL_R22_VISIT_4);
  }
  PD1* getPD1_5(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OUL_R22_PD1_5);
  }
  PID* getPID_6(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OUL_R22_PID_6);
  }
  PRT* getPRT_7(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_7);
  }

  /* Checker list */
  bool isARV_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_ARV_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R22_PATIENT_OBSERVATION_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OUL_R22_PATIENT_OBSERVATION_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R22_VISIT_4(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OUL_R22_VISIT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_5(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PD1_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_6(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PID_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_7(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_7) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R22_PATIENT */

/* SPECIMEN */
struct OUL_R22_SPECIMEN : public HL7Group {
  OUL_R22_SPECIMEN() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R22_OUL_R22_CONTAINER_1,
    OUL_R22_OUL_R22_ORDER_2,
    OUL_R22_OUL_R22_SPECIMEN_OBSERVATION_3,
    OUL_R22_SPM_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R22_SPECIMEN"; }
  OUL_R22_SPECIMEN* create() const { return new OUL_R22_SPECIMEN(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R22.SPECIMEN");
    addObject<OUL_R22_CONTAINER>(OUL_R22_OUL_R22_CONTAINER_1, "OUL_R22_CONTAINER.1", HL7::optional, HL7::repetition_on);
    addObject<OUL_R22_ORDER>(OUL_R22_OUL_R22_ORDER_2, "OUL_R22_ORDER.2", HL7::optional, HL7::repetition_on);
    addObject<OUL_R22_SPECIMEN_OBSERVATION>(OUL_R22_OUL_R22_SPECIMEN_OBSERVATION_3, "OUL_R22_SPECIMEN_OBSERVATION.3", HL7::optional, HL7::repetition_on);
    addObject<SPM>(OUL_R22_SPM_4, "SPM.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OUL_R22_CONTAINER* getOUL_R22_CONTAINER_1(size_t index = 0) {
    return (OUL_R22_CONTAINER*)this->getObjectSafe(index, OUL_R22_OUL_R22_CONTAINER_1);
  }
  OUL_R22_ORDER* getOUL_R22_ORDER_2(size_t index = 0) {
    return (OUL_R22_ORDER*)this->getObjectSafe(index, OUL_R22_OUL_R22_ORDER_2);
  }
  OUL_R22_SPECIMEN_OBSERVATION* getOUL_R22_SPECIMEN_OBSERVATION_3(size_t index = 0) {
    return (OUL_R22_SPECIMEN_OBSERVATION*)this->getObjectSafe(index, OUL_R22_OUL_R22_SPECIMEN_OBSERVATION_3);
  }
  SPM* getSPM_4(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OUL_R22_SPM_4);
  }

  /* Checker list */
  bool isOUL_R22_CONTAINER_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OUL_R22_CONTAINER_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R22_ORDER_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OUL_R22_ORDER_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R22_SPECIMEN_OBSERVATION_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OUL_R22_SPECIMEN_OBSERVATION_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_4(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_SPM_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R22_SPECIMEN */

/* PATIENT_OBSERVATION */
struct OUL_R22_PATIENT_OBSERVATION : public HL7Group {
  OUL_R22_PATIENT_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R22_OBX_1,
    OUL_R22_PRT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R22_PATIENT_OBSERVATION"; }
  OUL_R22_PATIENT_OBSERVATION* create() const { return new OUL_R22_PATIENT_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R22.PATIENT_OBSERVATION");
    addObject<OBX>(OUL_R22_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R22_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R22_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_2);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R22_PATIENT_OBSERVATION */

/* VISIT */
struct OUL_R22_VISIT : public HL7Group {
  OUL_R22_VISIT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R22_PRT_1,
    OUL_R22_PV1_2,
    OUL_R22_PV2_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R22_VISIT"; }
  OUL_R22_VISIT* create() const { return new OUL_R22_VISIT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R22.VISIT");
    addObject<PRT>(OUL_R22_PRT_1, "PRT.1", HL7::optional, HL7::repetition_on);
    addObject<PV1>(OUL_R22_PV1_2, "PV1.2", HL7::optional, HL7::repetition_on);
    addObject<PV2>(OUL_R22_PV2_3, "PV2.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PRT* getPRT_1(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_1);
  }
  PV1* getPV1_2(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OUL_R22_PV1_2);
  }
  PV2* getPV2_3(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OUL_R22_PV2_3);
  }

  /* Checker list */
  bool isPRT_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PV1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PV2_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R22_VISIT */

/* SPECIMEN_OBSERVATION */
struct OUL_R22_SPECIMEN_OBSERVATION : public HL7Group {
  OUL_R22_SPECIMEN_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R22_OBX_1,
    OUL_R22_PRT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R22_SPECIMEN_OBSERVATION"; }
  OUL_R22_SPECIMEN_OBSERVATION* create() const { return new OUL_R22_SPECIMEN_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R22.SPECIMEN_OBSERVATION");
    addObject<OBX>(OUL_R22_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R22_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R22_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_2);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R22_SPECIMEN_OBSERVATION */

/* CONTAINER */
struct OUL_R22_CONTAINER : public HL7Group {
  OUL_R22_CONTAINER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R22_INV_1,
    OUL_R22_SAC_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R22_CONTAINER"; }
  OUL_R22_CONTAINER* create() const { return new OUL_R22_CONTAINER(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R22.CONTAINER");
    addObject<INV>(OUL_R22_INV_1, "INV.1", HL7::optional, HL7::repetition_on);
    addObject<SAC>(OUL_R22_SAC_2, "SAC.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  INV* getINV_1(size_t index = 0) {
    return (INV*)this->getObjectSafe(index, OUL_R22_INV_1);
  }
  SAC* getSAC_2(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OUL_R22_SAC_2);
  }

  /* Checker list */
  bool isINV_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_INV_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_SAC_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R22_CONTAINER */

/* ORDER */
struct OUL_R22_ORDER : public HL7Group {
  OUL_R22_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R22_CTI_1,
    OUL_R22_NTE_2,
    OUL_R22_OBR_3,
    OUL_R22_OUL_R22_COMMON_ORDER_4,
    OUL_R22_OUL_R22_RESULT_5,
    OUL_R22_OUL_R22_TIMING_QTY_6,
    OUL_R22_PRT_7,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R22_ORDER"; }
  OUL_R22_ORDER* create() const { return new OUL_R22_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R22.ORDER");
    addObject<CTI>(OUL_R22_CTI_1, "CTI.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(OUL_R22_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
    addObject<OBR>(OUL_R22_OBR_3, "OBR.3", HL7::optional, HL7::repetition_on);
    addObject<OUL_R22_COMMON_ORDER>(OUL_R22_OUL_R22_COMMON_ORDER_4, "OUL_R22_COMMON_ORDER.4", HL7::optional, HL7::repetition_on);
    addObject<OUL_R22_RESULT>(OUL_R22_OUL_R22_RESULT_5, "OUL_R22_RESULT.5", HL7::optional, HL7::repetition_on);
    addObject<OUL_R22_TIMING_QTY>(OUL_R22_OUL_R22_TIMING_QTY_6, "OUL_R22_TIMING_QTY.6", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R22_PRT_7, "PRT.7", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  CTI* getCTI_1(size_t index = 0) {
    return (CTI*)this->getObjectSafe(index, OUL_R22_CTI_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R22_NTE_2);
  }
  OBR* getOBR_3(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OUL_R22_OBR_3);
  }
  OUL_R22_COMMON_ORDER* getOUL_R22_COMMON_ORDER_4(size_t index = 0) {
    return (OUL_R22_COMMON_ORDER*)this->getObjectSafe(index, OUL_R22_OUL_R22_COMMON_ORDER_4);
  }
  OUL_R22_RESULT* getOUL_R22_RESULT_5(size_t index = 0) {
    return (OUL_R22_RESULT*)this->getObjectSafe(index, OUL_R22_OUL_R22_RESULT_5);
  }
  OUL_R22_TIMING_QTY* getOUL_R22_TIMING_QTY_6(size_t index = 0) {
    return (OUL_R22_TIMING_QTY*)this->getObjectSafe(index, OUL_R22_OUL_R22_TIMING_QTY_6);
  }
  PRT* getPRT_7(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_7);
  }

  /* Checker list */
  bool isCTI_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_CTI_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R22_COMMON_ORDER_4(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OUL_R22_COMMON_ORDER_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R22_RESULT_5(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OUL_R22_RESULT_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R22_TIMING_QTY_6(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OUL_R22_TIMING_QTY_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_7(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_7) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R22_ORDER */

/* COMMON_ORDER */
struct OUL_R22_COMMON_ORDER : public HL7Group {
  OUL_R22_COMMON_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R22_ORC_1,
    OUL_R22_OUL_R22_ORDER_DOCUMENT_2,
    OUL_R22_PRT_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R22_COMMON_ORDER"; }
  OUL_R22_COMMON_ORDER* create() const { return new OUL_R22_COMMON_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R22.COMMON_ORDER");
    addObject<ORC>(OUL_R22_ORC_1, "ORC.1", HL7::optional, HL7::repetition_on);
    addObject<OUL_R22_ORDER_DOCUMENT>(OUL_R22_OUL_R22_ORDER_DOCUMENT_2, "OUL_R22_ORDER_DOCUMENT.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R22_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ORC* getORC_1(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OUL_R22_ORC_1);
  }
  OUL_R22_ORDER_DOCUMENT* getOUL_R22_ORDER_DOCUMENT_2(size_t index = 0) {
    return (OUL_R22_ORDER_DOCUMENT*)this->getObjectSafe(index, OUL_R22_OUL_R22_ORDER_DOCUMENT_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_3);
  }

  /* Checker list */
  bool isORC_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_ORC_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOUL_R22_ORDER_DOCUMENT_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OUL_R22_ORDER_DOCUMENT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R22_COMMON_ORDER */

/* TIMING_QTY */
struct OUL_R22_TIMING_QTY : public HL7Group {
  OUL_R22_TIMING_QTY() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R22_TQ1_1,
    OUL_R22_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R22_TIMING_QTY"; }
  OUL_R22_TIMING_QTY* create() const { return new OUL_R22_TIMING_QTY(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R22.TIMING_QTY");
    addObject<TQ1>(OUL_R22_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(OUL_R22_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OUL_R22_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OUL_R22_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R22_TIMING_QTY */

/* RESULT */
struct OUL_R22_RESULT : public HL7Group {
  OUL_R22_RESULT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R22_NTE_1,
    OUL_R22_OBX_2,
    OUL_R22_PRT_3,
    OUL_R22_SID_4,
    OUL_R22_TCD_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R22_RESULT"; }
  OUL_R22_RESULT* create() const { return new OUL_R22_RESULT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R22.RESULT");
    addObject<NTE>(OUL_R22_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(OUL_R22_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R22_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
    addObject<SID>(OUL_R22_SID_4, "SID.4", HL7::optional, HL7::repetition_on);
    addObject<TCD>(OUL_R22_TCD_5, "TCD.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R22_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R22_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_3);
  }
  SID* getSID_4(size_t index = 0) {
    return (SID*)this->getObjectSafe(index, OUL_R22_SID_4);
  }
  TCD* getTCD_5(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OUL_R22_TCD_5);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSID_4(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_SID_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_5(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_TCD_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R22_RESULT */

/* ORDER_DOCUMENT */
struct OUL_R22_ORDER_DOCUMENT : public HL7Group {
  OUL_R22_ORDER_DOCUMENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R22_OBX_1,
    OUL_R22_PRT_2,
    OUL_R22_TXA_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R22_ORDER_DOCUMENT"; }
  OUL_R22_ORDER_DOCUMENT* create() const { return new OUL_R22_ORDER_DOCUMENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R22.ORDER_DOCUMENT");
    addObject<OBX>(OUL_R22_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OUL_R22_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
    addObject<TXA>(OUL_R22_TXA_3, "TXA.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R22_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_2);
  }
  TXA* getTXA_3(size_t index = 0) {
    return (TXA*)this->getObjectSafe(index, OUL_R22_TXA_3);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTXA_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_TXA_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R22_ORDER_DOCUMENT */

/* OUL_R22 */
struct OUL_R22 : public HL7Message {
  OUL_R22() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OUL_R22_MSH_1,
    OUL_R22_SFT_2,
    OUL_R22_UAC_3,
    OUL_R22_NTE_4,
    OUL_R22_NK1_6,
    OUL_R22_DSC_8,
    OUL_R22_PID_9,
    OUL_R22_PD1_10,
    OUL_R22_PRT_11,
    OUL_R22_ARV_12,
    OUL_R22_NTE_13,
    OUL_R22_OBX_16,
    OUL_R22_PRT_17,
    OUL_R22_OBX_18,
    OUL_R22_PRT_19,
    OUL_R22_PV1_20,
    OUL_R22_PV2_21,
    OUL_R22_PRT_22,
    OUL_R22_SPM_23,
    OUL_R22_OBX_27,
    OUL_R22_PRT_28,
    OUL_R22_OBX_29,
    OUL_R22_PRT_30,
    OUL_R22_SAC_31,
    OUL_R22_INV_32,
    OUL_R22_OBX_33,
    OUL_R22_PRT_34,
    OUL_R22_SAC_35,
    OUL_R22_INV_36,
    OUL_R22_OBR_37,
    OUL_R22_PRT_38,
    OUL_R22_NTE_40,
    OUL_R22_PRT_41,
    OUL_R22_CTI_44,
    OUL_R22_ORC_45,
    OUL_R22_PRT_46,
    OUL_R22_OBX_48,
    OUL_R22_PRT_49,
    OUL_R22_TXA_50,
    OUL_R22_ORC_51,
    OUL_R22_PRT_52,
    OUL_R22_TQ1_54,
    OUL_R22_TQ2_55,
    OUL_R22_OBX_56,
    OUL_R22_PRT_57,
    OUL_R22_TXA_58,
    OUL_R22_ORC_59,
    OUL_R22_PRT_60,
    OUL_R22_TQ1_62,
    OUL_R22_TQ2_63,
    OUL_R22_OBX_64,
    OUL_R22_PRT_65,
    OUL_R22_TCD_66,
    OUL_R22_SID_67,
    OUL_R22_NTE_68,
    OUL_R22_OBX_69,
    OUL_R22_PRT_70,
    OUL_R22_TXA_71,
    FIELD_ID_MAX
  };

  const char* className() const { return "OUL_R22"; }
  OUL_R22* create() const { return new OUL_R22(); }

 private:
  /* Initialize object */
  void init() {
    setName("OUL_R22");
    addObject<MSH>(OUL_R22_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(OUL_R22_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(OUL_R22_UAC_3, "UAC.3", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OUL_R22_NTE_4, "NTE.4", HL7::optional, HL7::repetition_off);
    addObject<NK1>(OUL_R22_NK1_6, "NK1.6", HL7::optional, HL7::repetition_on);
    addObject<DSC>(OUL_R22_DSC_8, "DSC.8", HL7::optional, HL7::repetition_off);
    addObject<PID>(OUL_R22_PID_9, "PID.9", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OUL_R22_PD1_10, "PD1.10", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_11, "PRT.11", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OUL_R22_ARV_12, "ARV.12", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OUL_R22_NTE_13, "NTE.13", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R22_OBX_16, "OBX.16", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_17, "PRT.17", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R22_OBX_18, "OBX.18", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_19, "PRT.19", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OUL_R22_PV1_20, "PV1.20", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OUL_R22_PV2_21, "PV2.21", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_22, "PRT.22", HL7::optional, HL7::repetition_off);
    addObject<SPM>(OUL_R22_SPM_23, "SPM.23", HL7::initialized, HL7::repetition_off);
    addObject<OBX>(OUL_R22_OBX_27, "OBX.27", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_28, "PRT.28", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R22_OBX_29, "OBX.29", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_30, "PRT.30", HL7::optional, HL7::repetition_off);
    addObject<SAC>(OUL_R22_SAC_31, "SAC.31", HL7::initialized, HL7::repetition_off);
    addObject<INV>(OUL_R22_INV_32, "INV.32", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R22_OBX_33, "OBX.33", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_34, "PRT.34", HL7::optional, HL7::repetition_off);
    addObject<SAC>(OUL_R22_SAC_35, "SAC.35", HL7::initialized, HL7::repetition_off);
    addObject<INV>(OUL_R22_INV_36, "INV.36", HL7::optional, HL7::repetition_off);
    addObject<OBR>(OUL_R22_OBR_37, "OBR.37", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_38, "PRT.38", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OUL_R22_NTE_40, "NTE.40", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_41, "PRT.41", HL7::optional, HL7::repetition_off);
    addObject<CTI>(OUL_R22_CTI_44, "CTI.44", HL7::optional, HL7::repetition_off);
    addObject<ORC>(OUL_R22_ORC_45, "ORC.45", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_46, "PRT.46", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R22_OBX_48, "OBX.48", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_49, "PRT.49", HL7::optional, HL7::repetition_off);
    addObject<TXA>(OUL_R22_TXA_50, "TXA.50", HL7::initialized, HL7::repetition_off);
    addObject<ORC>(OUL_R22_ORC_51, "ORC.51", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_52, "PRT.52", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OUL_R22_TQ1_54, "TQ1.54", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OUL_R22_TQ2_55, "TQ2.55", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R22_OBX_56, "OBX.56", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_57, "PRT.57", HL7::optional, HL7::repetition_off);
    addObject<TXA>(OUL_R22_TXA_58, "TXA.58", HL7::initialized, HL7::repetition_off);
    addObject<ORC>(OUL_R22_ORC_59, "ORC.59", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_60, "PRT.60", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OUL_R22_TQ1_62, "TQ1.62", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OUL_R22_TQ2_63, "TQ2.63", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R22_OBX_64, "OBX.64", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_65, "PRT.65", HL7::optional, HL7::repetition_off);
    addObject<TCD>(OUL_R22_TCD_66, "TCD.66", HL7::optional, HL7::repetition_off);
    addObject<SID>(OUL_R22_SID_67, "SID.67", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OUL_R22_NTE_68, "NTE.68", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OUL_R22_OBX_69, "OBX.69", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OUL_R22_PRT_70, "PRT.70", HL7::optional, HL7::repetition_off);
    addObject<TXA>(OUL_R22_TXA_71, "TXA.71", HL7::initialized, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, OUL_R22_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, OUL_R22_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, OUL_R22_UAC_3);
  }
  NTE* getNTE_4(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R22_NTE_4);
  }
  NK1* getNK1_6(size_t index = 0) {
    return (NK1*)this->getObjectSafe(index, OUL_R22_NK1_6);
  }
  DSC* getDSC_8(size_t index = 0) {
    return (DSC*)this->getObjectSafe(index, OUL_R22_DSC_8);
  }
  PID* getPID_9(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OUL_R22_PID_9);
  }
  PD1* getPD1_10(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OUL_R22_PD1_10);
  }
  PRT* getPRT_11(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_11);
  }
  ARV* getARV_12(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OUL_R22_ARV_12);
  }
  NTE* getNTE_13(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R22_NTE_13);
  }
  OBX* getOBX_16(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R22_OBX_16);
  }
  PRT* getPRT_17(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_17);
  }
  OBX* getOBX_18(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R22_OBX_18);
  }
  PRT* getPRT_19(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_19);
  }
  PV1* getPV1_20(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OUL_R22_PV1_20);
  }
  PV2* getPV2_21(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OUL_R22_PV2_21);
  }
  PRT* getPRT_22(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_22);
  }
  SPM* getSPM_23(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OUL_R22_SPM_23);
  }
  OBX* getOBX_27(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R22_OBX_27);
  }
  PRT* getPRT_28(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_28);
  }
  OBX* getOBX_29(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R22_OBX_29);
  }
  PRT* getPRT_30(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_30);
  }
  SAC* getSAC_31(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OUL_R22_SAC_31);
  }
  INV* getINV_32(size_t index = 0) {
    return (INV*)this->getObjectSafe(index, OUL_R22_INV_32);
  }
  OBX* getOBX_33(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R22_OBX_33);
  }
  PRT* getPRT_34(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_34);
  }
  SAC* getSAC_35(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OUL_R22_SAC_35);
  }
  INV* getINV_36(size_t index = 0) {
    return (INV*)this->getObjectSafe(index, OUL_R22_INV_36);
  }
  OBR* getOBR_37(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OUL_R22_OBR_37);
  }
  PRT* getPRT_38(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_38);
  }
  NTE* getNTE_40(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R22_NTE_40);
  }
  PRT* getPRT_41(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_41);
  }
  CTI* getCTI_44(size_t index = 0) {
    return (CTI*)this->getObjectSafe(index, OUL_R22_CTI_44);
  }
  ORC* getORC_45(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OUL_R22_ORC_45);
  }
  PRT* getPRT_46(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_46);
  }
  OBX* getOBX_48(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R22_OBX_48);
  }
  PRT* getPRT_49(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_49);
  }
  TXA* getTXA_50(size_t index = 0) {
    return (TXA*)this->getObjectSafe(index, OUL_R22_TXA_50);
  }
  ORC* getORC_51(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OUL_R22_ORC_51);
  }
  PRT* getPRT_52(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_52);
  }
  TQ1* getTQ1_54(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OUL_R22_TQ1_54);
  }
  TQ2* getTQ2_55(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OUL_R22_TQ2_55);
  }
  OBX* getOBX_56(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R22_OBX_56);
  }
  PRT* getPRT_57(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_57);
  }
  TXA* getTXA_58(size_t index = 0) {
    return (TXA*)this->getObjectSafe(index, OUL_R22_TXA_58);
  }
  ORC* getORC_59(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OUL_R22_ORC_59);
  }
  PRT* getPRT_60(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_60);
  }
  TQ1* getTQ1_62(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OUL_R22_TQ1_62);
  }
  TQ2* getTQ2_63(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OUL_R22_TQ2_63);
  }
  OBX* getOBX_64(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R22_OBX_64);
  }
  PRT* getPRT_65(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_65);
  }
  TCD* getTCD_66(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OUL_R22_TCD_66);
  }
  SID* getSID_67(size_t index = 0) {
    return (SID*)this->getObjectSafe(index, OUL_R22_SID_67);
  }
  NTE* getNTE_68(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OUL_R22_NTE_68);
  }
  OBX* getOBX_69(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OUL_R22_OBX_69);
  }
  PRT* getPRT_70(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OUL_R22_PRT_70);
  }
  TXA* getTXA_71(size_t index = 0) {
    return (TXA*)this->getObjectSafe(index, OUL_R22_TXA_71);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_4(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_NTE_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNK1_6(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_NK1_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDSC_8(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_DSC_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_9(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PID_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_10(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PD1_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_11(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_12(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_ARV_12) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_13(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_NTE_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_16(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBX_16) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_17(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_17) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_18(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBX_18) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_19(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_20(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PV1_20) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_21(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PV2_21) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_22(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_23(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_SPM_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_27(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBX_27) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_28(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_28) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_29(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBX_29) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_30(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_31(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_SAC_31) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isINV_32(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_INV_32) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_33(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBX_33) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_34(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_34) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_35(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_SAC_35) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isINV_36(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_INV_36) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_37(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBR_37) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_38(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_38) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_40(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_NTE_40) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_41(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_41) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCTI_44(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_CTI_44) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_45(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_ORC_45) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_46(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_46) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_48(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBX_48) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_49(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_49) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTXA_50(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_TXA_50) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_51(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_ORC_51) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_52(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_52) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_54(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_TQ1_54) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_55(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_TQ2_55) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_56(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBX_56) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_57(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_57) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTXA_58(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_TXA_58) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_59(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_ORC_59) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_60(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_60) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_62(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_TQ1_62) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_63(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_TQ2_63) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_64(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBX_64) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_65(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_65) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_66(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_TCD_66) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSID_67(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_SID_67) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_68(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_NTE_68) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_69(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_OBX_69) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_70(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_PRT_70) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTXA_71(size_t index = 0) {
    try {
      return this->getObject(index, OUL_R22_TXA_71) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OUL_R22_ */
} /* namespace HL7_281 */
#endif /*  __OUL_R22__281_H__ */
