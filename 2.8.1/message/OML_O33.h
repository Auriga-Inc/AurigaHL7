/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:04:06 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __OML_O33__281_H__
#define __OML_O33__281_H__

#include "../../common/Util.h"
#include "../segment/AL1.h"
#include "../segment/ARV.h"
#include "../segment/BLG.h"
#include "../segment/CTI.h"
#include "../segment/DG1.h"
#include "../segment/FT1.h"
#include "../segment/GT1.h"
#include "../segment/IN1.h"
#include "../segment/IN2.h"
#include "../segment/IN3.h"
#include "../segment/MSH.h"
#include "../segment/NK1.h"
#include "../segment/NTE.h"
#include "../segment/OBR.h"
#include "../segment/OBX.h"
#include "../segment/ORC.h"
#include "../segment/PD1.h"
#include "../segment/PID.h"
#include "../segment/PRT.h"
#include "../segment/PV1.h"
#include "../segment/PV2.h"
#include "../segment/SAC.h"
#include "../segment/SFT.h"
#include "../segment/SPM.h"
#include "../segment/TCD.h"
#include "../segment/TQ1.h"
#include "../segment/TQ2.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct OML_O33_PATIENT; /* PATIENT */
struct OML_O33_SPECIMEN; /* SPECIMEN */
struct OML_O33_PATIENT_VISIT; /* PATIENT_VISIT */
struct OML_O33_INSURANCE; /* INSURANCE */
struct OML_O33_SPECIMEN_OBSERVATION; /* SPECIMEN_OBSERVATION */
struct OML_O33_ORDER; /* ORDER */
struct OML_O33_TIMING; /* TIMING */
struct OML_O33_OBSERVATION_REQUEST; /* OBSERVATION_REQUEST */
struct OML_O33_OBSERVATION; /* OBSERVATION */
struct OML_O33_PRIOR_RESULT; /* PRIOR_RESULT */
struct OML_O33_PATIENT_PRIOR; /* PATIENT_PRIOR */
struct OML_O33_PATIENT_VISIT_PRIOR; /* PATIENT_VISIT_PRIOR */
struct OML_O33_ORDER_PRIOR; /* ORDER_PRIOR */
struct OML_O33_TIMING_PRIOR; /* TIMING_PRIOR */
struct OML_O33_OBSERVATION_PRIOR; /* OBSERVATION_PRIOR */

/* PATIENT */
struct OML_O33_PATIENT : public HL7Group {
  OML_O33_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_AL1_1,
    OML_O33_ARV_2,
    OML_O33_GT1_3,
    OML_O33_NK1_4,
    OML_O33_NTE_5,
    OML_O33_OML_O33_INSURANCE_6,
    OML_O33_OML_O33_PATIENT_VISIT_7,
    OML_O33_PD1_8,
    OML_O33_PID_9,
    OML_O33_PRT_10,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_PATIENT"; }
  OML_O33_PATIENT* create() const { return new OML_O33_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.PATIENT");
    addObject<AL1>(OML_O33_AL1_1, "AL1.1", HL7::optional, HL7::repetition_on);
    addObject<ARV>(OML_O33_ARV_2, "ARV.2", HL7::optional, HL7::repetition_on);
    addObject<GT1>(OML_O33_GT1_3, "GT1.3", HL7::optional, HL7::repetition_on);
    addObject<NK1>(OML_O33_NK1_4, "NK1.4", HL7::optional, HL7::repetition_on);
    addObject<NTE>(OML_O33_NTE_5, "NTE.5", HL7::optional, HL7::repetition_on);
    addObject<OML_O33_INSURANCE>(OML_O33_OML_O33_INSURANCE_6, "OML_O33_INSURANCE.6", HL7::optional, HL7::repetition_on);
    addObject<OML_O33_PATIENT_VISIT>(OML_O33_OML_O33_PATIENT_VISIT_7, "OML_O33_PATIENT_VISIT.7", HL7::optional, HL7::repetition_on);
    addObject<PD1>(OML_O33_PD1_8, "PD1.8", HL7::optional, HL7::repetition_on);
    addObject<PID>(OML_O33_PID_9, "PID.9", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O33_PRT_10, "PRT.10", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AL1* getAL1_1(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, OML_O33_AL1_1);
  }
  ARV* getARV_2(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O33_ARV_2);
  }
  GT1* getGT1_3(size_t index = 0) {
    return (GT1*)this->getObjectSafe(index, OML_O33_GT1_3);
  }
  NK1* getNK1_4(size_t index = 0) {
    return (NK1*)this->getObjectSafe(index, OML_O33_NK1_4);
  }
  NTE* getNTE_5(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O33_NTE_5);
  }
  OML_O33_INSURANCE* getOML_O33_INSURANCE_6(size_t index = 0) {
    return (OML_O33_INSURANCE*)this->getObjectSafe(index, OML_O33_OML_O33_INSURANCE_6);
  }
  OML_O33_PATIENT_VISIT* getOML_O33_PATIENT_VISIT_7(size_t index = 0) {
    return (OML_O33_PATIENT_VISIT*)this->getObjectSafe(index, OML_O33_OML_O33_PATIENT_VISIT_7);
  }
  PD1* getPD1_8(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O33_PD1_8);
  }
  PID* getPID_9(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O33_PID_9);
  }
  PRT* getPRT_10(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_10);
  }

  /* Checker list */
  bool isAL1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_AL1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_ARV_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isGT1_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_GT1_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNK1_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NK1_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_5(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NTE_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O33_INSURANCE_6(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OML_O33_INSURANCE_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O33_PATIENT_VISIT_7(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OML_O33_PATIENT_VISIT_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_8(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PD1_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_9(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PID_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_10(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_10) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_PATIENT */

/* SPECIMEN */
struct OML_O33_SPECIMEN : public HL7Group {
  OML_O33_SPECIMEN() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_OML_O33_ORDER_1,
    OML_O33_OML_O33_SPECIMEN_OBSERVATION_2,
    OML_O33_SAC_3,
    OML_O33_SPM_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_SPECIMEN"; }
  OML_O33_SPECIMEN* create() const { return new OML_O33_SPECIMEN(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.SPECIMEN");
    addObject<OML_O33_ORDER>(OML_O33_OML_O33_ORDER_1, "OML_O33_ORDER.1", HL7::optional, HL7::repetition_on);
    addObject<OML_O33_SPECIMEN_OBSERVATION>(OML_O33_OML_O33_SPECIMEN_OBSERVATION_2, "OML_O33_SPECIMEN_OBSERVATION.2", HL7::optional, HL7::repetition_on);
    addObject<SAC>(OML_O33_SAC_3, "SAC.3", HL7::optional, HL7::repetition_on);
    addObject<SPM>(OML_O33_SPM_4, "SPM.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OML_O33_ORDER* getOML_O33_ORDER_1(size_t index = 0) {
    return (OML_O33_ORDER*)this->getObjectSafe(index, OML_O33_OML_O33_ORDER_1);
  }
  OML_O33_SPECIMEN_OBSERVATION* getOML_O33_SPECIMEN_OBSERVATION_2(size_t index = 0) {
    return (OML_O33_SPECIMEN_OBSERVATION*)this->getObjectSafe(index, OML_O33_OML_O33_SPECIMEN_OBSERVATION_2);
  }
  SAC* getSAC_3(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OML_O33_SAC_3);
  }
  SPM* getSPM_4(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OML_O33_SPM_4);
  }

  /* Checker list */
  bool isOML_O33_ORDER_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OML_O33_ORDER_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O33_SPECIMEN_OBSERVATION_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OML_O33_SPECIMEN_OBSERVATION_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_SAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_SPM_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_SPECIMEN */

/* PATIENT_VISIT */
struct OML_O33_PATIENT_VISIT : public HL7Group {
  OML_O33_PATIENT_VISIT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_PRT_1,
    OML_O33_PV1_2,
    OML_O33_PV2_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_PATIENT_VISIT"; }
  OML_O33_PATIENT_VISIT* create() const { return new OML_O33_PATIENT_VISIT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.PATIENT_VISIT");
    addObject<PRT>(OML_O33_PRT_1, "PRT.1", HL7::optional, HL7::repetition_on);
    addObject<PV1>(OML_O33_PV1_2, "PV1.2", HL7::optional, HL7::repetition_on);
    addObject<PV2>(OML_O33_PV2_3, "PV2.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PRT* getPRT_1(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_1);
  }
  PV1* getPV1_2(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O33_PV1_2);
  }
  PV2* getPV2_3(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O33_PV2_3);
  }

  /* Checker list */
  bool isPRT_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PV1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PV2_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_PATIENT_VISIT */

/* INSURANCE */
struct OML_O33_INSURANCE : public HL7Group {
  OML_O33_INSURANCE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_IN1_1,
    OML_O33_IN2_2,
    OML_O33_IN3_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_INSURANCE"; }
  OML_O33_INSURANCE* create() const { return new OML_O33_INSURANCE(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.INSURANCE");
    addObject<IN1>(OML_O33_IN1_1, "IN1.1", HL7::optional, HL7::repetition_on);
    addObject<IN2>(OML_O33_IN2_2, "IN2.2", HL7::optional, HL7::repetition_on);
    addObject<IN3>(OML_O33_IN3_3, "IN3.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  IN1* getIN1_1(size_t index = 0) {
    return (IN1*)this->getObjectSafe(index, OML_O33_IN1_1);
  }
  IN2* getIN2_2(size_t index = 0) {
    return (IN2*)this->getObjectSafe(index, OML_O33_IN2_2);
  }
  IN3* getIN3_3(size_t index = 0) {
    return (IN3*)this->getObjectSafe(index, OML_O33_IN3_3);
  }

  /* Checker list */
  bool isIN1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_IN1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN2_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_IN2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN3_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_IN3_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_INSURANCE */

/* SPECIMEN_OBSERVATION */
struct OML_O33_SPECIMEN_OBSERVATION : public HL7Group {
  OML_O33_SPECIMEN_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_OBX_1,
    OML_O33_PRT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_SPECIMEN_OBSERVATION"; }
  OML_O33_SPECIMEN_OBSERVATION* create() const { return new OML_O33_SPECIMEN_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.SPECIMEN_OBSERVATION");
    addObject<OBX>(OML_O33_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O33_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O33_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_2);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_SPECIMEN_OBSERVATION */

/* ORDER */
struct OML_O33_ORDER : public HL7Group {
  OML_O33_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_BLG_1,
    OML_O33_CTI_2,
    OML_O33_FT1_3,
    OML_O33_OML_O33_OBSERVATION_REQUEST_4,
    OML_O33_OML_O33_TIMING_5,
    OML_O33_ORC_6,
    OML_O33_PRT_7,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_ORDER"; }
  OML_O33_ORDER* create() const { return new OML_O33_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.ORDER");
    addObject<BLG>(OML_O33_BLG_1, "BLG.1", HL7::optional, HL7::repetition_on);
    addObject<CTI>(OML_O33_CTI_2, "CTI.2", HL7::optional, HL7::repetition_on);
    addObject<FT1>(OML_O33_FT1_3, "FT1.3", HL7::optional, HL7::repetition_on);
    addObject<OML_O33_OBSERVATION_REQUEST>(OML_O33_OML_O33_OBSERVATION_REQUEST_4, "OML_O33_OBSERVATION_REQUEST.4", HL7::optional, HL7::repetition_on);
    addObject<OML_O33_TIMING>(OML_O33_OML_O33_TIMING_5, "OML_O33_TIMING.5", HL7::optional, HL7::repetition_on);
    addObject<ORC>(OML_O33_ORC_6, "ORC.6", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O33_PRT_7, "PRT.7", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  BLG* getBLG_1(size_t index = 0) {
    return (BLG*)this->getObjectSafe(index, OML_O33_BLG_1);
  }
  CTI* getCTI_2(size_t index = 0) {
    return (CTI*)this->getObjectSafe(index, OML_O33_CTI_2);
  }
  FT1* getFT1_3(size_t index = 0) {
    return (FT1*)this->getObjectSafe(index, OML_O33_FT1_3);
  }
  OML_O33_OBSERVATION_REQUEST* getOML_O33_OBSERVATION_REQUEST_4(size_t index = 0) {
    return (OML_O33_OBSERVATION_REQUEST*)this->getObjectSafe(index, OML_O33_OML_O33_OBSERVATION_REQUEST_4);
  }
  OML_O33_TIMING* getOML_O33_TIMING_5(size_t index = 0) {
    return (OML_O33_TIMING*)this->getObjectSafe(index, OML_O33_OML_O33_TIMING_5);
  }
  ORC* getORC_6(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OML_O33_ORC_6);
  }
  PRT* getPRT_7(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_7);
  }

  /* Checker list */
  bool isBLG_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_BLG_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCTI_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_CTI_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isFT1_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_FT1_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O33_OBSERVATION_REQUEST_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OML_O33_OBSERVATION_REQUEST_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O33_TIMING_5(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OML_O33_TIMING_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_6(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_ORC_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_7(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_7) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_ORDER */

/* TIMING */
struct OML_O33_TIMING : public HL7Group {
  OML_O33_TIMING() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_TQ1_1,
    OML_O33_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_TIMING"; }
  OML_O33_TIMING* create() const { return new OML_O33_TIMING(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.TIMING");
    addObject<TQ1>(OML_O33_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(OML_O33_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O33_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O33_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_TIMING */

/* OBSERVATION_REQUEST */
struct OML_O33_OBSERVATION_REQUEST : public HL7Group {
  OML_O33_OBSERVATION_REQUEST() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_DG1_1,
    OML_O33_NTE_2,
    OML_O33_OBR_3,
    OML_O33_OML_O33_OBSERVATION_4,
    OML_O33_OML_O33_PRIOR_RESULT_5,
    OML_O33_PRT_6,
    OML_O33_TCD_7,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_OBSERVATION_REQUEST"; }
  OML_O33_OBSERVATION_REQUEST* create() const { return new OML_O33_OBSERVATION_REQUEST(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.OBSERVATION_REQUEST");
    addObject<DG1>(OML_O33_DG1_1, "DG1.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(OML_O33_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
    addObject<OBR>(OML_O33_OBR_3, "OBR.3", HL7::optional, HL7::repetition_on);
    addObject<OML_O33_OBSERVATION>(OML_O33_OML_O33_OBSERVATION_4, "OML_O33_OBSERVATION.4", HL7::optional, HL7::repetition_on);
    addObject<OML_O33_PRIOR_RESULT>(OML_O33_OML_O33_PRIOR_RESULT_5, "OML_O33_PRIOR_RESULT.5", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O33_PRT_6, "PRT.6", HL7::optional, HL7::repetition_on);
    addObject<TCD>(OML_O33_TCD_7, "TCD.7", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  DG1* getDG1_1(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, OML_O33_DG1_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O33_NTE_2);
  }
  OBR* getOBR_3(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OML_O33_OBR_3);
  }
  OML_O33_OBSERVATION* getOML_O33_OBSERVATION_4(size_t index = 0) {
    return (OML_O33_OBSERVATION*)this->getObjectSafe(index, OML_O33_OML_O33_OBSERVATION_4);
  }
  OML_O33_PRIOR_RESULT* getOML_O33_PRIOR_RESULT_5(size_t index = 0) {
    return (OML_O33_PRIOR_RESULT*)this->getObjectSafe(index, OML_O33_OML_O33_PRIOR_RESULT_5);
  }
  PRT* getPRT_6(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_6);
  }
  TCD* getTCD_7(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O33_TCD_7);
  }

  /* Checker list */
  bool isDG1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_DG1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OBR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O33_OBSERVATION_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OML_O33_OBSERVATION_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O33_PRIOR_RESULT_5(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OML_O33_PRIOR_RESULT_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_6(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_7(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TCD_7) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_OBSERVATION_REQUEST */

/* OBSERVATION */
struct OML_O33_OBSERVATION : public HL7Group {
  OML_O33_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_NTE_1,
    OML_O33_OBX_2,
    OML_O33_PRT_3,
    OML_O33_TCD_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_OBSERVATION"; }
  OML_O33_OBSERVATION* create() const { return new OML_O33_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.OBSERVATION");
    addObject<NTE>(OML_O33_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(OML_O33_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O33_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
    addObject<TCD>(OML_O33_TCD_4, "TCD.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O33_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O33_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_3);
  }
  TCD* getTCD_4(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O33_TCD_4);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TCD_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_OBSERVATION */

/* PRIOR_RESULT */
struct OML_O33_PRIOR_RESULT : public HL7Group {
  OML_O33_PRIOR_RESULT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_AL1_1,
    OML_O33_OML_O33_ORDER_PRIOR_2,
    OML_O33_OML_O33_PATIENT_PRIOR_3,
    OML_O33_OML_O33_PATIENT_VISIT_PRIOR_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_PRIOR_RESULT"; }
  OML_O33_PRIOR_RESULT* create() const { return new OML_O33_PRIOR_RESULT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.PRIOR_RESULT");
    addObject<AL1>(OML_O33_AL1_1, "AL1.1", HL7::optional, HL7::repetition_on);
    addObject<OML_O33_ORDER_PRIOR>(OML_O33_OML_O33_ORDER_PRIOR_2, "OML_O33_ORDER_PRIOR.2", HL7::optional, HL7::repetition_on);
    addObject<OML_O33_PATIENT_PRIOR>(OML_O33_OML_O33_PATIENT_PRIOR_3, "OML_O33_PATIENT_PRIOR.3", HL7::optional, HL7::repetition_on);
    addObject<OML_O33_PATIENT_VISIT_PRIOR>(OML_O33_OML_O33_PATIENT_VISIT_PRIOR_4, "OML_O33_PATIENT_VISIT_PRIOR.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AL1* getAL1_1(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, OML_O33_AL1_1);
  }
  OML_O33_ORDER_PRIOR* getOML_O33_ORDER_PRIOR_2(size_t index = 0) {
    return (OML_O33_ORDER_PRIOR*)this->getObjectSafe(index, OML_O33_OML_O33_ORDER_PRIOR_2);
  }
  OML_O33_PATIENT_PRIOR* getOML_O33_PATIENT_PRIOR_3(size_t index = 0) {
    return (OML_O33_PATIENT_PRIOR*)this->getObjectSafe(index, OML_O33_OML_O33_PATIENT_PRIOR_3);
  }
  OML_O33_PATIENT_VISIT_PRIOR* getOML_O33_PATIENT_VISIT_PRIOR_4(size_t index = 0) {
    return (OML_O33_PATIENT_VISIT_PRIOR*)this->getObjectSafe(index, OML_O33_OML_O33_PATIENT_VISIT_PRIOR_4);
  }

  /* Checker list */
  bool isAL1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_AL1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O33_ORDER_PRIOR_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OML_O33_ORDER_PRIOR_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O33_PATIENT_PRIOR_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OML_O33_PATIENT_PRIOR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O33_PATIENT_VISIT_PRIOR_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OML_O33_PATIENT_VISIT_PRIOR_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_PRIOR_RESULT */

/* PATIENT_PRIOR */
struct OML_O33_PATIENT_PRIOR : public HL7Group {
  OML_O33_PATIENT_PRIOR() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_ARV_1,
    OML_O33_PD1_2,
    OML_O33_PID_3,
    OML_O33_PRT_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_PATIENT_PRIOR"; }
  OML_O33_PATIENT_PRIOR* create() const { return new OML_O33_PATIENT_PRIOR(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.PATIENT_PRIOR");
    addObject<ARV>(OML_O33_ARV_1, "ARV.1", HL7::optional, HL7::repetition_on);
    addObject<PD1>(OML_O33_PD1_2, "PD1.2", HL7::optional, HL7::repetition_on);
    addObject<PID>(OML_O33_PID_3, "PID.3", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O33_PRT_4, "PRT.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ARV* getARV_1(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O33_ARV_1);
  }
  PD1* getPD1_2(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O33_PD1_2);
  }
  PID* getPID_3(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O33_PID_3);
  }
  PRT* getPRT_4(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_4);
  }

  /* Checker list */
  bool isARV_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_ARV_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PD1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PID_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_PATIENT_PRIOR */

/* PATIENT_VISIT_PRIOR */
struct OML_O33_PATIENT_VISIT_PRIOR : public HL7Group {
  OML_O33_PATIENT_VISIT_PRIOR() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_PRT_1,
    OML_O33_PV1_2,
    OML_O33_PV2_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_PATIENT_VISIT_PRIOR"; }
  OML_O33_PATIENT_VISIT_PRIOR* create() const { return new OML_O33_PATIENT_VISIT_PRIOR(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.PATIENT_VISIT_PRIOR");
    addObject<PRT>(OML_O33_PRT_1, "PRT.1", HL7::optional, HL7::repetition_on);
    addObject<PV1>(OML_O33_PV1_2, "PV1.2", HL7::optional, HL7::repetition_on);
    addObject<PV2>(OML_O33_PV2_3, "PV2.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PRT* getPRT_1(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_1);
  }
  PV1* getPV1_2(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O33_PV1_2);
  }
  PV2* getPV2_3(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O33_PV2_3);
  }

  /* Checker list */
  bool isPRT_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PV1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PV2_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_PATIENT_VISIT_PRIOR */

/* ORDER_PRIOR */
struct OML_O33_ORDER_PRIOR : public HL7Group {
  OML_O33_ORDER_PRIOR() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_NTE_1,
    OML_O33_OBR_2,
    OML_O33_OML_O33_OBSERVATION_PRIOR_3,
    OML_O33_OML_O33_TIMING_PRIOR_4,
    OML_O33_ORC_5,
    OML_O33_PRT_6,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_ORDER_PRIOR"; }
  OML_O33_ORDER_PRIOR* create() const { return new OML_O33_ORDER_PRIOR(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.ORDER_PRIOR");
    addObject<NTE>(OML_O33_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBR>(OML_O33_OBR_2, "OBR.2", HL7::optional, HL7::repetition_on);
    addObject<OML_O33_OBSERVATION_PRIOR>(OML_O33_OML_O33_OBSERVATION_PRIOR_3, "OML_O33_OBSERVATION_PRIOR.3", HL7::optional, HL7::repetition_on);
    addObject<OML_O33_TIMING_PRIOR>(OML_O33_OML_O33_TIMING_PRIOR_4, "OML_O33_TIMING_PRIOR.4", HL7::optional, HL7::repetition_on);
    addObject<ORC>(OML_O33_ORC_5, "ORC.5", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O33_PRT_6, "PRT.6", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O33_NTE_1);
  }
  OBR* getOBR_2(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OML_O33_OBR_2);
  }
  OML_O33_OBSERVATION_PRIOR* getOML_O33_OBSERVATION_PRIOR_3(size_t index = 0) {
    return (OML_O33_OBSERVATION_PRIOR*)this->getObjectSafe(index, OML_O33_OML_O33_OBSERVATION_PRIOR_3);
  }
  OML_O33_TIMING_PRIOR* getOML_O33_TIMING_PRIOR_4(size_t index = 0) {
    return (OML_O33_TIMING_PRIOR*)this->getObjectSafe(index, OML_O33_OML_O33_TIMING_PRIOR_4);
  }
  ORC* getORC_5(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OML_O33_ORC_5);
  }
  PRT* getPRT_6(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_6);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OBR_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O33_OBSERVATION_PRIOR_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OML_O33_OBSERVATION_PRIOR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O33_TIMING_PRIOR_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OML_O33_TIMING_PRIOR_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_5(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_ORC_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_6(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_6) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_ORDER_PRIOR */

/* TIMING_PRIOR */
struct OML_O33_TIMING_PRIOR : public HL7Group {
  OML_O33_TIMING_PRIOR() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_TQ1_1,
    OML_O33_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_TIMING_PRIOR"; }
  OML_O33_TIMING_PRIOR* create() const { return new OML_O33_TIMING_PRIOR(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.TIMING_PRIOR");
    addObject<TQ1>(OML_O33_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(OML_O33_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O33_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O33_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_TIMING_PRIOR */

/* OBSERVATION_PRIOR */
struct OML_O33_OBSERVATION_PRIOR : public HL7Group {
  OML_O33_OBSERVATION_PRIOR() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_NTE_1,
    OML_O33_OBX_2,
    OML_O33_PRT_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33_OBSERVATION_PRIOR"; }
  OML_O33_OBSERVATION_PRIOR* create() const { return new OML_O33_OBSERVATION_PRIOR(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33.OBSERVATION_PRIOR");
    addObject<NTE>(OML_O33_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(OML_O33_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O33_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O33_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O33_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_3);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_OBSERVATION_PRIOR */

/* OML_O33 */
struct OML_O33 : public HL7Message {
  OML_O33() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O33_MSH_1,
    OML_O33_SFT_2,
    OML_O33_UAC_3,
    OML_O33_NTE_4,
    OML_O33_AL1_7,
    OML_O33_PID_8,
    OML_O33_PD1_9,
    OML_O33_PRT_10,
    OML_O33_NTE_11,
    OML_O33_NK1_12,
    OML_O33_ARV_13,
    OML_O33_GT1_16,
    OML_O33_PV1_17,
    OML_O33_PV2_18,
    OML_O33_PRT_19,
    OML_O33_PV1_20,
    OML_O33_PV2_21,
    OML_O33_PRT_22,
    OML_O33_IN1_23,
    OML_O33_IN2_24,
    OML_O33_IN3_25,
    OML_O33_SPM_26,
    OML_O33_SAC_28,
    OML_O33_OBX_30,
    OML_O33_PRT_31,
    OML_O33_OBX_32,
    OML_O33_PRT_33,
    OML_O33_ORC_34,
    OML_O33_PRT_35,
    OML_O33_FT1_38,
    OML_O33_CTI_39,
    OML_O33_BLG_40,
    OML_O33_TQ1_41,
    OML_O33_TQ2_42,
    OML_O33_TQ1_43,
    OML_O33_TQ2_44,
    OML_O33_OBR_45,
    OML_O33_TCD_46,
    OML_O33_NTE_47,
    OML_O33_PRT_48,
    OML_O33_DG1_49,
    OML_O33_OBX_52,
    OML_O33_PRT_53,
    OML_O33_TCD_54,
    OML_O33_NTE_55,
    OML_O33_OBX_56,
    OML_O33_PRT_57,
    OML_O33_TCD_58,
    OML_O33_NTE_59,
    OML_O33_AL1_62,
    OML_O33_PID_64,
    OML_O33_PD1_65,
    OML_O33_PRT_66,
    OML_O33_ARV_67,
    OML_O33_PID_68,
    OML_O33_PD1_69,
    OML_O33_PRT_70,
    OML_O33_ARV_71,
    OML_O33_PV1_72,
    OML_O33_PV2_73,
    OML_O33_PRT_74,
    OML_O33_PID_75,
    OML_O33_PD1_76,
    OML_O33_PRT_77,
    OML_O33_ARV_78,
    OML_O33_PV1_79,
    OML_O33_PV2_80,
    OML_O33_PRT_81,
    OML_O33_ORC_82,
    OML_O33_PRT_83,
    OML_O33_OBR_84,
    OML_O33_NTE_85,
    OML_O33_PRT_86,
    OML_O33_TQ1_89,
    OML_O33_TQ2_90,
    OML_O33_TQ1_91,
    OML_O33_TQ2_92,
    OML_O33_OBX_93,
    OML_O33_PRT_94,
    OML_O33_NTE_95,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O33"; }
  OML_O33* create() const { return new OML_O33(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O33");
    addObject<MSH>(OML_O33_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(OML_O33_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(OML_O33_UAC_3, "UAC.3", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O33_NTE_4, "NTE.4", HL7::optional, HL7::repetition_on);
    addObject<AL1>(OML_O33_AL1_7, "AL1.7", HL7::optional, HL7::repetition_off);
    addObject<PID>(OML_O33_PID_8, "PID.8", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OML_O33_PD1_9, "PD1.9", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_10, "PRT.10", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O33_NTE_11, "NTE.11", HL7::optional, HL7::repetition_off);
    addObject<NK1>(OML_O33_NK1_12, "NK1.12", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OML_O33_ARV_13, "ARV.13", HL7::optional, HL7::repetition_off);
    addObject<GT1>(OML_O33_GT1_16, "GT1.16", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OML_O33_PV1_17, "PV1.17", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OML_O33_PV2_18, "PV2.18", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_19, "PRT.19", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OML_O33_PV1_20, "PV1.20", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OML_O33_PV2_21, "PV2.21", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_22, "PRT.22", HL7::optional, HL7::repetition_off);
    addObject<IN1>(OML_O33_IN1_23, "IN1.23", HL7::initialized, HL7::repetition_off);
    addObject<IN2>(OML_O33_IN2_24, "IN2.24", HL7::optional, HL7::repetition_off);
    addObject<IN3>(OML_O33_IN3_25, "IN3.25", HL7::optional, HL7::repetition_off);
    addObject<SPM>(OML_O33_SPM_26, "SPM.26", HL7::initialized, HL7::repetition_off);
    addObject<SAC>(OML_O33_SAC_28, "SAC.28", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O33_OBX_30, "OBX.30", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_31, "PRT.31", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O33_OBX_32, "OBX.32", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_33, "PRT.33", HL7::optional, HL7::repetition_off);
    addObject<ORC>(OML_O33_ORC_34, "ORC.34", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_35, "PRT.35", HL7::optional, HL7::repetition_off);
    addObject<FT1>(OML_O33_FT1_38, "FT1.38", HL7::optional, HL7::repetition_off);
    addObject<CTI>(OML_O33_CTI_39, "CTI.39", HL7::optional, HL7::repetition_off);
    addObject<BLG>(OML_O33_BLG_40, "BLG.40", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OML_O33_TQ1_41, "TQ1.41", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OML_O33_TQ2_42, "TQ2.42", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OML_O33_TQ1_43, "TQ1.43", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OML_O33_TQ2_44, "TQ2.44", HL7::optional, HL7::repetition_off);
    addObject<OBR>(OML_O33_OBR_45, "OBR.45", HL7::initialized, HL7::repetition_off);
    addObject<TCD>(OML_O33_TCD_46, "TCD.46", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O33_NTE_47, "NTE.47", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_48, "PRT.48", HL7::optional, HL7::repetition_off);
    addObject<DG1>(OML_O33_DG1_49, "DG1.49", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O33_OBX_52, "OBX.52", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_53, "PRT.53", HL7::optional, HL7::repetition_off);
    addObject<TCD>(OML_O33_TCD_54, "TCD.54", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O33_NTE_55, "NTE.55", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O33_OBX_56, "OBX.56", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_57, "PRT.57", HL7::optional, HL7::repetition_off);
    addObject<TCD>(OML_O33_TCD_58, "TCD.58", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O33_NTE_59, "NTE.59", HL7::optional, HL7::repetition_off);
    addObject<AL1>(OML_O33_AL1_62, "AL1.62", HL7::optional, HL7::repetition_off);
    addObject<PID>(OML_O33_PID_64, "PID.64", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OML_O33_PD1_65, "PD1.65", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_66, "PRT.66", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OML_O33_ARV_67, "ARV.67", HL7::optional, HL7::repetition_off);
    addObject<PID>(OML_O33_PID_68, "PID.68", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OML_O33_PD1_69, "PD1.69", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_70, "PRT.70", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OML_O33_ARV_71, "ARV.71", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OML_O33_PV1_72, "PV1.72", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OML_O33_PV2_73, "PV2.73", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_74, "PRT.74", HL7::optional, HL7::repetition_off);
    addObject<PID>(OML_O33_PID_75, "PID.75", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OML_O33_PD1_76, "PD1.76", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_77, "PRT.77", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OML_O33_ARV_78, "ARV.78", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OML_O33_PV1_79, "PV1.79", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OML_O33_PV2_80, "PV2.80", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_81, "PRT.81", HL7::optional, HL7::repetition_off);
    addObject<ORC>(OML_O33_ORC_82, "ORC.82", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_83, "PRT.83", HL7::optional, HL7::repetition_off);
    addObject<OBR>(OML_O33_OBR_84, "OBR.84", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(OML_O33_NTE_85, "NTE.85", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_86, "PRT.86", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OML_O33_TQ1_89, "TQ1.89", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OML_O33_TQ2_90, "TQ2.90", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OML_O33_TQ1_91, "TQ1.91", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OML_O33_TQ2_92, "TQ2.92", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O33_OBX_93, "OBX.93", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O33_PRT_94, "PRT.94", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O33_NTE_95, "NTE.95", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, OML_O33_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, OML_O33_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, OML_O33_UAC_3);
  }
  NTE* getNTE_4(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O33_NTE_4);
  }
  AL1* getAL1_7(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, OML_O33_AL1_7);
  }
  PID* getPID_8(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O33_PID_8);
  }
  PD1* getPD1_9(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O33_PD1_9);
  }
  PRT* getPRT_10(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_10);
  }
  NTE* getNTE_11(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O33_NTE_11);
  }
  NK1* getNK1_12(size_t index = 0) {
    return (NK1*)this->getObjectSafe(index, OML_O33_NK1_12);
  }
  ARV* getARV_13(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O33_ARV_13);
  }
  GT1* getGT1_16(size_t index = 0) {
    return (GT1*)this->getObjectSafe(index, OML_O33_GT1_16);
  }
  PV1* getPV1_17(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O33_PV1_17);
  }
  PV2* getPV2_18(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O33_PV2_18);
  }
  PRT* getPRT_19(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_19);
  }
  PV1* getPV1_20(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O33_PV1_20);
  }
  PV2* getPV2_21(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O33_PV2_21);
  }
  PRT* getPRT_22(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_22);
  }
  IN1* getIN1_23(size_t index = 0) {
    return (IN1*)this->getObjectSafe(index, OML_O33_IN1_23);
  }
  IN2* getIN2_24(size_t index = 0) {
    return (IN2*)this->getObjectSafe(index, OML_O33_IN2_24);
  }
  IN3* getIN3_25(size_t index = 0) {
    return (IN3*)this->getObjectSafe(index, OML_O33_IN3_25);
  }
  SPM* getSPM_26(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OML_O33_SPM_26);
  }
  SAC* getSAC_28(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OML_O33_SAC_28);
  }
  OBX* getOBX_30(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O33_OBX_30);
  }
  PRT* getPRT_31(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_31);
  }
  OBX* getOBX_32(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O33_OBX_32);
  }
  PRT* getPRT_33(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_33);
  }
  ORC* getORC_34(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OML_O33_ORC_34);
  }
  PRT* getPRT_35(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_35);
  }
  FT1* getFT1_38(size_t index = 0) {
    return (FT1*)this->getObjectSafe(index, OML_O33_FT1_38);
  }
  CTI* getCTI_39(size_t index = 0) {
    return (CTI*)this->getObjectSafe(index, OML_O33_CTI_39);
  }
  BLG* getBLG_40(size_t index = 0) {
    return (BLG*)this->getObjectSafe(index, OML_O33_BLG_40);
  }
  TQ1* getTQ1_41(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O33_TQ1_41);
  }
  TQ2* getTQ2_42(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O33_TQ2_42);
  }
  TQ1* getTQ1_43(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O33_TQ1_43);
  }
  TQ2* getTQ2_44(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O33_TQ2_44);
  }
  OBR* getOBR_45(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OML_O33_OBR_45);
  }
  TCD* getTCD_46(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O33_TCD_46);
  }
  NTE* getNTE_47(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O33_NTE_47);
  }
  PRT* getPRT_48(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_48);
  }
  DG1* getDG1_49(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, OML_O33_DG1_49);
  }
  OBX* getOBX_52(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O33_OBX_52);
  }
  PRT* getPRT_53(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_53);
  }
  TCD* getTCD_54(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O33_TCD_54);
  }
  NTE* getNTE_55(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O33_NTE_55);
  }
  OBX* getOBX_56(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O33_OBX_56);
  }
  PRT* getPRT_57(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_57);
  }
  TCD* getTCD_58(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O33_TCD_58);
  }
  NTE* getNTE_59(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O33_NTE_59);
  }
  AL1* getAL1_62(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, OML_O33_AL1_62);
  }
  PID* getPID_64(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O33_PID_64);
  }
  PD1* getPD1_65(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O33_PD1_65);
  }
  PRT* getPRT_66(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_66);
  }
  ARV* getARV_67(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O33_ARV_67);
  }
  PID* getPID_68(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O33_PID_68);
  }
  PD1* getPD1_69(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O33_PD1_69);
  }
  PRT* getPRT_70(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_70);
  }
  ARV* getARV_71(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O33_ARV_71);
  }
  PV1* getPV1_72(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O33_PV1_72);
  }
  PV2* getPV2_73(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O33_PV2_73);
  }
  PRT* getPRT_74(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_74);
  }
  PID* getPID_75(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O33_PID_75);
  }
  PD1* getPD1_76(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O33_PD1_76);
  }
  PRT* getPRT_77(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_77);
  }
  ARV* getARV_78(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O33_ARV_78);
  }
  PV1* getPV1_79(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O33_PV1_79);
  }
  PV2* getPV2_80(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O33_PV2_80);
  }
  PRT* getPRT_81(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_81);
  }
  ORC* getORC_82(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OML_O33_ORC_82);
  }
  PRT* getPRT_83(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_83);
  }
  OBR* getOBR_84(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OML_O33_OBR_84);
  }
  NTE* getNTE_85(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O33_NTE_85);
  }
  PRT* getPRT_86(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_86);
  }
  TQ1* getTQ1_89(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O33_TQ1_89);
  }
  TQ2* getTQ2_90(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O33_TQ2_90);
  }
  TQ1* getTQ1_91(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O33_TQ1_91);
  }
  TQ2* getTQ2_92(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O33_TQ2_92);
  }
  OBX* getOBX_93(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O33_OBX_93);
  }
  PRT* getPRT_94(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O33_PRT_94);
  }
  NTE* getNTE_95(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O33_NTE_95);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NTE_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_7(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_AL1_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_8(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PID_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_9(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PD1_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_10(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_11(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NTE_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNK1_12(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NK1_12) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_13(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_ARV_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isGT1_16(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_GT1_16) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_17(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PV1_17) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_18(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PV2_18) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_19(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_20(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PV1_20) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_21(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PV2_21) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_22(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN1_23(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_IN1_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN2_24(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_IN2_24) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN3_25(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_IN3_25) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_26(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_SPM_26) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_28(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_SAC_28) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_30(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OBX_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_31(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_31) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_32(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OBX_32) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_33(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_33) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_34(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_ORC_34) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_35(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_35) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isFT1_38(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_FT1_38) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCTI_39(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_CTI_39) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isBLG_40(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_BLG_40) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_41(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TQ1_41) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_42(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TQ2_42) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_43(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TQ1_43) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_44(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TQ2_44) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_45(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OBR_45) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_46(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TCD_46) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_47(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NTE_47) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_48(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_48) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDG1_49(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_DG1_49) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_52(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OBX_52) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_53(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_53) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_54(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TCD_54) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_55(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NTE_55) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_56(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OBX_56) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_57(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_57) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_58(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TCD_58) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_59(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NTE_59) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_62(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_AL1_62) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_64(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PID_64) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_65(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PD1_65) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_66(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_66) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_67(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_ARV_67) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_68(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PID_68) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_69(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PD1_69) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_70(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_70) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_71(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_ARV_71) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_72(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PV1_72) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_73(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PV2_73) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_74(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_74) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_75(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PID_75) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_76(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PD1_76) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_77(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_77) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_78(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_ARV_78) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_79(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PV1_79) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_80(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PV2_80) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_81(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_81) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_82(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_ORC_82) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_83(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_83) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_84(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OBR_84) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_85(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NTE_85) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_86(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_86) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_89(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TQ1_89) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_90(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TQ2_90) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_91(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TQ1_91) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_92(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_TQ2_92) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_93(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_OBX_93) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_94(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_PRT_94) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_95(size_t index = 0) {
    try {
      return this->getObject(index, OML_O33_NTE_95) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O33_ */
} /* namespace HL7_281 */
#endif /*  __OML_O33__281_H__ */
