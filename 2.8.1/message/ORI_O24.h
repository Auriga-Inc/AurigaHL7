/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:04:59 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __ORI_O24__281_H__
#define __ORI_O24__281_H__

#include "../../common/Util.h"
#include "../segment/ARV.h"
#include "../segment/ERR.h"
#include "../segment/IPC.h"
#include "../segment/MSA.h"
#include "../segment/MSH.h"
#include "../segment/NTE.h"
#include "../segment/OBR.h"
#include "../segment/ORC.h"
#include "../segment/PID.h"
#include "../segment/PRT.h"
#include "../segment/SFT.h"
#include "../segment/TQ1.h"
#include "../segment/TQ2.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct ORI_O24_RESPONSE; /* RESPONSE */
struct ORI_O24_PATIENT; /* PATIENT */
struct ORI_O24_ORDER; /* ORDER */
struct ORI_O24_TIMING; /* TIMING */

/* RESPONSE */
struct ORI_O24_RESPONSE : public HL7Group {
  ORI_O24_RESPONSE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    ORI_O24_ORI_O24_ORDER_1,
    ORI_O24_ORI_O24_PATIENT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "ORI_O24_RESPONSE"; }
  ORI_O24_RESPONSE* create() const { return new ORI_O24_RESPONSE(); }

 private:
  /* Initialize object */
  void init() {
    setName("ORI_O24.RESPONSE");
    addObject<ORI_O24_ORDER>(ORI_O24_ORI_O24_ORDER_1, "ORI_O24_ORDER.1", HL7::optional, HL7::repetition_on);
    addObject<ORI_O24_PATIENT>(ORI_O24_ORI_O24_PATIENT_2, "ORI_O24_PATIENT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ORI_O24_ORDER* getORI_O24_ORDER_1(size_t index = 0) {
    return (ORI_O24_ORDER*)this->getObjectSafe(index, ORI_O24_ORI_O24_ORDER_1);
  }
  ORI_O24_PATIENT* getORI_O24_PATIENT_2(size_t index = 0) {
    return (ORI_O24_PATIENT*)this->getObjectSafe(index, ORI_O24_ORI_O24_PATIENT_2);
  }

  /* Checker list */
  bool isORI_O24_ORDER_1(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_ORI_O24_ORDER_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORI_O24_PATIENT_2(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_ORI_O24_PATIENT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* ORI_O24_RESPONSE */

/* PATIENT */
struct ORI_O24_PATIENT : public HL7Group {
  ORI_O24_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    ORI_O24_ARV_1,
    ORI_O24_NTE_2,
    ORI_O24_PID_3,
    ORI_O24_PRT_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "ORI_O24_PATIENT"; }
  ORI_O24_PATIENT* create() const { return new ORI_O24_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("ORI_O24.PATIENT");
    addObject<ARV>(ORI_O24_ARV_1, "ARV.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(ORI_O24_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
    addObject<PID>(ORI_O24_PID_3, "PID.3", HL7::optional, HL7::repetition_on);
    addObject<PRT>(ORI_O24_PRT_4, "PRT.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ARV* getARV_1(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, ORI_O24_ARV_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, ORI_O24_NTE_2);
  }
  PID* getPID_3(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, ORI_O24_PID_3);
  }
  PRT* getPRT_4(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, ORI_O24_PRT_4);
  }

  /* Checker list */
  bool isARV_1(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_ARV_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_3(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_PID_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_4(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_PRT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* ORI_O24_PATIENT */

/* ORDER */
struct ORI_O24_ORDER : public HL7Group {
  ORI_O24_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    ORI_O24_IPC_1,
    ORI_O24_NTE_2,
    ORI_O24_OBR_3,
    ORI_O24_ORC_4,
    ORI_O24_ORI_O24_TIMING_5,
    ORI_O24_PRT_6,
    FIELD_ID_MAX
  };

  const char* className() const { return "ORI_O24_ORDER"; }
  ORI_O24_ORDER* create() const { return new ORI_O24_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("ORI_O24.ORDER");
    addObject<IPC>(ORI_O24_IPC_1, "IPC.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(ORI_O24_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
    addObject<OBR>(ORI_O24_OBR_3, "OBR.3", HL7::optional, HL7::repetition_on);
    addObject<ORC>(ORI_O24_ORC_4, "ORC.4", HL7::optional, HL7::repetition_on);
    addObject<ORI_O24_TIMING>(ORI_O24_ORI_O24_TIMING_5, "ORI_O24_TIMING.5", HL7::optional, HL7::repetition_on);
    addObject<PRT>(ORI_O24_PRT_6, "PRT.6", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  IPC* getIPC_1(size_t index = 0) {
    return (IPC*)this->getObjectSafe(index, ORI_O24_IPC_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, ORI_O24_NTE_2);
  }
  OBR* getOBR_3(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, ORI_O24_OBR_3);
  }
  ORC* getORC_4(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, ORI_O24_ORC_4);
  }
  ORI_O24_TIMING* getORI_O24_TIMING_5(size_t index = 0) {
    return (ORI_O24_TIMING*)this->getObjectSafe(index, ORI_O24_ORI_O24_TIMING_5);
  }
  PRT* getPRT_6(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, ORI_O24_PRT_6);
  }

  /* Checker list */
  bool isIPC_1(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_IPC_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_3(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_OBR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_4(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_ORC_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORI_O24_TIMING_5(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_ORI_O24_TIMING_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_6(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_PRT_6) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* ORI_O24_ORDER */

/* TIMING */
struct ORI_O24_TIMING : public HL7Group {
  ORI_O24_TIMING() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    ORI_O24_TQ1_1,
    ORI_O24_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "ORI_O24_TIMING"; }
  ORI_O24_TIMING* create() const { return new ORI_O24_TIMING(); }

 private:
  /* Initialize object */
  void init() {
    setName("ORI_O24.TIMING");
    addObject<TQ1>(ORI_O24_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(ORI_O24_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, ORI_O24_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, ORI_O24_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* ORI_O24_TIMING */

/* ORI_O24 */
struct ORI_O24 : public HL7Message {
  ORI_O24() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    ORI_O24_MSH_1,
    ORI_O24_MSA_2,
    ORI_O24_ERR_3,
    ORI_O24_SFT_4,
    ORI_O24_UAC_5,
    ORI_O24_NTE_6,
    ORI_O24_PID_10,
    ORI_O24_ARV_11,
    ORI_O24_NTE_12,
    ORI_O24_PRT_13,
    ORI_O24_PID_14,
    ORI_O24_ARV_15,
    ORI_O24_NTE_16,
    ORI_O24_PRT_17,
    ORI_O24_ORC_18,
    ORI_O24_PRT_19,
    ORI_O24_OBR_21,
    ORI_O24_NTE_22,
    ORI_O24_PRT_23,
    ORI_O24_IPC_24,
    ORI_O24_TQ1_25,
    ORI_O24_TQ2_26,
    FIELD_ID_MAX
  };

  const char* className() const { return "ORI_O24"; }
  ORI_O24* create() const { return new ORI_O24(); }

 private:
  /* Initialize object */
  void init() {
    setName("ORI_O24");
    addObject<MSH>(ORI_O24_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<MSA>(ORI_O24_MSA_2, "MSA.2", HL7::initialized, HL7::repetition_off);
    addObject<ERR>(ORI_O24_ERR_3, "ERR.3", HL7::optional, HL7::repetition_on);
    addObject<SFT>(ORI_O24_SFT_4, "SFT.4", HL7::optional, HL7::repetition_on);
    addObject<UAC>(ORI_O24_UAC_5, "UAC.5", HL7::optional, HL7::repetition_off);
    addObject<NTE>(ORI_O24_NTE_6, "NTE.6", HL7::optional, HL7::repetition_on);
    addObject<PID>(ORI_O24_PID_10, "PID.10", HL7::initialized, HL7::repetition_off);
    addObject<ARV>(ORI_O24_ARV_11, "ARV.11", HL7::optional, HL7::repetition_off);
    addObject<NTE>(ORI_O24_NTE_12, "NTE.12", HL7::optional, HL7::repetition_off);
    addObject<PRT>(ORI_O24_PRT_13, "PRT.13", HL7::optional, HL7::repetition_off);
    addObject<PID>(ORI_O24_PID_14, "PID.14", HL7::initialized, HL7::repetition_off);
    addObject<ARV>(ORI_O24_ARV_15, "ARV.15", HL7::optional, HL7::repetition_off);
    addObject<NTE>(ORI_O24_NTE_16, "NTE.16", HL7::optional, HL7::repetition_off);
    addObject<PRT>(ORI_O24_PRT_17, "PRT.17", HL7::optional, HL7::repetition_off);
    addObject<ORC>(ORI_O24_ORC_18, "ORC.18", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(ORI_O24_PRT_19, "PRT.19", HL7::optional, HL7::repetition_off);
    addObject<OBR>(ORI_O24_OBR_21, "OBR.21", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(ORI_O24_NTE_22, "NTE.22", HL7::optional, HL7::repetition_off);
    addObject<PRT>(ORI_O24_PRT_23, "PRT.23", HL7::optional, HL7::repetition_off);
    addObject<IPC>(ORI_O24_IPC_24, "IPC.24", HL7::initialized, HL7::repetition_off);
    addObject<TQ1>(ORI_O24_TQ1_25, "TQ1.25", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(ORI_O24_TQ2_26, "TQ2.26", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, ORI_O24_MSH_1);
  }
  MSA* getMSA_2(size_t index = 0) {
    return (MSA*)this->getObjectSafe(index, ORI_O24_MSA_2);
  }
  ERR* getERR_3(size_t index = 0) {
    return (ERR*)this->getObjectSafe(index, ORI_O24_ERR_3);
  }
  SFT* getSFT_4(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, ORI_O24_SFT_4);
  }
  UAC* getUAC_5(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, ORI_O24_UAC_5);
  }
  NTE* getNTE_6(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, ORI_O24_NTE_6);
  }
  PID* getPID_10(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, ORI_O24_PID_10);
  }
  ARV* getARV_11(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, ORI_O24_ARV_11);
  }
  NTE* getNTE_12(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, ORI_O24_NTE_12);
  }
  PRT* getPRT_13(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, ORI_O24_PRT_13);
  }
  PID* getPID_14(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, ORI_O24_PID_14);
  }
  ARV* getARV_15(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, ORI_O24_ARV_15);
  }
  NTE* getNTE_16(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, ORI_O24_NTE_16);
  }
  PRT* getPRT_17(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, ORI_O24_PRT_17);
  }
  ORC* getORC_18(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, ORI_O24_ORC_18);
  }
  PRT* getPRT_19(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, ORI_O24_PRT_19);
  }
  OBR* getOBR_21(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, ORI_O24_OBR_21);
  }
  NTE* getNTE_22(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, ORI_O24_NTE_22);
  }
  PRT* getPRT_23(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, ORI_O24_PRT_23);
  }
  IPC* getIPC_24(size_t index = 0) {
    return (IPC*)this->getObjectSafe(index, ORI_O24_IPC_24);
  }
  TQ1* getTQ1_25(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, ORI_O24_TQ1_25);
  }
  TQ2* getTQ2_26(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, ORI_O24_TQ2_26);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isMSA_2(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_MSA_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isERR_3(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_ERR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_4(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_SFT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_5(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_UAC_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_6(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_NTE_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_10(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_PID_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_11(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_ARV_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_12(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_NTE_12) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_13(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_PRT_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_14(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_PID_14) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_15(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_ARV_15) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_16(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_NTE_16) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_17(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_PRT_17) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_18(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_ORC_18) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_19(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_PRT_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_21(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_OBR_21) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_22(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_NTE_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_23(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_PRT_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIPC_24(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_IPC_24) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_25(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_TQ1_25) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_26(size_t index = 0) {
    try {
      return this->getObject(index, ORI_O24_TQ2_26) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* ORI_O24_ */
} /* namespace HL7_281 */
#endif /*  __ORI_O24__281_H__ */
