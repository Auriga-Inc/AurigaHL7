/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:07:02 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __RSP_Z82__281_H__
#define __RSP_Z82__281_H__

#include "../../common/Util.h"
#include "../segment/AL1.h"
#include "../segment/DSC.h"
#include "../segment/ERR.h"
#include "../segment/MSA.h"
#include "../segment/MSH.h"
#include "../segment/NTE.h"
#include "../segment/OBX.h"
#include "../segment/ORC.h"
#include "../segment/PD1.h"
#include "../segment/PID.h"
#include "../segment/PV1.h"
#include "../segment/PV2.h"
#include "../segment/QAK.h"
#include "../segment/QPD.h"
#include "../segment/RCP.h"
#include "../segment/RXC.h"
#include "../segment/RXD.h"
#include "../segment/RXE.h"
#include "../segment/RXO.h"
#include "../segment/RXR.h"
#include "../segment/SFT.h"
#include "../segment/TQ1.h"
#include "../segment/TQ2.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct RSP_Z82_QUERY_RESPONSE; /* QUERY_RESPONSE */
struct RSP_Z82_PATIENT; /* PATIENT */
struct RSP_Z82_COMMON_ORDER; /* COMMON_ORDER */
struct RSP_Z82_VISIT; /* VISIT */
struct RSP_Z82_VISIT; /* VISIT */
struct RSP_Z82_TIMING; /* TIMING */
struct RSP_Z82_ORDER_DETAIL; /* ORDER_DETAIL */
struct RSP_Z82_ENCODED_ORDER; /* ENCODED_ORDER */
struct RSP_Z82_OBSERVATION; /* OBSERVATION */
struct RSP_Z82_TREATMENT; /* TREATMENT */
struct RSP_Z82_TREATMENT; /* TREATMENT */
struct RSP_Z82_TIMING_ENCODED; /* TIMING_ENCODED */
struct RSP_Z82_TREATMENT; /* TREATMENT */
struct RSP_Z82_TIMING_ENCODED; /* TIMING_ENCODED */

/* QUERY_RESPONSE */
struct RSP_Z82_QUERY_RESPONSE : public HL7Group {
  RSP_Z82_QUERY_RESPONSE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z82_RSP_Z82_COMMON_ORDER_1,
    RSP_Z82_RSP_Z82_PATIENT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z82_QUERY_RESPONSE"; }
  RSP_Z82_QUERY_RESPONSE* create() const { return new RSP_Z82_QUERY_RESPONSE(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z82.QUERY_RESPONSE");
    addObject<RSP_Z82_COMMON_ORDER>(RSP_Z82_RSP_Z82_COMMON_ORDER_1, "RSP_Z82_COMMON_ORDER.1", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z82_PATIENT>(RSP_Z82_RSP_Z82_PATIENT_2, "RSP_Z82_PATIENT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  RSP_Z82_COMMON_ORDER* getRSP_Z82_COMMON_ORDER_1(size_t index = 0) {
    return (RSP_Z82_COMMON_ORDER*)this->getObjectSafe(index, RSP_Z82_RSP_Z82_COMMON_ORDER_1);
  }
  RSP_Z82_PATIENT* getRSP_Z82_PATIENT_2(size_t index = 0) {
    return (RSP_Z82_PATIENT*)this->getObjectSafe(index, RSP_Z82_RSP_Z82_PATIENT_2);
  }

  /* Checker list */
  bool isRSP_Z82_COMMON_ORDER_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RSP_Z82_COMMON_ORDER_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z82_PATIENT_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RSP_Z82_PATIENT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z82_QUERY_RESPONSE */

/* PATIENT */
struct RSP_Z82_PATIENT : public HL7Group {
  RSP_Z82_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z82_NTE_1,
    RSP_Z82_PD1_2,
    RSP_Z82_PID_3,
    RSP_Z82_RSP_Z82_VISIT_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z82_PATIENT"; }
  RSP_Z82_PATIENT* create() const { return new RSP_Z82_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z82.PATIENT");
    addObject<NTE>(RSP_Z82_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<PD1>(RSP_Z82_PD1_2, "PD1.2", HL7::optional, HL7::repetition_on);
    addObject<PID>(RSP_Z82_PID_3, "PID.3", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z82_VISIT>(RSP_Z82_RSP_Z82_VISIT_4, "RSP_Z82_VISIT.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_1);
  }
  PD1* getPD1_2(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, RSP_Z82_PD1_2);
  }
  PID* getPID_3(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, RSP_Z82_PID_3);
  }
  RSP_Z82_VISIT* getRSP_Z82_VISIT_4(size_t index = 0) {
    return (RSP_Z82_VISIT*)this->getObjectSafe(index, RSP_Z82_RSP_Z82_VISIT_4);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PD1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_3(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PID_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z82_VISIT_4(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RSP_Z82_VISIT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z82_PATIENT */

/* COMMON_ORDER */
struct RSP_Z82_COMMON_ORDER : public HL7Group {
  RSP_Z82_COMMON_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z82_ORC_1,
    RSP_Z82_RSP_Z82_ENCODED_ORDER_2,
    RSP_Z82_RSP_Z82_OBSERVATION_3,
    RSP_Z82_RSP_Z82_ORDER_DETAIL_4,
    RSP_Z82_RSP_Z82_TIMING_5,
    RSP_Z82_RXC_6,
    RSP_Z82_RXD_7,
    RSP_Z82_RXR_8,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z82_COMMON_ORDER"; }
  RSP_Z82_COMMON_ORDER* create() const { return new RSP_Z82_COMMON_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z82.COMMON_ORDER");
    addObject<ORC>(RSP_Z82_ORC_1, "ORC.1", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z82_ENCODED_ORDER>(RSP_Z82_RSP_Z82_ENCODED_ORDER_2, "RSP_Z82_ENCODED_ORDER.2", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z82_OBSERVATION>(RSP_Z82_RSP_Z82_OBSERVATION_3, "RSP_Z82_OBSERVATION.3", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z82_ORDER_DETAIL>(RSP_Z82_RSP_Z82_ORDER_DETAIL_4, "RSP_Z82_ORDER_DETAIL.4", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z82_TIMING>(RSP_Z82_RSP_Z82_TIMING_5, "RSP_Z82_TIMING.5", HL7::optional, HL7::repetition_on);
    addObject<RXC>(RSP_Z82_RXC_6, "RXC.6", HL7::optional, HL7::repetition_on);
    addObject<RXD>(RSP_Z82_RXD_7, "RXD.7", HL7::optional, HL7::repetition_on);
    addObject<RXR>(RSP_Z82_RXR_8, "RXR.8", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ORC* getORC_1(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, RSP_Z82_ORC_1);
  }
  RSP_Z82_ENCODED_ORDER* getRSP_Z82_ENCODED_ORDER_2(size_t index = 0) {
    return (RSP_Z82_ENCODED_ORDER*)this->getObjectSafe(index, RSP_Z82_RSP_Z82_ENCODED_ORDER_2);
  }
  RSP_Z82_OBSERVATION* getRSP_Z82_OBSERVATION_3(size_t index = 0) {
    return (RSP_Z82_OBSERVATION*)this->getObjectSafe(index, RSP_Z82_RSP_Z82_OBSERVATION_3);
  }
  RSP_Z82_ORDER_DETAIL* getRSP_Z82_ORDER_DETAIL_4(size_t index = 0) {
    return (RSP_Z82_ORDER_DETAIL*)this->getObjectSafe(index, RSP_Z82_RSP_Z82_ORDER_DETAIL_4);
  }
  RSP_Z82_TIMING* getRSP_Z82_TIMING_5(size_t index = 0) {
    return (RSP_Z82_TIMING*)this->getObjectSafe(index, RSP_Z82_RSP_Z82_TIMING_5);
  }
  RXC* getRXC_6(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z82_RXC_6);
  }
  RXD* getRXD_7(size_t index = 0) {
    return (RXD*)this->getObjectSafe(index, RSP_Z82_RXD_7);
  }
  RXR* getRXR_8(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z82_RXR_8);
  }

  /* Checker list */
  bool isORC_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_ORC_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z82_ENCODED_ORDER_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RSP_Z82_ENCODED_ORDER_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z82_OBSERVATION_3(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RSP_Z82_OBSERVATION_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z82_ORDER_DETAIL_4(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RSP_Z82_ORDER_DETAIL_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z82_TIMING_5(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RSP_Z82_TIMING_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_6(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXC_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXD_7(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXD_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_8(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXR_8) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z82_COMMON_ORDER */

/* VISIT */
struct RSP_Z82_VISIT : public HL7Group {
  RSP_Z82_VISIT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z82_AL1_1,
    RSP_Z82_PV1_2,
    RSP_Z82_PV2_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z82_VISIT"; }
  RSP_Z82_VISIT* create() const { return new RSP_Z82_VISIT(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z82.VISIT");
    addObject<AL1>(RSP_Z82_AL1_1, "AL1.1", HL7::optional, HL7::repetition_on);
    addObject<PV1>(RSP_Z82_PV1_2, "PV1.2", HL7::optional, HL7::repetition_on);
    addObject<PV2>(RSP_Z82_PV2_3, "PV2.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AL1* getAL1_1(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z82_AL1_1);
  }
  PV1* getPV1_2(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z82_PV1_2);
  }
  PV2* getPV2_3(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z82_PV2_3);
  }

  /* Checker list */
  bool isAL1_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_AL1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_3(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV2_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z82_VISIT */

/* TIMING */
struct RSP_Z82_TIMING : public HL7Group {
  RSP_Z82_TIMING() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z82_TQ1_1,
    RSP_Z82_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z82_TIMING"; }
  RSP_Z82_TIMING* create() const { return new RSP_Z82_TIMING(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z82.TIMING");
    addObject<TQ1>(RSP_Z82_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(RSP_Z82_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z82_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z82_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z82_TIMING */

/* ORDER_DETAIL */
struct RSP_Z82_ORDER_DETAIL : public HL7Group {
  RSP_Z82_ORDER_DETAIL() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z82_NTE_1,
    RSP_Z82_RSP_Z82_TREATMENT_2,
    RSP_Z82_RXO_3,
    RSP_Z82_RXR_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z82_ORDER_DETAIL"; }
  RSP_Z82_ORDER_DETAIL* create() const { return new RSP_Z82_ORDER_DETAIL(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z82.ORDER_DETAIL");
    addObject<NTE>(RSP_Z82_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z82_TREATMENT>(RSP_Z82_RSP_Z82_TREATMENT_2, "RSP_Z82_TREATMENT.2", HL7::optional, HL7::repetition_on);
    addObject<RXO>(RSP_Z82_RXO_3, "RXO.3", HL7::optional, HL7::repetition_on);
    addObject<RXR>(RSP_Z82_RXR_4, "RXR.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_1);
  }
  RSP_Z82_TREATMENT* getRSP_Z82_TREATMENT_2(size_t index = 0) {
    return (RSP_Z82_TREATMENT*)this->getObjectSafe(index, RSP_Z82_RSP_Z82_TREATMENT_2);
  }
  RXO* getRXO_3(size_t index = 0) {
    return (RXO*)this->getObjectSafe(index, RSP_Z82_RXO_3);
  }
  RXR* getRXR_4(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z82_RXR_4);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z82_TREATMENT_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RSP_Z82_TREATMENT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXO_3(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXO_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_4(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXR_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z82_ORDER_DETAIL */

/* ENCODED_ORDER */
struct RSP_Z82_ENCODED_ORDER : public HL7Group {
  RSP_Z82_ENCODED_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z82_RSP_Z82_TIMING_ENCODED_1,
    RSP_Z82_RXC_2,
    RSP_Z82_RXE_3,
    RSP_Z82_RXR_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z82_ENCODED_ORDER"; }
  RSP_Z82_ENCODED_ORDER* create() const { return new RSP_Z82_ENCODED_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z82.ENCODED_ORDER");
    addObject<RSP_Z82_TIMING_ENCODED>(RSP_Z82_RSP_Z82_TIMING_ENCODED_1, "RSP_Z82_TIMING_ENCODED.1", HL7::optional, HL7::repetition_on);
    addObject<RXC>(RSP_Z82_RXC_2, "RXC.2", HL7::optional, HL7::repetition_on);
    addObject<RXE>(RSP_Z82_RXE_3, "RXE.3", HL7::optional, HL7::repetition_on);
    addObject<RXR>(RSP_Z82_RXR_4, "RXR.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  RSP_Z82_TIMING_ENCODED* getRSP_Z82_TIMING_ENCODED_1(size_t index = 0) {
    return (RSP_Z82_TIMING_ENCODED*)this->getObjectSafe(index, RSP_Z82_RSP_Z82_TIMING_ENCODED_1);
  }
  RXC* getRXC_2(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z82_RXC_2);
  }
  RXE* getRXE_3(size_t index = 0) {
    return (RXE*)this->getObjectSafe(index, RSP_Z82_RXE_3);
  }
  RXR* getRXR_4(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z82_RXR_4);
  }

  /* Checker list */
  bool isRSP_Z82_TIMING_ENCODED_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RSP_Z82_TIMING_ENCODED_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXC_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXE_3(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXE_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_4(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXR_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z82_ENCODED_ORDER */

/* OBSERVATION */
struct RSP_Z82_OBSERVATION : public HL7Group {
  RSP_Z82_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z82_NTE_1,
    RSP_Z82_OBX_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z82_OBSERVATION"; }
  RSP_Z82_OBSERVATION* create() const { return new RSP_Z82_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z82.OBSERVATION");
    addObject<NTE>(RSP_Z82_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(RSP_Z82_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, RSP_Z82_OBX_2);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z82_OBSERVATION */

/* TREATMENT */
struct RSP_Z82_TREATMENT : public HL7Group {
  RSP_Z82_TREATMENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z82_NTE_1,
    RSP_Z82_RXC_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z82_TREATMENT"; }
  RSP_Z82_TREATMENT* create() const { return new RSP_Z82_TREATMENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z82.TREATMENT");
    addObject<NTE>(RSP_Z82_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<RXC>(RSP_Z82_RXC_2, "RXC.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_1);
  }
  RXC* getRXC_2(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z82_RXC_2);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXC_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z82_TREATMENT */

/* TIMING_ENCODED */
struct RSP_Z82_TIMING_ENCODED : public HL7Group {
  RSP_Z82_TIMING_ENCODED() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z82_TQ1_1,
    RSP_Z82_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z82_TIMING_ENCODED"; }
  RSP_Z82_TIMING_ENCODED* create() const { return new RSP_Z82_TIMING_ENCODED(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z82.TIMING_ENCODED");
    addObject<TQ1>(RSP_Z82_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(RSP_Z82_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z82_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z82_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z82_TIMING_ENCODED */

/* RSP_Z82 */
struct RSP_Z82 : public HL7Message {
  RSP_Z82() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z82_MSH_1,
    RSP_Z82_SFT_2,
    RSP_Z82_UAC_3,
    RSP_Z82_MSA_4,
    RSP_Z82_ERR_5,
    RSP_Z82_QAK_6,
    RSP_Z82_QPD_7,
    RSP_Z82_RCP_8,
    RSP_Z82_DSC_10,
    RSP_Z82_PID_13,
    RSP_Z82_PD1_14,
    RSP_Z82_NTE_15,
    RSP_Z82_AL1_17,
    RSP_Z82_PV1_18,
    RSP_Z82_PV2_19,
    RSP_Z82_PID_20,
    RSP_Z82_PD1_21,
    RSP_Z82_NTE_22,
    RSP_Z82_ORC_24,
    RSP_Z82_RXD_28,
    RSP_Z82_RXR_29,
    RSP_Z82_RXC_30,
    RSP_Z82_AL1_32,
    RSP_Z82_PV1_33,
    RSP_Z82_PV2_34,
    RSP_Z82_AL1_35,
    RSP_Z82_PV1_36,
    RSP_Z82_PV2_37,
    RSP_Z82_TQ1_38,
    RSP_Z82_TQ2_39,
    RSP_Z82_AL1_40,
    RSP_Z82_PV1_41,
    RSP_Z82_PV2_42,
    RSP_Z82_TQ1_43,
    RSP_Z82_TQ2_44,
    RSP_Z82_RXO_45,
    RSP_Z82_NTE_46,
    RSP_Z82_RXR_47,
    RSP_Z82_RXC_49,
    RSP_Z82_NTE_50,
    RSP_Z82_AL1_51,
    RSP_Z82_PV1_52,
    RSP_Z82_PV2_53,
    RSP_Z82_TQ1_54,
    RSP_Z82_TQ2_55,
    RSP_Z82_RXO_56,
    RSP_Z82_NTE_57,
    RSP_Z82_RXR_58,
    RSP_Z82_RXE_60,
    RSP_Z82_RXR_62,
    RSP_Z82_RXC_63,
    RSP_Z82_RXC_64,
    RSP_Z82_NTE_65,
    RSP_Z82_RXC_66,
    RSP_Z82_NTE_67,
    RSP_Z82_TQ1_68,
    RSP_Z82_TQ2_69,
    RSP_Z82_AL1_70,
    RSP_Z82_PV1_71,
    RSP_Z82_PV2_72,
    RSP_Z82_TQ1_73,
    RSP_Z82_TQ2_74,
    RSP_Z82_RXO_75,
    RSP_Z82_NTE_76,
    RSP_Z82_RXR_77,
    RSP_Z82_RXE_79,
    RSP_Z82_RXR_81,
    RSP_Z82_RXC_82,
    RSP_Z82_OBX_83,
    RSP_Z82_NTE_84,
    RSP_Z82_RXC_85,
    RSP_Z82_NTE_86,
    RSP_Z82_RXC_87,
    RSP_Z82_NTE_88,
    RSP_Z82_TQ1_89,
    RSP_Z82_TQ2_90,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z82"; }
  RSP_Z82* create() const { return new RSP_Z82(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z82");
    addObject<MSH>(RSP_Z82_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(RSP_Z82_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(RSP_Z82_UAC_3, "UAC.3", HL7::optional, HL7::repetition_off);
    addObject<MSA>(RSP_Z82_MSA_4, "MSA.4", HL7::initialized, HL7::repetition_off);
    addObject<ERR>(RSP_Z82_ERR_5, "ERR.5", HL7::optional, HL7::repetition_off);
    addObject<QAK>(RSP_Z82_QAK_6, "QAK.6", HL7::initialized, HL7::repetition_off);
    addObject<QPD>(RSP_Z82_QPD_7, "QPD.7", HL7::initialized, HL7::repetition_off);
    addObject<RCP>(RSP_Z82_RCP_8, "RCP.8", HL7::initialized, HL7::repetition_off);
    addObject<DSC>(RSP_Z82_DSC_10, "DSC.10", HL7::optional, HL7::repetition_off);
    addObject<PID>(RSP_Z82_PID_13, "PID.13", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(RSP_Z82_PD1_14, "PD1.14", HL7::optional, HL7::repetition_off);
    addObject<NTE>(RSP_Z82_NTE_15, "NTE.15", HL7::optional, HL7::repetition_off);
    addObject<AL1>(RSP_Z82_AL1_17, "AL1.17", HL7::initialized, HL7::repetition_off);
    addObject<PV1>(RSP_Z82_PV1_18, "PV1.18", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z82_PV2_19, "PV2.19", HL7::optional, HL7::repetition_off);
    addObject<PID>(RSP_Z82_PID_20, "PID.20", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(RSP_Z82_PD1_21, "PD1.21", HL7::optional, HL7::repetition_off);
    addObject<NTE>(RSP_Z82_NTE_22, "NTE.22", HL7::optional, HL7::repetition_off);
    addObject<ORC>(RSP_Z82_ORC_24, "ORC.24", HL7::initialized, HL7::repetition_off);
    addObject<RXD>(RSP_Z82_RXD_28, "RXD.28", HL7::initialized, HL7::repetition_off);
    addObject<RXR>(RSP_Z82_RXR_29, "RXR.29", HL7::initialized, HL7::repetition_off);
    addObject<RXC>(RSP_Z82_RXC_30, "RXC.30", HL7::optional, HL7::repetition_off);
    addObject<AL1>(RSP_Z82_AL1_32, "AL1.32", HL7::initialized, HL7::repetition_off);
    addObject<PV1>(RSP_Z82_PV1_33, "PV1.33", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z82_PV2_34, "PV2.34", HL7::optional, HL7::repetition_off);
    addObject<AL1>(RSP_Z82_AL1_35, "AL1.35", HL7::initialized, HL7::repetition_off);
    addObject<PV1>(RSP_Z82_PV1_36, "PV1.36", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z82_PV2_37, "PV2.37", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(RSP_Z82_TQ1_38, "TQ1.38", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(RSP_Z82_TQ2_39, "TQ2.39", HL7::optional, HL7::repetition_off);
    addObject<AL1>(RSP_Z82_AL1_40, "AL1.40", HL7::initialized, HL7::repetition_off);
    addObject<PV1>(RSP_Z82_PV1_41, "PV1.41", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z82_PV2_42, "PV2.42", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(RSP_Z82_TQ1_43, "TQ1.43", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(RSP_Z82_TQ2_44, "TQ2.44", HL7::optional, HL7::repetition_off);
    addObject<RXO>(RSP_Z82_RXO_45, "RXO.45", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z82_NTE_46, "NTE.46", HL7::optional, HL7::repetition_off);
    addObject<RXR>(RSP_Z82_RXR_47, "RXR.47", HL7::initialized, HL7::repetition_off);
    addObject<RXC>(RSP_Z82_RXC_49, "RXC.49", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z82_NTE_50, "NTE.50", HL7::optional, HL7::repetition_off);
    addObject<AL1>(RSP_Z82_AL1_51, "AL1.51", HL7::initialized, HL7::repetition_off);
    addObject<PV1>(RSP_Z82_PV1_52, "PV1.52", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z82_PV2_53, "PV2.53", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(RSP_Z82_TQ1_54, "TQ1.54", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(RSP_Z82_TQ2_55, "TQ2.55", HL7::optional, HL7::repetition_off);
    addObject<RXO>(RSP_Z82_RXO_56, "RXO.56", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z82_NTE_57, "NTE.57", HL7::optional, HL7::repetition_off);
    addObject<RXR>(RSP_Z82_RXR_58, "RXR.58", HL7::initialized, HL7::repetition_off);
    addObject<RXE>(RSP_Z82_RXE_60, "RXE.60", HL7::initialized, HL7::repetition_off);
    addObject<RXR>(RSP_Z82_RXR_62, "RXR.62", HL7::initialized, HL7::repetition_off);
    addObject<RXC>(RSP_Z82_RXC_63, "RXC.63", HL7::optional, HL7::repetition_off);
    addObject<RXC>(RSP_Z82_RXC_64, "RXC.64", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z82_NTE_65, "NTE.65", HL7::optional, HL7::repetition_off);
    addObject<RXC>(RSP_Z82_RXC_66, "RXC.66", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z82_NTE_67, "NTE.67", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(RSP_Z82_TQ1_68, "TQ1.68", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(RSP_Z82_TQ2_69, "TQ2.69", HL7::optional, HL7::repetition_off);
    addObject<AL1>(RSP_Z82_AL1_70, "AL1.70", HL7::initialized, HL7::repetition_off);
    addObject<PV1>(RSP_Z82_PV1_71, "PV1.71", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z82_PV2_72, "PV2.72", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(RSP_Z82_TQ1_73, "TQ1.73", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(RSP_Z82_TQ2_74, "TQ2.74", HL7::optional, HL7::repetition_off);
    addObject<RXO>(RSP_Z82_RXO_75, "RXO.75", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z82_NTE_76, "NTE.76", HL7::optional, HL7::repetition_off);
    addObject<RXR>(RSP_Z82_RXR_77, "RXR.77", HL7::initialized, HL7::repetition_off);
    addObject<RXE>(RSP_Z82_RXE_79, "RXE.79", HL7::initialized, HL7::repetition_off);
    addObject<RXR>(RSP_Z82_RXR_81, "RXR.81", HL7::initialized, HL7::repetition_off);
    addObject<RXC>(RSP_Z82_RXC_82, "RXC.82", HL7::optional, HL7::repetition_off);
    addObject<OBX>(RSP_Z82_OBX_83, "OBX.83", HL7::optional, HL7::repetition_off);
    addObject<NTE>(RSP_Z82_NTE_84, "NTE.84", HL7::optional, HL7::repetition_off);
    addObject<RXC>(RSP_Z82_RXC_85, "RXC.85", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z82_NTE_86, "NTE.86", HL7::optional, HL7::repetition_off);
    addObject<RXC>(RSP_Z82_RXC_87, "RXC.87", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z82_NTE_88, "NTE.88", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(RSP_Z82_TQ1_89, "TQ1.89", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(RSP_Z82_TQ2_90, "TQ2.90", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, RSP_Z82_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, RSP_Z82_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, RSP_Z82_UAC_3);
  }
  MSA* getMSA_4(size_t index = 0) {
    return (MSA*)this->getObjectSafe(index, RSP_Z82_MSA_4);
  }
  ERR* getERR_5(size_t index = 0) {
    return (ERR*)this->getObjectSafe(index, RSP_Z82_ERR_5);
  }
  QAK* getQAK_6(size_t index = 0) {
    return (QAK*)this->getObjectSafe(index, RSP_Z82_QAK_6);
  }
  QPD* getQPD_7(size_t index = 0) {
    return (QPD*)this->getObjectSafe(index, RSP_Z82_QPD_7);
  }
  RCP* getRCP_8(size_t index = 0) {
    return (RCP*)this->getObjectSafe(index, RSP_Z82_RCP_8);
  }
  DSC* getDSC_10(size_t index = 0) {
    return (DSC*)this->getObjectSafe(index, RSP_Z82_DSC_10);
  }
  PID* getPID_13(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, RSP_Z82_PID_13);
  }
  PD1* getPD1_14(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, RSP_Z82_PD1_14);
  }
  NTE* getNTE_15(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_15);
  }
  AL1* getAL1_17(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z82_AL1_17);
  }
  PV1* getPV1_18(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z82_PV1_18);
  }
  PV2* getPV2_19(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z82_PV2_19);
  }
  PID* getPID_20(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, RSP_Z82_PID_20);
  }
  PD1* getPD1_21(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, RSP_Z82_PD1_21);
  }
  NTE* getNTE_22(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_22);
  }
  ORC* getORC_24(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, RSP_Z82_ORC_24);
  }
  RXD* getRXD_28(size_t index = 0) {
    return (RXD*)this->getObjectSafe(index, RSP_Z82_RXD_28);
  }
  RXR* getRXR_29(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z82_RXR_29);
  }
  RXC* getRXC_30(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z82_RXC_30);
  }
  AL1* getAL1_32(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z82_AL1_32);
  }
  PV1* getPV1_33(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z82_PV1_33);
  }
  PV2* getPV2_34(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z82_PV2_34);
  }
  AL1* getAL1_35(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z82_AL1_35);
  }
  PV1* getPV1_36(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z82_PV1_36);
  }
  PV2* getPV2_37(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z82_PV2_37);
  }
  TQ1* getTQ1_38(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z82_TQ1_38);
  }
  TQ2* getTQ2_39(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z82_TQ2_39);
  }
  AL1* getAL1_40(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z82_AL1_40);
  }
  PV1* getPV1_41(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z82_PV1_41);
  }
  PV2* getPV2_42(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z82_PV2_42);
  }
  TQ1* getTQ1_43(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z82_TQ1_43);
  }
  TQ2* getTQ2_44(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z82_TQ2_44);
  }
  RXO* getRXO_45(size_t index = 0) {
    return (RXO*)this->getObjectSafe(index, RSP_Z82_RXO_45);
  }
  NTE* getNTE_46(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_46);
  }
  RXR* getRXR_47(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z82_RXR_47);
  }
  RXC* getRXC_49(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z82_RXC_49);
  }
  NTE* getNTE_50(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_50);
  }
  AL1* getAL1_51(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z82_AL1_51);
  }
  PV1* getPV1_52(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z82_PV1_52);
  }
  PV2* getPV2_53(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z82_PV2_53);
  }
  TQ1* getTQ1_54(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z82_TQ1_54);
  }
  TQ2* getTQ2_55(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z82_TQ2_55);
  }
  RXO* getRXO_56(size_t index = 0) {
    return (RXO*)this->getObjectSafe(index, RSP_Z82_RXO_56);
  }
  NTE* getNTE_57(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_57);
  }
  RXR* getRXR_58(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z82_RXR_58);
  }
  RXE* getRXE_60(size_t index = 0) {
    return (RXE*)this->getObjectSafe(index, RSP_Z82_RXE_60);
  }
  RXR* getRXR_62(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z82_RXR_62);
  }
  RXC* getRXC_63(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z82_RXC_63);
  }
  RXC* getRXC_64(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z82_RXC_64);
  }
  NTE* getNTE_65(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_65);
  }
  RXC* getRXC_66(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z82_RXC_66);
  }
  NTE* getNTE_67(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_67);
  }
  TQ1* getTQ1_68(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z82_TQ1_68);
  }
  TQ2* getTQ2_69(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z82_TQ2_69);
  }
  AL1* getAL1_70(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z82_AL1_70);
  }
  PV1* getPV1_71(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z82_PV1_71);
  }
  PV2* getPV2_72(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z82_PV2_72);
  }
  TQ1* getTQ1_73(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z82_TQ1_73);
  }
  TQ2* getTQ2_74(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z82_TQ2_74);
  }
  RXO* getRXO_75(size_t index = 0) {
    return (RXO*)this->getObjectSafe(index, RSP_Z82_RXO_75);
  }
  NTE* getNTE_76(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_76);
  }
  RXR* getRXR_77(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z82_RXR_77);
  }
  RXE* getRXE_79(size_t index = 0) {
    return (RXE*)this->getObjectSafe(index, RSP_Z82_RXE_79);
  }
  RXR* getRXR_81(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z82_RXR_81);
  }
  RXC* getRXC_82(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z82_RXC_82);
  }
  OBX* getOBX_83(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, RSP_Z82_OBX_83);
  }
  NTE* getNTE_84(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_84);
  }
  RXC* getRXC_85(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z82_RXC_85);
  }
  NTE* getNTE_86(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_86);
  }
  RXC* getRXC_87(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z82_RXC_87);
  }
  NTE* getNTE_88(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z82_NTE_88);
  }
  TQ1* getTQ1_89(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z82_TQ1_89);
  }
  TQ2* getTQ2_90(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z82_TQ2_90);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isMSA_4(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_MSA_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isERR_5(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_ERR_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isQAK_6(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_QAK_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isQPD_7(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_QPD_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRCP_8(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RCP_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDSC_10(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_DSC_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_13(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PID_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_14(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PD1_14) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_15(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_15) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_17(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_AL1_17) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_18(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV1_18) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_19(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV2_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_20(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PID_20) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_21(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PD1_21) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_22(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_24(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_ORC_24) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXD_28(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXD_28) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_29(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXR_29) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_30(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXC_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_32(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_AL1_32) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_33(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV1_33) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_34(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV2_34) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_35(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_AL1_35) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_36(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV1_36) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_37(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV2_37) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_38(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ1_38) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_39(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ2_39) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_40(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_AL1_40) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_41(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV1_41) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_42(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV2_42) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_43(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ1_43) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_44(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ2_44) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXO_45(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXO_45) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_46(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_46) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_47(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXR_47) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_49(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXC_49) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_50(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_50) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_51(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_AL1_51) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_52(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV1_52) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_53(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV2_53) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_54(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ1_54) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_55(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ2_55) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXO_56(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXO_56) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_57(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_57) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_58(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXR_58) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXE_60(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXE_60) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_62(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXR_62) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_63(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXC_63) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_64(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXC_64) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_65(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_65) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_66(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXC_66) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_67(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_67) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_68(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ1_68) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_69(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ2_69) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_70(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_AL1_70) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_71(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV1_71) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_72(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_PV2_72) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_73(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ1_73) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_74(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ2_74) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXO_75(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXO_75) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_76(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_76) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_77(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXR_77) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXE_79(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXE_79) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_81(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXR_81) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_82(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXC_82) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_83(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_OBX_83) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_84(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_84) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_85(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXC_85) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_86(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_86) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_87(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_RXC_87) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_88(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_NTE_88) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_89(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ1_89) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_90(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z82_TQ2_90) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z82_ */
} /* namespace HL7_281 */
#endif /*  __RSP_Z82__281_H__ */
