/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:04:16 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __OML_O39__281_H__
#define __OML_O39__281_H__

#include "../../common/Util.h"
#include "../segment/AL1.h"
#include "../segment/ARV.h"
#include "../segment/BLG.h"
#include "../segment/CTD.h"
#include "../segment/CTI.h"
#include "../segment/DG1.h"
#include "../segment/FT1.h"
#include "../segment/GT1.h"
#include "../segment/IN1.h"
#include "../segment/IN2.h"
#include "../segment/IN3.h"
#include "../segment/MSH.h"
#include "../segment/NK1.h"
#include "../segment/NTE.h"
#include "../segment/OBR.h"
#include "../segment/OBX.h"
#include "../segment/ORC.h"
#include "../segment/PAC.h"
#include "../segment/PD1.h"
#include "../segment/PID.h"
#include "../segment/PRT.h"
#include "../segment/PV1.h"
#include "../segment/PV2.h"
#include "../segment/SAC.h"
#include "../segment/SFT.h"
#include "../segment/SHP.h"
#include "../segment/SPM.h"
#include "../segment/TCD.h"
#include "../segment/TQ1.h"
#include "../segment/TQ2.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct OML_O39_PATIENT; /* PATIENT */
struct OML_O39_ORDER; /* ORDER */
struct OML_O39_TIMING; /* TIMING */
struct OML_O39_OBSERVATION_REQUEST; /* OBSERVATION_REQUEST */
struct OML_O39_OBSERVATION; /* OBSERVATION */
struct OML_O39_SPECIMEN_SHIPMENT; /* SPECIMEN_SHIPMENT */
struct OML_O39_SHIPMENT_OBSERVATION; /* SHIPMENT_OBSERVATION */
struct OML_O39_PACKAGE; /* PACKAGE */
struct OML_O39_SPECIMEN_IN_PACKAGE; /* SPECIMEN_IN_PACKAGE */
struct OML_O39_SPECIMEN_OBSERVATION; /* SPECIMEN_OBSERVATION */
struct OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE; /* SPECIMEN_CONTAINER_IN_PACKAGE */
struct OML_O39_CONTAINER_OBSERVATION; /* CONTAINER_OBSERVATION */
struct OML_O39_PATIENT_VISIT; /* PATIENT_VISIT */
struct OML_O39_INSURANCE; /* INSURANCE */

/* PATIENT */
struct OML_O39_PATIENT : public HL7Group {
  OML_O39_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_AL1_1,
    OML_O39_ARV_2,
    OML_O39_GT1_3,
    OML_O39_NK1_4,
    OML_O39_NTE_5,
    OML_O39_OML_O39_INSURANCE_6,
    OML_O39_OML_O39_PATIENT_VISIT_7,
    OML_O39_PD1_8,
    OML_O39_PID_9,
    OML_O39_PRT_10,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_PATIENT"; }
  OML_O39_PATIENT* create() const { return new OML_O39_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.PATIENT");
    addObject<AL1>(OML_O39_AL1_1, "AL1.1", HL7::optional, HL7::repetition_on);
    addObject<ARV>(OML_O39_ARV_2, "ARV.2", HL7::optional, HL7::repetition_on);
    addObject<GT1>(OML_O39_GT1_3, "GT1.3", HL7::optional, HL7::repetition_on);
    addObject<NK1>(OML_O39_NK1_4, "NK1.4", HL7::optional, HL7::repetition_on);
    addObject<NTE>(OML_O39_NTE_5, "NTE.5", HL7::optional, HL7::repetition_on);
    addObject<OML_O39_INSURANCE>(OML_O39_OML_O39_INSURANCE_6, "OML_O39_INSURANCE.6", HL7::optional, HL7::repetition_on);
    addObject<OML_O39_PATIENT_VISIT>(OML_O39_OML_O39_PATIENT_VISIT_7, "OML_O39_PATIENT_VISIT.7", HL7::optional, HL7::repetition_on);
    addObject<PD1>(OML_O39_PD1_8, "PD1.8", HL7::optional, HL7::repetition_on);
    addObject<PID>(OML_O39_PID_9, "PID.9", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O39_PRT_10, "PRT.10", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AL1* getAL1_1(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, OML_O39_AL1_1);
  }
  ARV* getARV_2(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O39_ARV_2);
  }
  GT1* getGT1_3(size_t index = 0) {
    return (GT1*)this->getObjectSafe(index, OML_O39_GT1_3);
  }
  NK1* getNK1_4(size_t index = 0) {
    return (NK1*)this->getObjectSafe(index, OML_O39_NK1_4);
  }
  NTE* getNTE_5(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O39_NTE_5);
  }
  OML_O39_INSURANCE* getOML_O39_INSURANCE_6(size_t index = 0) {
    return (OML_O39_INSURANCE*)this->getObjectSafe(index, OML_O39_OML_O39_INSURANCE_6);
  }
  OML_O39_PATIENT_VISIT* getOML_O39_PATIENT_VISIT_7(size_t index = 0) {
    return (OML_O39_PATIENT_VISIT*)this->getObjectSafe(index, OML_O39_OML_O39_PATIENT_VISIT_7);
  }
  PD1* getPD1_8(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O39_PD1_8);
  }
  PID* getPID_9(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O39_PID_9);
  }
  PRT* getPRT_10(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_10);
  }

  /* Checker list */
  bool isAL1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_AL1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_ARV_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isGT1_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_GT1_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNK1_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_NK1_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_5(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_NTE_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O39_INSURANCE_6(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OML_O39_INSURANCE_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O39_PATIENT_VISIT_7(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OML_O39_PATIENT_VISIT_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_8(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PD1_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_9(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PID_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_10(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_10) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_PATIENT */

/* ORDER */
struct OML_O39_ORDER : public HL7Group {
  OML_O39_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_BLG_1,
    OML_O39_CTI_2,
    OML_O39_FT1_3,
    OML_O39_OML_O39_OBSERVATION_REQUEST_4,
    OML_O39_OML_O39_TIMING_5,
    OML_O39_ORC_6,
    OML_O39_PRT_7,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_ORDER"; }
  OML_O39_ORDER* create() const { return new OML_O39_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.ORDER");
    addObject<BLG>(OML_O39_BLG_1, "BLG.1", HL7::optional, HL7::repetition_on);
    addObject<CTI>(OML_O39_CTI_2, "CTI.2", HL7::optional, HL7::repetition_on);
    addObject<FT1>(OML_O39_FT1_3, "FT1.3", HL7::optional, HL7::repetition_on);
    addObject<OML_O39_OBSERVATION_REQUEST>(OML_O39_OML_O39_OBSERVATION_REQUEST_4, "OML_O39_OBSERVATION_REQUEST.4", HL7::optional, HL7::repetition_on);
    addObject<OML_O39_TIMING>(OML_O39_OML_O39_TIMING_5, "OML_O39_TIMING.5", HL7::optional, HL7::repetition_on);
    addObject<ORC>(OML_O39_ORC_6, "ORC.6", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O39_PRT_7, "PRT.7", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  BLG* getBLG_1(size_t index = 0) {
    return (BLG*)this->getObjectSafe(index, OML_O39_BLG_1);
  }
  CTI* getCTI_2(size_t index = 0) {
    return (CTI*)this->getObjectSafe(index, OML_O39_CTI_2);
  }
  FT1* getFT1_3(size_t index = 0) {
    return (FT1*)this->getObjectSafe(index, OML_O39_FT1_3);
  }
  OML_O39_OBSERVATION_REQUEST* getOML_O39_OBSERVATION_REQUEST_4(size_t index = 0) {
    return (OML_O39_OBSERVATION_REQUEST*)this->getObjectSafe(index, OML_O39_OML_O39_OBSERVATION_REQUEST_4);
  }
  OML_O39_TIMING* getOML_O39_TIMING_5(size_t index = 0) {
    return (OML_O39_TIMING*)this->getObjectSafe(index, OML_O39_OML_O39_TIMING_5);
  }
  ORC* getORC_6(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OML_O39_ORC_6);
  }
  PRT* getPRT_7(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_7);
  }

  /* Checker list */
  bool isBLG_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_BLG_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCTI_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_CTI_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isFT1_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_FT1_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O39_OBSERVATION_REQUEST_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OML_O39_OBSERVATION_REQUEST_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O39_TIMING_5(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OML_O39_TIMING_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_6(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_ORC_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_7(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_7) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_ORDER */

/* TIMING */
struct OML_O39_TIMING : public HL7Group {
  OML_O39_TIMING() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_TQ1_1,
    OML_O39_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_TIMING"; }
  OML_O39_TIMING* create() const { return new OML_O39_TIMING(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.TIMING");
    addObject<TQ1>(OML_O39_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(OML_O39_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O39_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O39_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_TIMING */

/* OBSERVATION_REQUEST */
struct OML_O39_OBSERVATION_REQUEST : public HL7Group {
  OML_O39_OBSERVATION_REQUEST() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_CTD_1,
    OML_O39_DG1_2,
    OML_O39_NTE_3,
    OML_O39_OBR_4,
    OML_O39_OML_O39_OBSERVATION_5,
    OML_O39_OML_O39_SPECIMEN_SHIPMENT_6,
    OML_O39_PRT_7,
    OML_O39_TCD_8,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_OBSERVATION_REQUEST"; }
  OML_O39_OBSERVATION_REQUEST* create() const { return new OML_O39_OBSERVATION_REQUEST(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.OBSERVATION_REQUEST");
    addObject<CTD>(OML_O39_CTD_1, "CTD.1", HL7::optional, HL7::repetition_on);
    addObject<DG1>(OML_O39_DG1_2, "DG1.2", HL7::optional, HL7::repetition_on);
    addObject<NTE>(OML_O39_NTE_3, "NTE.3", HL7::optional, HL7::repetition_on);
    addObject<OBR>(OML_O39_OBR_4, "OBR.4", HL7::optional, HL7::repetition_on);
    addObject<OML_O39_OBSERVATION>(OML_O39_OML_O39_OBSERVATION_5, "OML_O39_OBSERVATION.5", HL7::optional, HL7::repetition_on);
    addObject<OML_O39_SPECIMEN_SHIPMENT>(OML_O39_OML_O39_SPECIMEN_SHIPMENT_6, "OML_O39_SPECIMEN_SHIPMENT.6", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O39_PRT_7, "PRT.7", HL7::optional, HL7::repetition_on);
    addObject<TCD>(OML_O39_TCD_8, "TCD.8", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  CTD* getCTD_1(size_t index = 0) {
    return (CTD*)this->getObjectSafe(index, OML_O39_CTD_1);
  }
  DG1* getDG1_2(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, OML_O39_DG1_2);
  }
  NTE* getNTE_3(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O39_NTE_3);
  }
  OBR* getOBR_4(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OML_O39_OBR_4);
  }
  OML_O39_OBSERVATION* getOML_O39_OBSERVATION_5(size_t index = 0) {
    return (OML_O39_OBSERVATION*)this->getObjectSafe(index, OML_O39_OML_O39_OBSERVATION_5);
  }
  OML_O39_SPECIMEN_SHIPMENT* getOML_O39_SPECIMEN_SHIPMENT_6(size_t index = 0) {
    return (OML_O39_SPECIMEN_SHIPMENT*)this->getObjectSafe(index, OML_O39_OML_O39_SPECIMEN_SHIPMENT_6);
  }
  PRT* getPRT_7(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_7);
  }
  TCD* getTCD_8(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O39_TCD_8);
  }

  /* Checker list */
  bool isCTD_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_CTD_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDG1_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_DG1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_NTE_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OBR_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O39_OBSERVATION_5(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OML_O39_OBSERVATION_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O39_SPECIMEN_SHIPMENT_6(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OML_O39_SPECIMEN_SHIPMENT_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_7(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_8(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_TCD_8) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_OBSERVATION_REQUEST */

/* OBSERVATION */
struct OML_O39_OBSERVATION : public HL7Group {
  OML_O39_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_NTE_1,
    OML_O39_OBX_2,
    OML_O39_PRT_3,
    OML_O39_TCD_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_OBSERVATION"; }
  OML_O39_OBSERVATION* create() const { return new OML_O39_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.OBSERVATION");
    addObject<NTE>(OML_O39_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(OML_O39_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O39_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
    addObject<TCD>(OML_O39_TCD_4, "TCD.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O39_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O39_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_3);
  }
  TCD* getTCD_4(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O39_TCD_4);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_TCD_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_OBSERVATION */

/* SPECIMEN_SHIPMENT */
struct OML_O39_SPECIMEN_SHIPMENT : public HL7Group {
  OML_O39_SPECIMEN_SHIPMENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_OML_O39_PACKAGE_1,
    OML_O39_OML_O39_SHIPMENT_OBSERVATION_2,
    OML_O39_SHP_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_SPECIMEN_SHIPMENT"; }
  OML_O39_SPECIMEN_SHIPMENT* create() const { return new OML_O39_SPECIMEN_SHIPMENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.SPECIMEN_SHIPMENT");
    addObject<OML_O39_PACKAGE>(OML_O39_OML_O39_PACKAGE_1, "OML_O39_PACKAGE.1", HL7::optional, HL7::repetition_on);
    addObject<OML_O39_SHIPMENT_OBSERVATION>(OML_O39_OML_O39_SHIPMENT_OBSERVATION_2, "OML_O39_SHIPMENT_OBSERVATION.2", HL7::optional, HL7::repetition_on);
    addObject<SHP>(OML_O39_SHP_3, "SHP.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OML_O39_PACKAGE* getOML_O39_PACKAGE_1(size_t index = 0) {
    return (OML_O39_PACKAGE*)this->getObjectSafe(index, OML_O39_OML_O39_PACKAGE_1);
  }
  OML_O39_SHIPMENT_OBSERVATION* getOML_O39_SHIPMENT_OBSERVATION_2(size_t index = 0) {
    return (OML_O39_SHIPMENT_OBSERVATION*)this->getObjectSafe(index, OML_O39_OML_O39_SHIPMENT_OBSERVATION_2);
  }
  SHP* getSHP_3(size_t index = 0) {
    return (SHP*)this->getObjectSafe(index, OML_O39_SHP_3);
  }

  /* Checker list */
  bool isOML_O39_PACKAGE_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OML_O39_PACKAGE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O39_SHIPMENT_OBSERVATION_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OML_O39_SHIPMENT_OBSERVATION_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSHP_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_SHP_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_SPECIMEN_SHIPMENT */

/* SHIPMENT_OBSERVATION */
struct OML_O39_SHIPMENT_OBSERVATION : public HL7Group {
  OML_O39_SHIPMENT_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_OBX_1,
    OML_O39_PRT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_SHIPMENT_OBSERVATION"; }
  OML_O39_SHIPMENT_OBSERVATION* create() const { return new OML_O39_SHIPMENT_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.SHIPMENT_OBSERVATION");
    addObject<OBX>(OML_O39_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O39_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O39_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_2);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_SHIPMENT_OBSERVATION */

/* PACKAGE */
struct OML_O39_PACKAGE : public HL7Group {
  OML_O39_PACKAGE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_OML_O39_SPECIMEN_IN_PACKAGE_1,
    OML_O39_PAC_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_PACKAGE"; }
  OML_O39_PACKAGE* create() const { return new OML_O39_PACKAGE(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.PACKAGE");
    addObject<OML_O39_SPECIMEN_IN_PACKAGE>(OML_O39_OML_O39_SPECIMEN_IN_PACKAGE_1, "OML_O39_SPECIMEN_IN_PACKAGE.1", HL7::optional, HL7::repetition_on);
    addObject<PAC>(OML_O39_PAC_2, "PAC.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OML_O39_SPECIMEN_IN_PACKAGE* getOML_O39_SPECIMEN_IN_PACKAGE_1(size_t index = 0) {
    return (OML_O39_SPECIMEN_IN_PACKAGE*)this->getObjectSafe(index, OML_O39_OML_O39_SPECIMEN_IN_PACKAGE_1);
  }
  PAC* getPAC_2(size_t index = 0) {
    return (PAC*)this->getObjectSafe(index, OML_O39_PAC_2);
  }

  /* Checker list */
  bool isOML_O39_SPECIMEN_IN_PACKAGE_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OML_O39_SPECIMEN_IN_PACKAGE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPAC_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PAC_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_PACKAGE */

/* SPECIMEN_IN_PACKAGE */
struct OML_O39_SPECIMEN_IN_PACKAGE : public HL7Group {
  OML_O39_SPECIMEN_IN_PACKAGE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE_1,
    OML_O39_OML_O39_SPECIMEN_OBSERVATION_2,
    OML_O39_SPM_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_SPECIMEN_IN_PACKAGE"; }
  OML_O39_SPECIMEN_IN_PACKAGE* create() const { return new OML_O39_SPECIMEN_IN_PACKAGE(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.SPECIMEN_IN_PACKAGE");
    addObject<OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE>(OML_O39_OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE_1, "OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE.1", HL7::optional, HL7::repetition_on);
    addObject<OML_O39_SPECIMEN_OBSERVATION>(OML_O39_OML_O39_SPECIMEN_OBSERVATION_2, "OML_O39_SPECIMEN_OBSERVATION.2", HL7::optional, HL7::repetition_on);
    addObject<SPM>(OML_O39_SPM_3, "SPM.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE* getOML_O39_SPECIMEN_CONTAINER_IN_PACKAGE_1(size_t index = 0) {
    return (OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE*)this->getObjectSafe(index, OML_O39_OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE_1);
  }
  OML_O39_SPECIMEN_OBSERVATION* getOML_O39_SPECIMEN_OBSERVATION_2(size_t index = 0) {
    return (OML_O39_SPECIMEN_OBSERVATION*)this->getObjectSafe(index, OML_O39_OML_O39_SPECIMEN_OBSERVATION_2);
  }
  SPM* getSPM_3(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OML_O39_SPM_3);
  }

  /* Checker list */
  bool isOML_O39_SPECIMEN_CONTAINER_IN_PACKAGE_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O39_SPECIMEN_OBSERVATION_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OML_O39_SPECIMEN_OBSERVATION_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_SPM_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_SPECIMEN_IN_PACKAGE */

/* SPECIMEN_OBSERVATION */
struct OML_O39_SPECIMEN_OBSERVATION : public HL7Group {
  OML_O39_SPECIMEN_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_OBX_1,
    OML_O39_PRT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_SPECIMEN_OBSERVATION"; }
  OML_O39_SPECIMEN_OBSERVATION* create() const { return new OML_O39_SPECIMEN_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.SPECIMEN_OBSERVATION");
    addObject<OBX>(OML_O39_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O39_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O39_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_2);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_SPECIMEN_OBSERVATION */

/* SPECIMEN_CONTAINER_IN_PACKAGE */
struct OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE : public HL7Group {
  OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_OML_O39_CONTAINER_OBSERVATION_1,
    OML_O39_SAC_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE"; }
  OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE* create() const { return new OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.SPECIMEN_CONTAINER_IN_PACKAGE");
    addObject<OML_O39_CONTAINER_OBSERVATION>(OML_O39_OML_O39_CONTAINER_OBSERVATION_1, "OML_O39_CONTAINER_OBSERVATION.1", HL7::optional, HL7::repetition_on);
    addObject<SAC>(OML_O39_SAC_2, "SAC.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OML_O39_CONTAINER_OBSERVATION* getOML_O39_CONTAINER_OBSERVATION_1(size_t index = 0) {
    return (OML_O39_CONTAINER_OBSERVATION*)this->getObjectSafe(index, OML_O39_OML_O39_CONTAINER_OBSERVATION_1);
  }
  SAC* getSAC_2(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OML_O39_SAC_2);
  }

  /* Checker list */
  bool isOML_O39_CONTAINER_OBSERVATION_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OML_O39_CONTAINER_OBSERVATION_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_SAC_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_SPECIMEN_CONTAINER_IN_PACKAGE */

/* CONTAINER_OBSERVATION */
struct OML_O39_CONTAINER_OBSERVATION : public HL7Group {
  OML_O39_CONTAINER_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_OBX_1,
    OML_O39_PRT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_CONTAINER_OBSERVATION"; }
  OML_O39_CONTAINER_OBSERVATION* create() const { return new OML_O39_CONTAINER_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.CONTAINER_OBSERVATION");
    addObject<OBX>(OML_O39_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O39_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O39_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_2);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_CONTAINER_OBSERVATION */

/* PATIENT_VISIT */
struct OML_O39_PATIENT_VISIT : public HL7Group {
  OML_O39_PATIENT_VISIT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_PRT_1,
    OML_O39_PV1_2,
    OML_O39_PV2_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_PATIENT_VISIT"; }
  OML_O39_PATIENT_VISIT* create() const { return new OML_O39_PATIENT_VISIT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.PATIENT_VISIT");
    addObject<PRT>(OML_O39_PRT_1, "PRT.1", HL7::optional, HL7::repetition_on);
    addObject<PV1>(OML_O39_PV1_2, "PV1.2", HL7::optional, HL7::repetition_on);
    addObject<PV2>(OML_O39_PV2_3, "PV2.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PRT* getPRT_1(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_1);
  }
  PV1* getPV1_2(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O39_PV1_2);
  }
  PV2* getPV2_3(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O39_PV2_3);
  }

  /* Checker list */
  bool isPRT_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PV1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PV2_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_PATIENT_VISIT */

/* INSURANCE */
struct OML_O39_INSURANCE : public HL7Group {
  OML_O39_INSURANCE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_IN1_1,
    OML_O39_IN2_2,
    OML_O39_IN3_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39_INSURANCE"; }
  OML_O39_INSURANCE* create() const { return new OML_O39_INSURANCE(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39.INSURANCE");
    addObject<IN1>(OML_O39_IN1_1, "IN1.1", HL7::optional, HL7::repetition_on);
    addObject<IN2>(OML_O39_IN2_2, "IN2.2", HL7::optional, HL7::repetition_on);
    addObject<IN3>(OML_O39_IN3_3, "IN3.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  IN1* getIN1_1(size_t index = 0) {
    return (IN1*)this->getObjectSafe(index, OML_O39_IN1_1);
  }
  IN2* getIN2_2(size_t index = 0) {
    return (IN2*)this->getObjectSafe(index, OML_O39_IN2_2);
  }
  IN3* getIN3_3(size_t index = 0) {
    return (IN3*)this->getObjectSafe(index, OML_O39_IN3_3);
  }

  /* Checker list */
  bool isIN1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_IN1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN2_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_IN2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN3_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_IN3_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_INSURANCE */

/* OML_O39 */
struct OML_O39 : public HL7Message {
  OML_O39() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O39_MSH_1,
    OML_O39_SFT_2,
    OML_O39_UAC_3,
    OML_O39_NTE_4,
    OML_O39_ORC_7,
    OML_O39_PRT_8,
    OML_O39_FT1_11,
    OML_O39_CTI_12,
    OML_O39_BLG_13,
    OML_O39_TQ1_14,
    OML_O39_TQ2_15,
    OML_O39_TQ1_16,
    OML_O39_TQ2_17,
    OML_O39_OBR_18,
    OML_O39_TCD_19,
    OML_O39_NTE_20,
    OML_O39_PRT_21,
    OML_O39_CTD_22,
    OML_O39_DG1_23,
    OML_O39_OBX_26,
    OML_O39_PRT_27,
    OML_O39_TCD_28,
    OML_O39_NTE_29,
    OML_O39_OBX_30,
    OML_O39_PRT_31,
    OML_O39_TCD_32,
    OML_O39_NTE_33,
    OML_O39_SHP_34,
    OML_O39_OBX_37,
    OML_O39_PRT_38,
    OML_O39_OBX_39,
    OML_O39_PRT_40,
    OML_O39_PAC_41,
    OML_O39_SPM_43,
    OML_O39_OBX_46,
    OML_O39_PRT_47,
    OML_O39_OBX_48,
    OML_O39_PRT_49,
    OML_O39_SAC_50,
    OML_O39_OBX_52,
    OML_O39_PRT_53,
    OML_O39_AL1_54,
    OML_O39_PID_55,
    OML_O39_PD1_56,
    OML_O39_PRT_57,
    OML_O39_NTE_58,
    OML_O39_NK1_59,
    OML_O39_ARV_60,
    OML_O39_GT1_63,
    OML_O39_PV1_64,
    OML_O39_PV2_65,
    OML_O39_PRT_66,
    OML_O39_PV1_67,
    OML_O39_PV2_68,
    OML_O39_PRT_69,
    OML_O39_IN1_70,
    OML_O39_IN2_71,
    OML_O39_IN3_72,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O39"; }
  OML_O39* create() const { return new OML_O39(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O39");
    addObject<MSH>(OML_O39_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(OML_O39_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(OML_O39_UAC_3, "UAC.3", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O39_NTE_4, "NTE.4", HL7::optional, HL7::repetition_on);
    addObject<ORC>(OML_O39_ORC_7, "ORC.7", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O39_PRT_8, "PRT.8", HL7::optional, HL7::repetition_off);
    addObject<FT1>(OML_O39_FT1_11, "FT1.11", HL7::optional, HL7::repetition_off);
    addObject<CTI>(OML_O39_CTI_12, "CTI.12", HL7::optional, HL7::repetition_off);
    addObject<BLG>(OML_O39_BLG_13, "BLG.13", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OML_O39_TQ1_14, "TQ1.14", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OML_O39_TQ2_15, "TQ2.15", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OML_O39_TQ1_16, "TQ1.16", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OML_O39_TQ2_17, "TQ2.17", HL7::optional, HL7::repetition_off);
    addObject<OBR>(OML_O39_OBR_18, "OBR.18", HL7::initialized, HL7::repetition_off);
    addObject<TCD>(OML_O39_TCD_19, "TCD.19", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O39_NTE_20, "NTE.20", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O39_PRT_21, "PRT.21", HL7::optional, HL7::repetition_off);
    addObject<CTD>(OML_O39_CTD_22, "CTD.22", HL7::optional, HL7::repetition_off);
    addObject<DG1>(OML_O39_DG1_23, "DG1.23", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O39_OBX_26, "OBX.26", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O39_PRT_27, "PRT.27", HL7::optional, HL7::repetition_off);
    addObject<TCD>(OML_O39_TCD_28, "TCD.28", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O39_NTE_29, "NTE.29", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O39_OBX_30, "OBX.30", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O39_PRT_31, "PRT.31", HL7::optional, HL7::repetition_off);
    addObject<TCD>(OML_O39_TCD_32, "TCD.32", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O39_NTE_33, "NTE.33", HL7::optional, HL7::repetition_off);
    addObject<SHP>(OML_O39_SHP_34, "SHP.34", HL7::initialized, HL7::repetition_off);
    addObject<OBX>(OML_O39_OBX_37, "OBX.37", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O39_PRT_38, "PRT.38", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O39_OBX_39, "OBX.39", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O39_PRT_40, "PRT.40", HL7::optional, HL7::repetition_off);
    addObject<PAC>(OML_O39_PAC_41, "PAC.41", HL7::initialized, HL7::repetition_off);
    addObject<SPM>(OML_O39_SPM_43, "SPM.43", HL7::initialized, HL7::repetition_off);
    addObject<OBX>(OML_O39_OBX_46, "OBX.46", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O39_PRT_47, "PRT.47", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O39_OBX_48, "OBX.48", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O39_PRT_49, "PRT.49", HL7::optional, HL7::repetition_off);
    addObject<SAC>(OML_O39_SAC_50, "SAC.50", HL7::initialized, HL7::repetition_off);
    addObject<OBX>(OML_O39_OBX_52, "OBX.52", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O39_PRT_53, "PRT.53", HL7::optional, HL7::repetition_off);
    addObject<AL1>(OML_O39_AL1_54, "AL1.54", HL7::optional, HL7::repetition_off);
    addObject<PID>(OML_O39_PID_55, "PID.55", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OML_O39_PD1_56, "PD1.56", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O39_PRT_57, "PRT.57", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O39_NTE_58, "NTE.58", HL7::optional, HL7::repetition_off);
    addObject<NK1>(OML_O39_NK1_59, "NK1.59", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OML_O39_ARV_60, "ARV.60", HL7::optional, HL7::repetition_off);
    addObject<GT1>(OML_O39_GT1_63, "GT1.63", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OML_O39_PV1_64, "PV1.64", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OML_O39_PV2_65, "PV2.65", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O39_PRT_66, "PRT.66", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OML_O39_PV1_67, "PV1.67", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OML_O39_PV2_68, "PV2.68", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O39_PRT_69, "PRT.69", HL7::optional, HL7::repetition_off);
    addObject<IN1>(OML_O39_IN1_70, "IN1.70", HL7::initialized, HL7::repetition_off);
    addObject<IN2>(OML_O39_IN2_71, "IN2.71", HL7::optional, HL7::repetition_off);
    addObject<IN3>(OML_O39_IN3_72, "IN3.72", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, OML_O39_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, OML_O39_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, OML_O39_UAC_3);
  }
  NTE* getNTE_4(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O39_NTE_4);
  }
  ORC* getORC_7(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OML_O39_ORC_7);
  }
  PRT* getPRT_8(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_8);
  }
  FT1* getFT1_11(size_t index = 0) {
    return (FT1*)this->getObjectSafe(index, OML_O39_FT1_11);
  }
  CTI* getCTI_12(size_t index = 0) {
    return (CTI*)this->getObjectSafe(index, OML_O39_CTI_12);
  }
  BLG* getBLG_13(size_t index = 0) {
    return (BLG*)this->getObjectSafe(index, OML_O39_BLG_13);
  }
  TQ1* getTQ1_14(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O39_TQ1_14);
  }
  TQ2* getTQ2_15(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O39_TQ2_15);
  }
  TQ1* getTQ1_16(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O39_TQ1_16);
  }
  TQ2* getTQ2_17(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O39_TQ2_17);
  }
  OBR* getOBR_18(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OML_O39_OBR_18);
  }
  TCD* getTCD_19(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O39_TCD_19);
  }
  NTE* getNTE_20(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O39_NTE_20);
  }
  PRT* getPRT_21(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_21);
  }
  CTD* getCTD_22(size_t index = 0) {
    return (CTD*)this->getObjectSafe(index, OML_O39_CTD_22);
  }
  DG1* getDG1_23(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, OML_O39_DG1_23);
  }
  OBX* getOBX_26(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O39_OBX_26);
  }
  PRT* getPRT_27(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_27);
  }
  TCD* getTCD_28(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O39_TCD_28);
  }
  NTE* getNTE_29(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O39_NTE_29);
  }
  OBX* getOBX_30(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O39_OBX_30);
  }
  PRT* getPRT_31(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_31);
  }
  TCD* getTCD_32(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O39_TCD_32);
  }
  NTE* getNTE_33(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O39_NTE_33);
  }
  SHP* getSHP_34(size_t index = 0) {
    return (SHP*)this->getObjectSafe(index, OML_O39_SHP_34);
  }
  OBX* getOBX_37(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O39_OBX_37);
  }
  PRT* getPRT_38(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_38);
  }
  OBX* getOBX_39(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O39_OBX_39);
  }
  PRT* getPRT_40(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_40);
  }
  PAC* getPAC_41(size_t index = 0) {
    return (PAC*)this->getObjectSafe(index, OML_O39_PAC_41);
  }
  SPM* getSPM_43(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OML_O39_SPM_43);
  }
  OBX* getOBX_46(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O39_OBX_46);
  }
  PRT* getPRT_47(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_47);
  }
  OBX* getOBX_48(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O39_OBX_48);
  }
  PRT* getPRT_49(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_49);
  }
  SAC* getSAC_50(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OML_O39_SAC_50);
  }
  OBX* getOBX_52(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O39_OBX_52);
  }
  PRT* getPRT_53(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_53);
  }
  AL1* getAL1_54(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, OML_O39_AL1_54);
  }
  PID* getPID_55(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O39_PID_55);
  }
  PD1* getPD1_56(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O39_PD1_56);
  }
  PRT* getPRT_57(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_57);
  }
  NTE* getNTE_58(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O39_NTE_58);
  }
  NK1* getNK1_59(size_t index = 0) {
    return (NK1*)this->getObjectSafe(index, OML_O39_NK1_59);
  }
  ARV* getARV_60(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O39_ARV_60);
  }
  GT1* getGT1_63(size_t index = 0) {
    return (GT1*)this->getObjectSafe(index, OML_O39_GT1_63);
  }
  PV1* getPV1_64(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O39_PV1_64);
  }
  PV2* getPV2_65(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O39_PV2_65);
  }
  PRT* getPRT_66(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_66);
  }
  PV1* getPV1_67(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O39_PV1_67);
  }
  PV2* getPV2_68(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O39_PV2_68);
  }
  PRT* getPRT_69(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O39_PRT_69);
  }
  IN1* getIN1_70(size_t index = 0) {
    return (IN1*)this->getObjectSafe(index, OML_O39_IN1_70);
  }
  IN2* getIN2_71(size_t index = 0) {
    return (IN2*)this->getObjectSafe(index, OML_O39_IN2_71);
  }
  IN3* getIN3_72(size_t index = 0) {
    return (IN3*)this->getObjectSafe(index, OML_O39_IN3_72);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_NTE_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_7(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_ORC_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_8(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isFT1_11(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_FT1_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCTI_12(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_CTI_12) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isBLG_13(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_BLG_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_14(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_TQ1_14) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_15(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_TQ2_15) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_16(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_TQ1_16) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_17(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_TQ2_17) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_18(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OBR_18) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_19(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_TCD_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_20(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_NTE_20) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_21(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_21) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCTD_22(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_CTD_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDG1_23(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_DG1_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_26(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OBX_26) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_27(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_27) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_28(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_TCD_28) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_29(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_NTE_29) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_30(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OBX_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_31(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_31) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_32(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_TCD_32) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_33(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_NTE_33) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSHP_34(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_SHP_34) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_37(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OBX_37) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_38(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_38) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_39(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OBX_39) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_40(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_40) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPAC_41(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PAC_41) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_43(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_SPM_43) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_46(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OBX_46) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_47(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_47) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_48(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OBX_48) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_49(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_49) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_50(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_SAC_50) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_52(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_OBX_52) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_53(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_53) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_54(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_AL1_54) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_55(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PID_55) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_56(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PD1_56) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_57(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_57) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_58(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_NTE_58) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNK1_59(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_NK1_59) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_60(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_ARV_60) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isGT1_63(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_GT1_63) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_64(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PV1_64) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_65(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PV2_65) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_66(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_66) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_67(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PV1_67) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_68(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PV2_68) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_69(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_PRT_69) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN1_70(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_IN1_70) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN2_71(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_IN2_71) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN3_72(size_t index = 0) {
    try {
      return this->getObject(index, OML_O39_IN3_72) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O39_ */
} /* namespace HL7_281 */
#endif /*  __OML_O39__281_H__ */
