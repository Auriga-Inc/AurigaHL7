/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:04:53 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __ORB_O28__281_H__
#define __ORB_O28__281_H__

#include "../../common/Util.h"
#include "../segment/ARV.h"
#include "../segment/BPO.h"
#include "../segment/ERR.h"
#include "../segment/MSA.h"
#include "../segment/MSH.h"
#include "../segment/NTE.h"
#include "../segment/ORC.h"
#include "../segment/PID.h"
#include "../segment/PRT.h"
#include "../segment/SFT.h"
#include "../segment/TQ1.h"
#include "../segment/TQ2.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct ORB_O28_RESPONSE; /* RESPONSE */
struct ORB_O28_PATIENT; /* PATIENT */
struct ORB_O28_ORDER; /* ORDER */
struct ORB_O28_TIMING; /* TIMING */

/* RESPONSE */
struct ORB_O28_RESPONSE : public HL7Group {
  ORB_O28_RESPONSE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    ORB_O28_ORB_O28_PATIENT_1,
    FIELD_ID_MAX
  };

  const char* className() const { return "ORB_O28_RESPONSE"; }
  ORB_O28_RESPONSE* create() const { return new ORB_O28_RESPONSE(); }

 private:
  /* Initialize object */
  void init() {
    setName("ORB_O28.RESPONSE");
    addObject<ORB_O28_PATIENT>(ORB_O28_ORB_O28_PATIENT_1, "ORB_O28_PATIENT.1", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ORB_O28_PATIENT* getORB_O28_PATIENT_1(size_t index = 0) {
    return (ORB_O28_PATIENT*)this->getObjectSafe(index, ORB_O28_ORB_O28_PATIENT_1);
  }

  /* Checker list */
  bool isORB_O28_PATIENT_1(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_ORB_O28_PATIENT_1) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* ORB_O28_RESPONSE */

/* PATIENT */
struct ORB_O28_PATIENT : public HL7Group {
  ORB_O28_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    ORB_O28_ARV_1,
    ORB_O28_ORB_O28_ORDER_2,
    ORB_O28_PID_3,
    ORB_O28_PRT_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "ORB_O28_PATIENT"; }
  ORB_O28_PATIENT* create() const { return new ORB_O28_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("ORB_O28.PATIENT");
    addObject<ARV>(ORB_O28_ARV_1, "ARV.1", HL7::optional, HL7::repetition_on);
    addObject<ORB_O28_ORDER>(ORB_O28_ORB_O28_ORDER_2, "ORB_O28_ORDER.2", HL7::optional, HL7::repetition_on);
    addObject<PID>(ORB_O28_PID_3, "PID.3", HL7::optional, HL7::repetition_on);
    addObject<PRT>(ORB_O28_PRT_4, "PRT.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ARV* getARV_1(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, ORB_O28_ARV_1);
  }
  ORB_O28_ORDER* getORB_O28_ORDER_2(size_t index = 0) {
    return (ORB_O28_ORDER*)this->getObjectSafe(index, ORB_O28_ORB_O28_ORDER_2);
  }
  PID* getPID_3(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, ORB_O28_PID_3);
  }
  PRT* getPRT_4(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, ORB_O28_PRT_4);
  }

  /* Checker list */
  bool isARV_1(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_ARV_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORB_O28_ORDER_2(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_ORB_O28_ORDER_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_3(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_PID_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_4(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_PRT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* ORB_O28_PATIENT */

/* ORDER */
struct ORB_O28_ORDER : public HL7Group {
  ORB_O28_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    ORB_O28_BPO_1,
    ORB_O28_ORB_O28_TIMING_2,
    ORB_O28_ORC_3,
    ORB_O28_PRT_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "ORB_O28_ORDER"; }
  ORB_O28_ORDER* create() const { return new ORB_O28_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("ORB_O28.ORDER");
    addObject<BPO>(ORB_O28_BPO_1, "BPO.1", HL7::optional, HL7::repetition_on);
    addObject<ORB_O28_TIMING>(ORB_O28_ORB_O28_TIMING_2, "ORB_O28_TIMING.2", HL7::optional, HL7::repetition_on);
    addObject<ORC>(ORB_O28_ORC_3, "ORC.3", HL7::optional, HL7::repetition_on);
    addObject<PRT>(ORB_O28_PRT_4, "PRT.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  BPO* getBPO_1(size_t index = 0) {
    return (BPO*)this->getObjectSafe(index, ORB_O28_BPO_1);
  }
  ORB_O28_TIMING* getORB_O28_TIMING_2(size_t index = 0) {
    return (ORB_O28_TIMING*)this->getObjectSafe(index, ORB_O28_ORB_O28_TIMING_2);
  }
  ORC* getORC_3(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, ORB_O28_ORC_3);
  }
  PRT* getPRT_4(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, ORB_O28_PRT_4);
  }

  /* Checker list */
  bool isBPO_1(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_BPO_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORB_O28_TIMING_2(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_ORB_O28_TIMING_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_3(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_ORC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_4(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_PRT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* ORB_O28_ORDER */

/* TIMING */
struct ORB_O28_TIMING : public HL7Group {
  ORB_O28_TIMING() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    ORB_O28_TQ1_1,
    ORB_O28_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "ORB_O28_TIMING"; }
  ORB_O28_TIMING* create() const { return new ORB_O28_TIMING(); }

 private:
  /* Initialize object */
  void init() {
    setName("ORB_O28.TIMING");
    addObject<TQ1>(ORB_O28_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(ORB_O28_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, ORB_O28_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, ORB_O28_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* ORB_O28_TIMING */

/* ORB_O28 */
struct ORB_O28 : public HL7Message {
  ORB_O28() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    ORB_O28_MSH_1,
    ORB_O28_MSA_2,
    ORB_O28_ERR_3,
    ORB_O28_SFT_4,
    ORB_O28_UAC_5,
    ORB_O28_NTE_6,
    ORB_O28_PID_9,
    ORB_O28_PRT_10,
    ORB_O28_ARV_11,
    ORB_O28_ORC_13,
    ORB_O28_PRT_14,
    ORB_O28_BPO_16,
    ORB_O28_TQ1_17,
    ORB_O28_TQ2_18,
    FIELD_ID_MAX
  };

  const char* className() const { return "ORB_O28"; }
  ORB_O28* create() const { return new ORB_O28(); }

 private:
  /* Initialize object */
  void init() {
    setName("ORB_O28");
    addObject<MSH>(ORB_O28_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<MSA>(ORB_O28_MSA_2, "MSA.2", HL7::initialized, HL7::repetition_off);
    addObject<ERR>(ORB_O28_ERR_3, "ERR.3", HL7::optional, HL7::repetition_on);
    addObject<SFT>(ORB_O28_SFT_4, "SFT.4", HL7::optional, HL7::repetition_on);
    addObject<UAC>(ORB_O28_UAC_5, "UAC.5", HL7::optional, HL7::repetition_off);
    addObject<NTE>(ORB_O28_NTE_6, "NTE.6", HL7::optional, HL7::repetition_on);
    addObject<PID>(ORB_O28_PID_9, "PID.9", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(ORB_O28_PRT_10, "PRT.10", HL7::optional, HL7::repetition_off);
    addObject<ARV>(ORB_O28_ARV_11, "ARV.11", HL7::optional, HL7::repetition_off);
    addObject<ORC>(ORB_O28_ORC_13, "ORC.13", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(ORB_O28_PRT_14, "PRT.14", HL7::optional, HL7::repetition_off);
    addObject<BPO>(ORB_O28_BPO_16, "BPO.16", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(ORB_O28_TQ1_17, "TQ1.17", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(ORB_O28_TQ2_18, "TQ2.18", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, ORB_O28_MSH_1);
  }
  MSA* getMSA_2(size_t index = 0) {
    return (MSA*)this->getObjectSafe(index, ORB_O28_MSA_2);
  }
  ERR* getERR_3(size_t index = 0) {
    return (ERR*)this->getObjectSafe(index, ORB_O28_ERR_3);
  }
  SFT* getSFT_4(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, ORB_O28_SFT_4);
  }
  UAC* getUAC_5(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, ORB_O28_UAC_5);
  }
  NTE* getNTE_6(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, ORB_O28_NTE_6);
  }
  PID* getPID_9(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, ORB_O28_PID_9);
  }
  PRT* getPRT_10(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, ORB_O28_PRT_10);
  }
  ARV* getARV_11(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, ORB_O28_ARV_11);
  }
  ORC* getORC_13(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, ORB_O28_ORC_13);
  }
  PRT* getPRT_14(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, ORB_O28_PRT_14);
  }
  BPO* getBPO_16(size_t index = 0) {
    return (BPO*)this->getObjectSafe(index, ORB_O28_BPO_16);
  }
  TQ1* getTQ1_17(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, ORB_O28_TQ1_17);
  }
  TQ2* getTQ2_18(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, ORB_O28_TQ2_18);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isMSA_2(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_MSA_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isERR_3(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_ERR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_4(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_SFT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_5(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_UAC_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_6(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_NTE_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_9(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_PID_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_10(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_PRT_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_11(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_ARV_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_13(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_ORC_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_14(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_PRT_14) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isBPO_16(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_BPO_16) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_17(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_TQ1_17) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_18(size_t index = 0) {
    try {
      return this->getObject(index, ORB_O28_TQ2_18) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* ORB_O28_ */
} /* namespace HL7_281 */
#endif /*  __ORB_O28__281_H__ */
