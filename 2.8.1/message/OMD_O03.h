/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:03:43 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __OMD_O03__281_H__
#define __OMD_O03__281_H__

#include "../../common/Util.h"
#include "../segment/AL1.h"
#include "../segment/ARV.h"
#include "../segment/GT1.h"
#include "../segment/IN1.h"
#include "../segment/IN2.h"
#include "../segment/IN3.h"
#include "../segment/MSH.h"
#include "../segment/NTE.h"
#include "../segment/OBX.h"
#include "../segment/ODS.h"
#include "../segment/ODT.h"
#include "../segment/ORC.h"
#include "../segment/PD1.h"
#include "../segment/PID.h"
#include "../segment/PRT.h"
#include "../segment/PV1.h"
#include "../segment/PV2.h"
#include "../segment/SFT.h"
#include "../segment/TQ1.h"
#include "../segment/TQ2.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct OMD_O03_PATIENT; /* PATIENT */
struct OMD_O03_ORDER_DIET; /* ORDER_DIET */
struct OMD_O03_ORDER_TRAY; /* ORDER_TRAY */
struct OMD_O03_TIMING_DIET; /* TIMING_DIET */
struct OMD_O03_DIET; /* DIET */
struct OMD_O03_OBSERVATION; /* OBSERVATION */
struct OMD_O03_TIMING_TRAY; /* TIMING_TRAY */
struct OMD_O03_PATIENT_VISIT; /* PATIENT_VISIT */
struct OMD_O03_INSURANCE; /* INSURANCE */

/* PATIENT */
struct OMD_O03_PATIENT : public HL7Group {
  OMD_O03_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OMD_O03_AL1_1,
    OMD_O03_ARV_2,
    OMD_O03_GT1_3,
    OMD_O03_NTE_4,
    OMD_O03_OMD_O03_INSURANCE_5,
    OMD_O03_OMD_O03_PATIENT_VISIT_6,
    OMD_O03_PD1_7,
    OMD_O03_PID_8,
    OMD_O03_PRT_9,
    FIELD_ID_MAX
  };

  const char* className() const { return "OMD_O03_PATIENT"; }
  OMD_O03_PATIENT* create() const { return new OMD_O03_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OMD_O03.PATIENT");
    addObject<AL1>(OMD_O03_AL1_1, "AL1.1", HL7::optional, HL7::repetition_on);
    addObject<ARV>(OMD_O03_ARV_2, "ARV.2", HL7::optional, HL7::repetition_on);
    addObject<GT1>(OMD_O03_GT1_3, "GT1.3", HL7::optional, HL7::repetition_on);
    addObject<NTE>(OMD_O03_NTE_4, "NTE.4", HL7::optional, HL7::repetition_on);
    addObject<OMD_O03_INSURANCE>(OMD_O03_OMD_O03_INSURANCE_5, "OMD_O03_INSURANCE.5", HL7::optional, HL7::repetition_on);
    addObject<OMD_O03_PATIENT_VISIT>(OMD_O03_OMD_O03_PATIENT_VISIT_6, "OMD_O03_PATIENT_VISIT.6", HL7::optional, HL7::repetition_on);
    addObject<PD1>(OMD_O03_PD1_7, "PD1.7", HL7::optional, HL7::repetition_on);
    addObject<PID>(OMD_O03_PID_8, "PID.8", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OMD_O03_PRT_9, "PRT.9", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AL1* getAL1_1(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, OMD_O03_AL1_1);
  }
  ARV* getARV_2(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OMD_O03_ARV_2);
  }
  GT1* getGT1_3(size_t index = 0) {
    return (GT1*)this->getObjectSafe(index, OMD_O03_GT1_3);
  }
  NTE* getNTE_4(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OMD_O03_NTE_4);
  }
  OMD_O03_INSURANCE* getOMD_O03_INSURANCE_5(size_t index = 0) {
    return (OMD_O03_INSURANCE*)this->getObjectSafe(index, OMD_O03_OMD_O03_INSURANCE_5);
  }
  OMD_O03_PATIENT_VISIT* getOMD_O03_PATIENT_VISIT_6(size_t index = 0) {
    return (OMD_O03_PATIENT_VISIT*)this->getObjectSafe(index, OMD_O03_OMD_O03_PATIENT_VISIT_6);
  }
  PD1* getPD1_7(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OMD_O03_PD1_7);
  }
  PID* getPID_8(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OMD_O03_PID_8);
  }
  PRT* getPRT_9(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OMD_O03_PRT_9);
  }

  /* Checker list */
  bool isAL1_1(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_AL1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_2(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_ARV_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isGT1_3(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_GT1_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_4(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_NTE_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOMD_O03_INSURANCE_5(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_OMD_O03_INSURANCE_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOMD_O03_PATIENT_VISIT_6(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_OMD_O03_PATIENT_VISIT_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_7(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PD1_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_8(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PID_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_9(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PRT_9) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OMD_O03_PATIENT */

/* ORDER_DIET */
struct OMD_O03_ORDER_DIET : public HL7Group {
  OMD_O03_ORDER_DIET() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OMD_O03_OMD_O03_DIET_1,
    OMD_O03_OMD_O03_TIMING_DIET_2,
    OMD_O03_ORC_3,
    OMD_O03_PRT_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "OMD_O03_ORDER_DIET"; }
  OMD_O03_ORDER_DIET* create() const { return new OMD_O03_ORDER_DIET(); }

 private:
  /* Initialize object */
  void init() {
    setName("OMD_O03.ORDER_DIET");
    addObject<OMD_O03_DIET>(OMD_O03_OMD_O03_DIET_1, "OMD_O03_DIET.1", HL7::optional, HL7::repetition_on);
    addObject<OMD_O03_TIMING_DIET>(OMD_O03_OMD_O03_TIMING_DIET_2, "OMD_O03_TIMING_DIET.2", HL7::optional, HL7::repetition_on);
    addObject<ORC>(OMD_O03_ORC_3, "ORC.3", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OMD_O03_PRT_4, "PRT.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OMD_O03_DIET* getOMD_O03_DIET_1(size_t index = 0) {
    return (OMD_O03_DIET*)this->getObjectSafe(index, OMD_O03_OMD_O03_DIET_1);
  }
  OMD_O03_TIMING_DIET* getOMD_O03_TIMING_DIET_2(size_t index = 0) {
    return (OMD_O03_TIMING_DIET*)this->getObjectSafe(index, OMD_O03_OMD_O03_TIMING_DIET_2);
  }
  ORC* getORC_3(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OMD_O03_ORC_3);
  }
  PRT* getPRT_4(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OMD_O03_PRT_4);
  }

  /* Checker list */
  bool isOMD_O03_DIET_1(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_OMD_O03_DIET_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOMD_O03_TIMING_DIET_2(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_OMD_O03_TIMING_DIET_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_3(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_ORC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_4(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PRT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OMD_O03_ORDER_DIET */

/* ORDER_TRAY */
struct OMD_O03_ORDER_TRAY : public HL7Group {
  OMD_O03_ORDER_TRAY() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OMD_O03_NTE_1,
    OMD_O03_ODT_2,
    OMD_O03_OMD_O03_TIMING_TRAY_3,
    OMD_O03_ORC_4,
    OMD_O03_PRT_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "OMD_O03_ORDER_TRAY"; }
  OMD_O03_ORDER_TRAY* create() const { return new OMD_O03_ORDER_TRAY(); }

 private:
  /* Initialize object */
  void init() {
    setName("OMD_O03.ORDER_TRAY");
    addObject<NTE>(OMD_O03_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<ODT>(OMD_O03_ODT_2, "ODT.2", HL7::optional, HL7::repetition_on);
    addObject<OMD_O03_TIMING_TRAY>(OMD_O03_OMD_O03_TIMING_TRAY_3, "OMD_O03_TIMING_TRAY.3", HL7::optional, HL7::repetition_on);
    addObject<ORC>(OMD_O03_ORC_4, "ORC.4", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OMD_O03_PRT_5, "PRT.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OMD_O03_NTE_1);
  }
  ODT* getODT_2(size_t index = 0) {
    return (ODT*)this->getObjectSafe(index, OMD_O03_ODT_2);
  }
  OMD_O03_TIMING_TRAY* getOMD_O03_TIMING_TRAY_3(size_t index = 0) {
    return (OMD_O03_TIMING_TRAY*)this->getObjectSafe(index, OMD_O03_OMD_O03_TIMING_TRAY_3);
  }
  ORC* getORC_4(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OMD_O03_ORC_4);
  }
  PRT* getPRT_5(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OMD_O03_PRT_5);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isODT_2(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_ODT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOMD_O03_TIMING_TRAY_3(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_OMD_O03_TIMING_TRAY_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_4(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_ORC_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_5(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PRT_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OMD_O03_ORDER_TRAY */

/* TIMING_DIET */
struct OMD_O03_TIMING_DIET : public HL7Group {
  OMD_O03_TIMING_DIET() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OMD_O03_TQ1_1,
    OMD_O03_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OMD_O03_TIMING_DIET"; }
  OMD_O03_TIMING_DIET* create() const { return new OMD_O03_TIMING_DIET(); }

 private:
  /* Initialize object */
  void init() {
    setName("OMD_O03.TIMING_DIET");
    addObject<TQ1>(OMD_O03_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(OMD_O03_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OMD_O03_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OMD_O03_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OMD_O03_TIMING_DIET */

/* DIET */
struct OMD_O03_DIET : public HL7Group {
  OMD_O03_DIET() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OMD_O03_NTE_1,
    OMD_O03_ODS_2,
    OMD_O03_OMD_O03_OBSERVATION_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OMD_O03_DIET"; }
  OMD_O03_DIET* create() const { return new OMD_O03_DIET(); }

 private:
  /* Initialize object */
  void init() {
    setName("OMD_O03.DIET");
    addObject<NTE>(OMD_O03_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<ODS>(OMD_O03_ODS_2, "ODS.2", HL7::optional, HL7::repetition_on);
    addObject<OMD_O03_OBSERVATION>(OMD_O03_OMD_O03_OBSERVATION_3, "OMD_O03_OBSERVATION.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OMD_O03_NTE_1);
  }
  ODS* getODS_2(size_t index = 0) {
    return (ODS*)this->getObjectSafe(index, OMD_O03_ODS_2);
  }
  OMD_O03_OBSERVATION* getOMD_O03_OBSERVATION_3(size_t index = 0) {
    return (OMD_O03_OBSERVATION*)this->getObjectSafe(index, OMD_O03_OMD_O03_OBSERVATION_3);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isODS_2(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_ODS_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOMD_O03_OBSERVATION_3(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_OMD_O03_OBSERVATION_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OMD_O03_DIET */

/* OBSERVATION */
struct OMD_O03_OBSERVATION : public HL7Group {
  OMD_O03_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OMD_O03_NTE_1,
    OMD_O03_OBX_2,
    OMD_O03_PRT_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OMD_O03_OBSERVATION"; }
  OMD_O03_OBSERVATION* create() const { return new OMD_O03_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OMD_O03.OBSERVATION");
    addObject<NTE>(OMD_O03_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(OMD_O03_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OMD_O03_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OMD_O03_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OMD_O03_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OMD_O03_PRT_3);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OMD_O03_OBSERVATION */

/* TIMING_TRAY */
struct OMD_O03_TIMING_TRAY : public HL7Group {
  OMD_O03_TIMING_TRAY() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OMD_O03_TQ1_1,
    OMD_O03_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OMD_O03_TIMING_TRAY"; }
  OMD_O03_TIMING_TRAY* create() const { return new OMD_O03_TIMING_TRAY(); }

 private:
  /* Initialize object */
  void init() {
    setName("OMD_O03.TIMING_TRAY");
    addObject<TQ1>(OMD_O03_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(OMD_O03_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OMD_O03_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OMD_O03_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OMD_O03_TIMING_TRAY */

/* PATIENT_VISIT */
struct OMD_O03_PATIENT_VISIT : public HL7Group {
  OMD_O03_PATIENT_VISIT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OMD_O03_PRT_1,
    OMD_O03_PV1_2,
    OMD_O03_PV2_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OMD_O03_PATIENT_VISIT"; }
  OMD_O03_PATIENT_VISIT* create() const { return new OMD_O03_PATIENT_VISIT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OMD_O03.PATIENT_VISIT");
    addObject<PRT>(OMD_O03_PRT_1, "PRT.1", HL7::optional, HL7::repetition_on);
    addObject<PV1>(OMD_O03_PV1_2, "PV1.2", HL7::optional, HL7::repetition_on);
    addObject<PV2>(OMD_O03_PV2_3, "PV2.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PRT* getPRT_1(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OMD_O03_PRT_1);
  }
  PV1* getPV1_2(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OMD_O03_PV1_2);
  }
  PV2* getPV2_3(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OMD_O03_PV2_3);
  }

  /* Checker list */
  bool isPRT_1(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PRT_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_2(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PV1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_3(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PV2_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OMD_O03_PATIENT_VISIT */

/* INSURANCE */
struct OMD_O03_INSURANCE : public HL7Group {
  OMD_O03_INSURANCE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OMD_O03_IN1_1,
    OMD_O03_IN2_2,
    OMD_O03_IN3_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OMD_O03_INSURANCE"; }
  OMD_O03_INSURANCE* create() const { return new OMD_O03_INSURANCE(); }

 private:
  /* Initialize object */
  void init() {
    setName("OMD_O03.INSURANCE");
    addObject<IN1>(OMD_O03_IN1_1, "IN1.1", HL7::optional, HL7::repetition_on);
    addObject<IN2>(OMD_O03_IN2_2, "IN2.2", HL7::optional, HL7::repetition_on);
    addObject<IN3>(OMD_O03_IN3_3, "IN3.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  IN1* getIN1_1(size_t index = 0) {
    return (IN1*)this->getObjectSafe(index, OMD_O03_IN1_1);
  }
  IN2* getIN2_2(size_t index = 0) {
    return (IN2*)this->getObjectSafe(index, OMD_O03_IN2_2);
  }
  IN3* getIN3_3(size_t index = 0) {
    return (IN3*)this->getObjectSafe(index, OMD_O03_IN3_3);
  }

  /* Checker list */
  bool isIN1_1(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_IN1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN2_2(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_IN2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN3_3(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_IN3_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OMD_O03_INSURANCE */

/* OMD_O03 */
struct OMD_O03 : public HL7Message {
  OMD_O03() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OMD_O03_MSH_1,
    OMD_O03_SFT_2,
    OMD_O03_UAC_3,
    OMD_O03_NTE_4,
    OMD_O03_ORC_8,
    OMD_O03_PRT_9,
    OMD_O03_TQ1_12,
    OMD_O03_TQ2_13,
    OMD_O03_TQ1_14,
    OMD_O03_TQ2_15,
    OMD_O03_ODS_16,
    OMD_O03_NTE_17,
    OMD_O03_OBX_19,
    OMD_O03_PRT_20,
    OMD_O03_NTE_21,
    OMD_O03_ORC_22,
    OMD_O03_PRT_23,
    OMD_O03_ODT_25,
    OMD_O03_NTE_26,
    OMD_O03_TQ1_27,
    OMD_O03_TQ2_28,
    OMD_O03_PID_29,
    OMD_O03_PD1_30,
    OMD_O03_PRT_31,
    OMD_O03_ARV_32,
    OMD_O03_NTE_33,
    OMD_O03_GT1_36,
    OMD_O03_AL1_37,
    OMD_O03_PV1_38,
    OMD_O03_PV2_39,
    OMD_O03_PRT_40,
    OMD_O03_PV1_41,
    OMD_O03_PV2_42,
    OMD_O03_PRT_43,
    OMD_O03_IN1_44,
    OMD_O03_IN2_45,
    OMD_O03_IN3_46,
    FIELD_ID_MAX
  };

  const char* className() const { return "OMD_O03"; }
  OMD_O03* create() const { return new OMD_O03(); }

 private:
  /* Initialize object */
  void init() {
    setName("OMD_O03");
    addObject<MSH>(OMD_O03_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(OMD_O03_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(OMD_O03_UAC_3, "UAC.3", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OMD_O03_NTE_4, "NTE.4", HL7::optional, HL7::repetition_on);
    addObject<ORC>(OMD_O03_ORC_8, "ORC.8", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OMD_O03_PRT_9, "PRT.9", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OMD_O03_TQ1_12, "TQ1.12", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OMD_O03_TQ2_13, "TQ2.13", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OMD_O03_TQ1_14, "TQ1.14", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OMD_O03_TQ2_15, "TQ2.15", HL7::optional, HL7::repetition_off);
    addObject<ODS>(OMD_O03_ODS_16, "ODS.16", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(OMD_O03_NTE_17, "NTE.17", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OMD_O03_OBX_19, "OBX.19", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OMD_O03_PRT_20, "PRT.20", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OMD_O03_NTE_21, "NTE.21", HL7::optional, HL7::repetition_off);
    addObject<ORC>(OMD_O03_ORC_22, "ORC.22", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OMD_O03_PRT_23, "PRT.23", HL7::optional, HL7::repetition_off);
    addObject<ODT>(OMD_O03_ODT_25, "ODT.25", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(OMD_O03_NTE_26, "NTE.26", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OMD_O03_TQ1_27, "TQ1.27", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OMD_O03_TQ2_28, "TQ2.28", HL7::optional, HL7::repetition_off);
    addObject<PID>(OMD_O03_PID_29, "PID.29", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OMD_O03_PD1_30, "PD1.30", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OMD_O03_PRT_31, "PRT.31", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OMD_O03_ARV_32, "ARV.32", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OMD_O03_NTE_33, "NTE.33", HL7::optional, HL7::repetition_off);
    addObject<GT1>(OMD_O03_GT1_36, "GT1.36", HL7::optional, HL7::repetition_off);
    addObject<AL1>(OMD_O03_AL1_37, "AL1.37", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OMD_O03_PV1_38, "PV1.38", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OMD_O03_PV2_39, "PV2.39", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OMD_O03_PRT_40, "PRT.40", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OMD_O03_PV1_41, "PV1.41", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OMD_O03_PV2_42, "PV2.42", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OMD_O03_PRT_43, "PRT.43", HL7::optional, HL7::repetition_off);
    addObject<IN1>(OMD_O03_IN1_44, "IN1.44", HL7::initialized, HL7::repetition_off);
    addObject<IN2>(OMD_O03_IN2_45, "IN2.45", HL7::optional, HL7::repetition_off);
    addObject<IN3>(OMD_O03_IN3_46, "IN3.46", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, OMD_O03_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, OMD_O03_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, OMD_O03_UAC_3);
  }
  NTE* getNTE_4(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OMD_O03_NTE_4);
  }
  ORC* getORC_8(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OMD_O03_ORC_8);
  }
  PRT* getPRT_9(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OMD_O03_PRT_9);
  }
  TQ1* getTQ1_12(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OMD_O03_TQ1_12);
  }
  TQ2* getTQ2_13(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OMD_O03_TQ2_13);
  }
  TQ1* getTQ1_14(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OMD_O03_TQ1_14);
  }
  TQ2* getTQ2_15(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OMD_O03_TQ2_15);
  }
  ODS* getODS_16(size_t index = 0) {
    return (ODS*)this->getObjectSafe(index, OMD_O03_ODS_16);
  }
  NTE* getNTE_17(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OMD_O03_NTE_17);
  }
  OBX* getOBX_19(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OMD_O03_OBX_19);
  }
  PRT* getPRT_20(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OMD_O03_PRT_20);
  }
  NTE* getNTE_21(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OMD_O03_NTE_21);
  }
  ORC* getORC_22(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OMD_O03_ORC_22);
  }
  PRT* getPRT_23(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OMD_O03_PRT_23);
  }
  ODT* getODT_25(size_t index = 0) {
    return (ODT*)this->getObjectSafe(index, OMD_O03_ODT_25);
  }
  NTE* getNTE_26(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OMD_O03_NTE_26);
  }
  TQ1* getTQ1_27(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OMD_O03_TQ1_27);
  }
  TQ2* getTQ2_28(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OMD_O03_TQ2_28);
  }
  PID* getPID_29(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OMD_O03_PID_29);
  }
  PD1* getPD1_30(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OMD_O03_PD1_30);
  }
  PRT* getPRT_31(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OMD_O03_PRT_31);
  }
  ARV* getARV_32(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OMD_O03_ARV_32);
  }
  NTE* getNTE_33(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OMD_O03_NTE_33);
  }
  GT1* getGT1_36(size_t index = 0) {
    return (GT1*)this->getObjectSafe(index, OMD_O03_GT1_36);
  }
  AL1* getAL1_37(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, OMD_O03_AL1_37);
  }
  PV1* getPV1_38(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OMD_O03_PV1_38);
  }
  PV2* getPV2_39(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OMD_O03_PV2_39);
  }
  PRT* getPRT_40(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OMD_O03_PRT_40);
  }
  PV1* getPV1_41(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OMD_O03_PV1_41);
  }
  PV2* getPV2_42(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OMD_O03_PV2_42);
  }
  PRT* getPRT_43(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OMD_O03_PRT_43);
  }
  IN1* getIN1_44(size_t index = 0) {
    return (IN1*)this->getObjectSafe(index, OMD_O03_IN1_44);
  }
  IN2* getIN2_45(size_t index = 0) {
    return (IN2*)this->getObjectSafe(index, OMD_O03_IN2_45);
  }
  IN3* getIN3_46(size_t index = 0) {
    return (IN3*)this->getObjectSafe(index, OMD_O03_IN3_46);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_4(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_NTE_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_8(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_ORC_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_9(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PRT_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_12(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_TQ1_12) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_13(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_TQ2_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_14(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_TQ1_14) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_15(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_TQ2_15) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isODS_16(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_ODS_16) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_17(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_NTE_17) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_19(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_OBX_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_20(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PRT_20) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_21(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_NTE_21) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_22(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_ORC_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_23(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PRT_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isODT_25(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_ODT_25) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_26(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_NTE_26) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_27(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_TQ1_27) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_28(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_TQ2_28) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_29(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PID_29) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_30(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PD1_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_31(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PRT_31) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_32(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_ARV_32) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_33(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_NTE_33) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isGT1_36(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_GT1_36) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_37(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_AL1_37) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_38(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PV1_38) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_39(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PV2_39) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_40(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PRT_40) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_41(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PV1_41) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_42(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PV2_42) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_43(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_PRT_43) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN1_44(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_IN1_44) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN2_45(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_IN2_45) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN3_46(size_t index = 0) {
    try {
      return this->getObject(index, OMD_O03_IN3_46) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OMD_O03_ */
} /* namespace HL7_281 */
#endif /*  __OMD_O03__281_H__ */
