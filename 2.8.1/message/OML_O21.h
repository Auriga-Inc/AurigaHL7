/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:03:59 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __OML_O21__281_H__
#define __OML_O21__281_H__

#include "../../common/Util.h"
#include "../segment/AL1.h"
#include "../segment/ARV.h"
#include "../segment/BLG.h"
#include "../segment/CTD.h"
#include "../segment/CTI.h"
#include "../segment/DG1.h"
#include "../segment/FT1.h"
#include "../segment/GT1.h"
#include "../segment/IN1.h"
#include "../segment/IN2.h"
#include "../segment/IN3.h"
#include "../segment/MSH.h"
#include "../segment/NK1.h"
#include "../segment/NTE.h"
#include "../segment/OBR.h"
#include "../segment/OBX.h"
#include "../segment/ORC.h"
#include "../segment/PD1.h"
#include "../segment/PID.h"
#include "../segment/PRT.h"
#include "../segment/PV1.h"
#include "../segment/PV2.h"
#include "../segment/SAC.h"
#include "../segment/SFT.h"
#include "../segment/SPM.h"
#include "../segment/TCD.h"
#include "../segment/TQ1.h"
#include "../segment/TQ2.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct OML_O21_PATIENT; /* PATIENT */
struct OML_O21_ORDER; /* ORDER */
struct OML_O21_TIMING; /* TIMING */
struct OML_O21_OBSERVATION_REQUEST; /* OBSERVATION_REQUEST */
struct OML_O21_OBSERVATION; /* OBSERVATION */
struct OML_O21_SPECIMEN; /* SPECIMEN */
struct OML_O21_PRIOR_RESULT; /* PRIOR_RESULT */
struct OML_O21_SPECIMEN_OBSERVATION; /* SPECIMEN_OBSERVATION */
struct OML_O21_CONTAINER; /* CONTAINER */
struct OML_O21_CONTAINER_OBSERVATION; /* CONTAINER_OBSERVATION */
struct OML_O21_SPECIMEN_OBSERVATION; /* SPECIMEN_OBSERVATION */
struct OML_O21_CONTAINER; /* CONTAINER */
struct OML_O21_PATIENT_PRIOR; /* PATIENT_PRIOR */
struct OML_O21_PATIENT_VISIT_PRIOR; /* PATIENT_VISIT_PRIOR */
struct OML_O21_ORDER_PRIOR; /* ORDER_PRIOR */
struct OML_O21_CONTAINER_OBSERVATION; /* CONTAINER_OBSERVATION */
struct OML_O21_CONTAINER_OBSERVATION; /* CONTAINER_OBSERVATION */
struct OML_O21_CONTAINER_OBSERVATION; /* CONTAINER_OBSERVATION */
struct OML_O21_CONTAINER_OBSERVATION; /* CONTAINER_OBSERVATION */
struct OML_O21_TIMING_PRIOR; /* TIMING_PRIOR */
struct OML_O21_OBSERVATION_PRIOR; /* OBSERVATION_PRIOR */
struct OML_O21_PATIENT_VISIT; /* PATIENT_VISIT */
struct OML_O21_INSURANCE; /* INSURANCE */

/* PATIENT */
struct OML_O21_PATIENT : public HL7Group {
  OML_O21_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_AL1_1,
    OML_O21_ARV_2,
    OML_O21_GT1_3,
    OML_O21_NK1_4,
    OML_O21_NTE_5,
    OML_O21_OML_O21_INSURANCE_6,
    OML_O21_OML_O21_PATIENT_VISIT_7,
    OML_O21_PD1_8,
    OML_O21_PID_9,
    OML_O21_PRT_10,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_PATIENT"; }
  OML_O21_PATIENT* create() const { return new OML_O21_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.PATIENT");
    addObject<AL1>(OML_O21_AL1_1, "AL1.1", HL7::optional, HL7::repetition_on);
    addObject<ARV>(OML_O21_ARV_2, "ARV.2", HL7::optional, HL7::repetition_on);
    addObject<GT1>(OML_O21_GT1_3, "GT1.3", HL7::optional, HL7::repetition_on);
    addObject<NK1>(OML_O21_NK1_4, "NK1.4", HL7::optional, HL7::repetition_on);
    addObject<NTE>(OML_O21_NTE_5, "NTE.5", HL7::optional, HL7::repetition_on);
    addObject<OML_O21_INSURANCE>(OML_O21_OML_O21_INSURANCE_6, "OML_O21_INSURANCE.6", HL7::optional, HL7::repetition_on);
    addObject<OML_O21_PATIENT_VISIT>(OML_O21_OML_O21_PATIENT_VISIT_7, "OML_O21_PATIENT_VISIT.7", HL7::optional, HL7::repetition_on);
    addObject<PD1>(OML_O21_PD1_8, "PD1.8", HL7::optional, HL7::repetition_on);
    addObject<PID>(OML_O21_PID_9, "PID.9", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O21_PRT_10, "PRT.10", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AL1* getAL1_1(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, OML_O21_AL1_1);
  }
  ARV* getARV_2(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O21_ARV_2);
  }
  GT1* getGT1_3(size_t index = 0) {
    return (GT1*)this->getObjectSafe(index, OML_O21_GT1_3);
  }
  NK1* getNK1_4(size_t index = 0) {
    return (NK1*)this->getObjectSafe(index, OML_O21_NK1_4);
  }
  NTE* getNTE_5(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O21_NTE_5);
  }
  OML_O21_INSURANCE* getOML_O21_INSURANCE_6(size_t index = 0) {
    return (OML_O21_INSURANCE*)this->getObjectSafe(index, OML_O21_OML_O21_INSURANCE_6);
  }
  OML_O21_PATIENT_VISIT* getOML_O21_PATIENT_VISIT_7(size_t index = 0) {
    return (OML_O21_PATIENT_VISIT*)this->getObjectSafe(index, OML_O21_OML_O21_PATIENT_VISIT_7);
  }
  PD1* getPD1_8(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O21_PD1_8);
  }
  PID* getPID_9(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O21_PID_9);
  }
  PRT* getPRT_10(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_10);
  }

  /* Checker list */
  bool isAL1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_AL1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_ARV_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isGT1_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_GT1_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNK1_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NK1_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_5(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NTE_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O21_INSURANCE_6(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_INSURANCE_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O21_PATIENT_VISIT_7(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_PATIENT_VISIT_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_8(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PD1_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_9(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PID_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_10(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_10) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_PATIENT */

/* ORDER */
struct OML_O21_ORDER : public HL7Group {
  OML_O21_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_BLG_1,
    OML_O21_CTI_2,
    OML_O21_FT1_3,
    OML_O21_OML_O21_OBSERVATION_REQUEST_4,
    OML_O21_OML_O21_TIMING_5,
    OML_O21_ORC_6,
    OML_O21_PRT_7,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_ORDER"; }
  OML_O21_ORDER* create() const { return new OML_O21_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.ORDER");
    addObject<BLG>(OML_O21_BLG_1, "BLG.1", HL7::optional, HL7::repetition_on);
    addObject<CTI>(OML_O21_CTI_2, "CTI.2", HL7::optional, HL7::repetition_on);
    addObject<FT1>(OML_O21_FT1_3, "FT1.3", HL7::optional, HL7::repetition_on);
    addObject<OML_O21_OBSERVATION_REQUEST>(OML_O21_OML_O21_OBSERVATION_REQUEST_4, "OML_O21_OBSERVATION_REQUEST.4", HL7::optional, HL7::repetition_on);
    addObject<OML_O21_TIMING>(OML_O21_OML_O21_TIMING_5, "OML_O21_TIMING.5", HL7::optional, HL7::repetition_on);
    addObject<ORC>(OML_O21_ORC_6, "ORC.6", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O21_PRT_7, "PRT.7", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  BLG* getBLG_1(size_t index = 0) {
    return (BLG*)this->getObjectSafe(index, OML_O21_BLG_1);
  }
  CTI* getCTI_2(size_t index = 0) {
    return (CTI*)this->getObjectSafe(index, OML_O21_CTI_2);
  }
  FT1* getFT1_3(size_t index = 0) {
    return (FT1*)this->getObjectSafe(index, OML_O21_FT1_3);
  }
  OML_O21_OBSERVATION_REQUEST* getOML_O21_OBSERVATION_REQUEST_4(size_t index = 0) {
    return (OML_O21_OBSERVATION_REQUEST*)this->getObjectSafe(index, OML_O21_OML_O21_OBSERVATION_REQUEST_4);
  }
  OML_O21_TIMING* getOML_O21_TIMING_5(size_t index = 0) {
    return (OML_O21_TIMING*)this->getObjectSafe(index, OML_O21_OML_O21_TIMING_5);
  }
  ORC* getORC_6(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OML_O21_ORC_6);
  }
  PRT* getPRT_7(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_7);
  }

  /* Checker list */
  bool isBLG_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_BLG_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCTI_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_CTI_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isFT1_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_FT1_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O21_OBSERVATION_REQUEST_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_OBSERVATION_REQUEST_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O21_TIMING_5(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_TIMING_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_6(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_ORC_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_7(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_7) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_ORDER */

/* TIMING */
struct OML_O21_TIMING : public HL7Group {
  OML_O21_TIMING() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_TQ1_1,
    OML_O21_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_TIMING"; }
  OML_O21_TIMING* create() const { return new OML_O21_TIMING(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.TIMING");
    addObject<TQ1>(OML_O21_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(OML_O21_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O21_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O21_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_TIMING */

/* OBSERVATION_REQUEST */
struct OML_O21_OBSERVATION_REQUEST : public HL7Group {
  OML_O21_OBSERVATION_REQUEST() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_CTD_1,
    OML_O21_DG1_2,
    OML_O21_NTE_3,
    OML_O21_OBR_4,
    OML_O21_OML_O21_OBSERVATION_5,
    OML_O21_OML_O21_PRIOR_RESULT_6,
    OML_O21_OML_O21_SPECIMEN_7,
    OML_O21_PRT_8,
    OML_O21_TCD_9,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_OBSERVATION_REQUEST"; }
  OML_O21_OBSERVATION_REQUEST* create() const { return new OML_O21_OBSERVATION_REQUEST(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.OBSERVATION_REQUEST");
    addObject<CTD>(OML_O21_CTD_1, "CTD.1", HL7::optional, HL7::repetition_on);
    addObject<DG1>(OML_O21_DG1_2, "DG1.2", HL7::optional, HL7::repetition_on);
    addObject<NTE>(OML_O21_NTE_3, "NTE.3", HL7::optional, HL7::repetition_on);
    addObject<OBR>(OML_O21_OBR_4, "OBR.4", HL7::optional, HL7::repetition_on);
    addObject<OML_O21_OBSERVATION>(OML_O21_OML_O21_OBSERVATION_5, "OML_O21_OBSERVATION.5", HL7::optional, HL7::repetition_on);
    addObject<OML_O21_PRIOR_RESULT>(OML_O21_OML_O21_PRIOR_RESULT_6, "OML_O21_PRIOR_RESULT.6", HL7::optional, HL7::repetition_on);
    addObject<OML_O21_SPECIMEN>(OML_O21_OML_O21_SPECIMEN_7, "OML_O21_SPECIMEN.7", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O21_PRT_8, "PRT.8", HL7::optional, HL7::repetition_on);
    addObject<TCD>(OML_O21_TCD_9, "TCD.9", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  CTD* getCTD_1(size_t index = 0) {
    return (CTD*)this->getObjectSafe(index, OML_O21_CTD_1);
  }
  DG1* getDG1_2(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, OML_O21_DG1_2);
  }
  NTE* getNTE_3(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O21_NTE_3);
  }
  OBR* getOBR_4(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OML_O21_OBR_4);
  }
  OML_O21_OBSERVATION* getOML_O21_OBSERVATION_5(size_t index = 0) {
    return (OML_O21_OBSERVATION*)this->getObjectSafe(index, OML_O21_OML_O21_OBSERVATION_5);
  }
  OML_O21_PRIOR_RESULT* getOML_O21_PRIOR_RESULT_6(size_t index = 0) {
    return (OML_O21_PRIOR_RESULT*)this->getObjectSafe(index, OML_O21_OML_O21_PRIOR_RESULT_6);
  }
  OML_O21_SPECIMEN* getOML_O21_SPECIMEN_7(size_t index = 0) {
    return (OML_O21_SPECIMEN*)this->getObjectSafe(index, OML_O21_OML_O21_SPECIMEN_7);
  }
  PRT* getPRT_8(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_8);
  }
  TCD* getTCD_9(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O21_TCD_9);
  }

  /* Checker list */
  bool isCTD_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_CTD_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDG1_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_DG1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NTE_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBR_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O21_OBSERVATION_5(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_OBSERVATION_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O21_PRIOR_RESULT_6(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_PRIOR_RESULT_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O21_SPECIMEN_7(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_SPECIMEN_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_8(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_9(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TCD_9) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_OBSERVATION_REQUEST */

/* OBSERVATION */
struct OML_O21_OBSERVATION : public HL7Group {
  OML_O21_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_NTE_1,
    OML_O21_OBX_2,
    OML_O21_PRT_3,
    OML_O21_TCD_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_OBSERVATION"; }
  OML_O21_OBSERVATION* create() const { return new OML_O21_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.OBSERVATION");
    addObject<NTE>(OML_O21_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(OML_O21_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O21_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
    addObject<TCD>(OML_O21_TCD_4, "TCD.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O21_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_3);
  }
  TCD* getTCD_4(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O21_TCD_4);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TCD_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_OBSERVATION */

/* SPECIMEN */
struct OML_O21_SPECIMEN : public HL7Group {
  OML_O21_SPECIMEN() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_OML_O21_CONTAINER_1,
    OML_O21_OML_O21_SPECIMEN_OBSERVATION_2,
    OML_O21_SPM_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_SPECIMEN"; }
  OML_O21_SPECIMEN* create() const { return new OML_O21_SPECIMEN(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.SPECIMEN");
    addObject<OML_O21_CONTAINER>(OML_O21_OML_O21_CONTAINER_1, "OML_O21_CONTAINER.1", HL7::optional, HL7::repetition_on);
    addObject<OML_O21_SPECIMEN_OBSERVATION>(OML_O21_OML_O21_SPECIMEN_OBSERVATION_2, "OML_O21_SPECIMEN_OBSERVATION.2", HL7::optional, HL7::repetition_on);
    addObject<SPM>(OML_O21_SPM_3, "SPM.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OML_O21_CONTAINER* getOML_O21_CONTAINER_1(size_t index = 0) {
    return (OML_O21_CONTAINER*)this->getObjectSafe(index, OML_O21_OML_O21_CONTAINER_1);
  }
  OML_O21_SPECIMEN_OBSERVATION* getOML_O21_SPECIMEN_OBSERVATION_2(size_t index = 0) {
    return (OML_O21_SPECIMEN_OBSERVATION*)this->getObjectSafe(index, OML_O21_OML_O21_SPECIMEN_OBSERVATION_2);
  }
  SPM* getSPM_3(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OML_O21_SPM_3);
  }

  /* Checker list */
  bool isOML_O21_CONTAINER_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_CONTAINER_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O21_SPECIMEN_OBSERVATION_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_SPECIMEN_OBSERVATION_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_SPM_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_SPECIMEN */

/* PRIOR_RESULT */
struct OML_O21_PRIOR_RESULT : public HL7Group {
  OML_O21_PRIOR_RESULT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_AL1_1,
    OML_O21_OML_O21_ORDER_PRIOR_2,
    OML_O21_OML_O21_PATIENT_PRIOR_3,
    OML_O21_OML_O21_PATIENT_VISIT_PRIOR_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_PRIOR_RESULT"; }
  OML_O21_PRIOR_RESULT* create() const { return new OML_O21_PRIOR_RESULT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.PRIOR_RESULT");
    addObject<AL1>(OML_O21_AL1_1, "AL1.1", HL7::optional, HL7::repetition_on);
    addObject<OML_O21_ORDER_PRIOR>(OML_O21_OML_O21_ORDER_PRIOR_2, "OML_O21_ORDER_PRIOR.2", HL7::optional, HL7::repetition_on);
    addObject<OML_O21_PATIENT_PRIOR>(OML_O21_OML_O21_PATIENT_PRIOR_3, "OML_O21_PATIENT_PRIOR.3", HL7::optional, HL7::repetition_on);
    addObject<OML_O21_PATIENT_VISIT_PRIOR>(OML_O21_OML_O21_PATIENT_VISIT_PRIOR_4, "OML_O21_PATIENT_VISIT_PRIOR.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AL1* getAL1_1(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, OML_O21_AL1_1);
  }
  OML_O21_ORDER_PRIOR* getOML_O21_ORDER_PRIOR_2(size_t index = 0) {
    return (OML_O21_ORDER_PRIOR*)this->getObjectSafe(index, OML_O21_OML_O21_ORDER_PRIOR_2);
  }
  OML_O21_PATIENT_PRIOR* getOML_O21_PATIENT_PRIOR_3(size_t index = 0) {
    return (OML_O21_PATIENT_PRIOR*)this->getObjectSafe(index, OML_O21_OML_O21_PATIENT_PRIOR_3);
  }
  OML_O21_PATIENT_VISIT_PRIOR* getOML_O21_PATIENT_VISIT_PRIOR_4(size_t index = 0) {
    return (OML_O21_PATIENT_VISIT_PRIOR*)this->getObjectSafe(index, OML_O21_OML_O21_PATIENT_VISIT_PRIOR_4);
  }

  /* Checker list */
  bool isAL1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_AL1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O21_ORDER_PRIOR_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_ORDER_PRIOR_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O21_PATIENT_PRIOR_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_PATIENT_PRIOR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O21_PATIENT_VISIT_PRIOR_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_PATIENT_VISIT_PRIOR_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_PRIOR_RESULT */

/* SPECIMEN_OBSERVATION */
struct OML_O21_SPECIMEN_OBSERVATION : public HL7Group {
  OML_O21_SPECIMEN_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_OBX_1,
    OML_O21_PRT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_SPECIMEN_OBSERVATION"; }
  OML_O21_SPECIMEN_OBSERVATION* create() const { return new OML_O21_SPECIMEN_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.SPECIMEN_OBSERVATION");
    addObject<OBX>(OML_O21_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O21_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_2);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_SPECIMEN_OBSERVATION */

/* CONTAINER */
struct OML_O21_CONTAINER : public HL7Group {
  OML_O21_CONTAINER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_OML_O21_CONTAINER_OBSERVATION_1,
    OML_O21_SAC_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_CONTAINER"; }
  OML_O21_CONTAINER* create() const { return new OML_O21_CONTAINER(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.CONTAINER");
    addObject<OML_O21_CONTAINER_OBSERVATION>(OML_O21_OML_O21_CONTAINER_OBSERVATION_1, "OML_O21_CONTAINER_OBSERVATION.1", HL7::optional, HL7::repetition_on);
    addObject<SAC>(OML_O21_SAC_2, "SAC.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OML_O21_CONTAINER_OBSERVATION* getOML_O21_CONTAINER_OBSERVATION_1(size_t index = 0) {
    return (OML_O21_CONTAINER_OBSERVATION*)this->getObjectSafe(index, OML_O21_OML_O21_CONTAINER_OBSERVATION_1);
  }
  SAC* getSAC_2(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OML_O21_SAC_2);
  }

  /* Checker list */
  bool isOML_O21_CONTAINER_OBSERVATION_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_CONTAINER_OBSERVATION_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_SAC_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_CONTAINER */

/* CONTAINER_OBSERVATION */
struct OML_O21_CONTAINER_OBSERVATION : public HL7Group {
  OML_O21_CONTAINER_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_OBX_1,
    OML_O21_PRT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_CONTAINER_OBSERVATION"; }
  OML_O21_CONTAINER_OBSERVATION* create() const { return new OML_O21_CONTAINER_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.CONTAINER_OBSERVATION");
    addObject<OBX>(OML_O21_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O21_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_2);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_CONTAINER_OBSERVATION */

/* PATIENT_PRIOR */
struct OML_O21_PATIENT_PRIOR : public HL7Group {
  OML_O21_PATIENT_PRIOR() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_ARV_1,
    OML_O21_PD1_2,
    OML_O21_PID_3,
    OML_O21_PRT_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_PATIENT_PRIOR"; }
  OML_O21_PATIENT_PRIOR* create() const { return new OML_O21_PATIENT_PRIOR(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.PATIENT_PRIOR");
    addObject<ARV>(OML_O21_ARV_1, "ARV.1", HL7::optional, HL7::repetition_on);
    addObject<PD1>(OML_O21_PD1_2, "PD1.2", HL7::optional, HL7::repetition_on);
    addObject<PID>(OML_O21_PID_3, "PID.3", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O21_PRT_4, "PRT.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ARV* getARV_1(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O21_ARV_1);
  }
  PD1* getPD1_2(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O21_PD1_2);
  }
  PID* getPID_3(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O21_PID_3);
  }
  PRT* getPRT_4(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_4);
  }

  /* Checker list */
  bool isARV_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_ARV_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PD1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PID_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_PATIENT_PRIOR */

/* PATIENT_VISIT_PRIOR */
struct OML_O21_PATIENT_VISIT_PRIOR : public HL7Group {
  OML_O21_PATIENT_VISIT_PRIOR() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_PRT_1,
    OML_O21_PV1_2,
    OML_O21_PV2_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_PATIENT_VISIT_PRIOR"; }
  OML_O21_PATIENT_VISIT_PRIOR* create() const { return new OML_O21_PATIENT_VISIT_PRIOR(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.PATIENT_VISIT_PRIOR");
    addObject<PRT>(OML_O21_PRT_1, "PRT.1", HL7::optional, HL7::repetition_on);
    addObject<PV1>(OML_O21_PV1_2, "PV1.2", HL7::optional, HL7::repetition_on);
    addObject<PV2>(OML_O21_PV2_3, "PV2.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PRT* getPRT_1(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_1);
  }
  PV1* getPV1_2(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O21_PV1_2);
  }
  PV2* getPV2_3(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O21_PV2_3);
  }

  /* Checker list */
  bool isPRT_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PV1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PV2_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_PATIENT_VISIT_PRIOR */

/* ORDER_PRIOR */
struct OML_O21_ORDER_PRIOR : public HL7Group {
  OML_O21_ORDER_PRIOR() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_NTE_1,
    OML_O21_OBR_2,
    OML_O21_OML_O21_OBSERVATION_PRIOR_3,
    OML_O21_OML_O21_TIMING_PRIOR_4,
    OML_O21_ORC_5,
    OML_O21_PRT_6,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_ORDER_PRIOR"; }
  OML_O21_ORDER_PRIOR* create() const { return new OML_O21_ORDER_PRIOR(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.ORDER_PRIOR");
    addObject<NTE>(OML_O21_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBR>(OML_O21_OBR_2, "OBR.2", HL7::optional, HL7::repetition_on);
    addObject<OML_O21_OBSERVATION_PRIOR>(OML_O21_OML_O21_OBSERVATION_PRIOR_3, "OML_O21_OBSERVATION_PRIOR.3", HL7::optional, HL7::repetition_on);
    addObject<OML_O21_TIMING_PRIOR>(OML_O21_OML_O21_TIMING_PRIOR_4, "OML_O21_TIMING_PRIOR.4", HL7::optional, HL7::repetition_on);
    addObject<ORC>(OML_O21_ORC_5, "ORC.5", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O21_PRT_6, "PRT.6", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O21_NTE_1);
  }
  OBR* getOBR_2(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OML_O21_OBR_2);
  }
  OML_O21_OBSERVATION_PRIOR* getOML_O21_OBSERVATION_PRIOR_3(size_t index = 0) {
    return (OML_O21_OBSERVATION_PRIOR*)this->getObjectSafe(index, OML_O21_OML_O21_OBSERVATION_PRIOR_3);
  }
  OML_O21_TIMING_PRIOR* getOML_O21_TIMING_PRIOR_4(size_t index = 0) {
    return (OML_O21_TIMING_PRIOR*)this->getObjectSafe(index, OML_O21_OML_O21_TIMING_PRIOR_4);
  }
  ORC* getORC_5(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OML_O21_ORC_5);
  }
  PRT* getPRT_6(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_6);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBR_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O21_OBSERVATION_PRIOR_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_OBSERVATION_PRIOR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOML_O21_TIMING_PRIOR_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OML_O21_TIMING_PRIOR_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_5(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_ORC_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_6(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_6) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_ORDER_PRIOR */

/* TIMING_PRIOR */
struct OML_O21_TIMING_PRIOR : public HL7Group {
  OML_O21_TIMING_PRIOR() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_TQ1_1,
    OML_O21_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_TIMING_PRIOR"; }
  OML_O21_TIMING_PRIOR* create() const { return new OML_O21_TIMING_PRIOR(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.TIMING_PRIOR");
    addObject<TQ1>(OML_O21_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(OML_O21_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O21_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O21_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_TIMING_PRIOR */

/* OBSERVATION_PRIOR */
struct OML_O21_OBSERVATION_PRIOR : public HL7Group {
  OML_O21_OBSERVATION_PRIOR() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_NTE_1,
    OML_O21_OBX_2,
    OML_O21_PRT_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_OBSERVATION_PRIOR"; }
  OML_O21_OBSERVATION_PRIOR* create() const { return new OML_O21_OBSERVATION_PRIOR(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.OBSERVATION_PRIOR");
    addObject<NTE>(OML_O21_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(OML_O21_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OML_O21_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O21_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_3);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_OBSERVATION_PRIOR */

/* PATIENT_VISIT */
struct OML_O21_PATIENT_VISIT : public HL7Group {
  OML_O21_PATIENT_VISIT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_PRT_1,
    OML_O21_PV1_2,
    OML_O21_PV2_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_PATIENT_VISIT"; }
  OML_O21_PATIENT_VISIT* create() const { return new OML_O21_PATIENT_VISIT(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.PATIENT_VISIT");
    addObject<PRT>(OML_O21_PRT_1, "PRT.1", HL7::optional, HL7::repetition_on);
    addObject<PV1>(OML_O21_PV1_2, "PV1.2", HL7::optional, HL7::repetition_on);
    addObject<PV2>(OML_O21_PV2_3, "PV2.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PRT* getPRT_1(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_1);
  }
  PV1* getPV1_2(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O21_PV1_2);
  }
  PV2* getPV2_3(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O21_PV2_3);
  }

  /* Checker list */
  bool isPRT_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PV1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PV2_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_PATIENT_VISIT */

/* INSURANCE */
struct OML_O21_INSURANCE : public HL7Group {
  OML_O21_INSURANCE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_IN1_1,
    OML_O21_IN2_2,
    OML_O21_IN3_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21_INSURANCE"; }
  OML_O21_INSURANCE* create() const { return new OML_O21_INSURANCE(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21.INSURANCE");
    addObject<IN1>(OML_O21_IN1_1, "IN1.1", HL7::optional, HL7::repetition_on);
    addObject<IN2>(OML_O21_IN2_2, "IN2.2", HL7::optional, HL7::repetition_on);
    addObject<IN3>(OML_O21_IN3_3, "IN3.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  IN1* getIN1_1(size_t index = 0) {
    return (IN1*)this->getObjectSafe(index, OML_O21_IN1_1);
  }
  IN2* getIN2_2(size_t index = 0) {
    return (IN2*)this->getObjectSafe(index, OML_O21_IN2_2);
  }
  IN3* getIN3_3(size_t index = 0) {
    return (IN3*)this->getObjectSafe(index, OML_O21_IN3_3);
  }

  /* Checker list */
  bool isIN1_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_IN1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN2_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_IN2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN3_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_IN3_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_INSURANCE */

/* OML_O21 */
struct OML_O21 : public HL7Message {
  OML_O21() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OML_O21_MSH_1,
    OML_O21_SFT_2,
    OML_O21_UAC_3,
    OML_O21_NTE_4,
    OML_O21_ORC_7,
    OML_O21_PRT_8,
    OML_O21_FT1_11,
    OML_O21_CTI_12,
    OML_O21_BLG_13,
    OML_O21_TQ1_14,
    OML_O21_TQ2_15,
    OML_O21_TQ1_16,
    OML_O21_TQ2_17,
    OML_O21_OBR_18,
    OML_O21_TCD_19,
    OML_O21_NTE_20,
    OML_O21_PRT_21,
    OML_O21_CTD_22,
    OML_O21_DG1_23,
    OML_O21_OBX_27,
    OML_O21_PRT_28,
    OML_O21_TCD_29,
    OML_O21_NTE_30,
    OML_O21_OBX_31,
    OML_O21_PRT_32,
    OML_O21_TCD_33,
    OML_O21_NTE_34,
    OML_O21_SPM_35,
    OML_O21_OBX_38,
    OML_O21_PRT_39,
    OML_O21_OBX_40,
    OML_O21_PRT_41,
    OML_O21_SAC_42,
    OML_O21_OBX_44,
    OML_O21_PRT_45,
    OML_O21_OBX_46,
    OML_O21_PRT_47,
    OML_O21_TCD_48,
    OML_O21_NTE_49,
    OML_O21_SPM_50,
    OML_O21_AL1_55,
    OML_O21_OBX_57,
    OML_O21_PRT_58,
    OML_O21_OBX_59,
    OML_O21_PRT_60,
    OML_O21_SAC_61,
    OML_O21_OBX_63,
    OML_O21_PRT_64,
    OML_O21_OBX_65,
    OML_O21_PRT_66,
    OML_O21_SAC_67,
    OML_O21_PID_69,
    OML_O21_PD1_70,
    OML_O21_PRT_71,
    OML_O21_ARV_72,
    OML_O21_OBX_73,
    OML_O21_PRT_74,
    OML_O21_OBX_75,
    OML_O21_PRT_76,
    OML_O21_SAC_77,
    OML_O21_PID_79,
    OML_O21_PD1_80,
    OML_O21_PRT_81,
    OML_O21_ARV_82,
    OML_O21_PV1_83,
    OML_O21_PV2_84,
    OML_O21_PRT_85,
    OML_O21_OBX_86,
    OML_O21_PRT_87,
    OML_O21_OBX_88,
    OML_O21_PRT_89,
    OML_O21_SAC_90,
    OML_O21_PID_92,
    OML_O21_PD1_93,
    OML_O21_PRT_94,
    OML_O21_ARV_95,
    OML_O21_PV1_96,
    OML_O21_PV2_97,
    OML_O21_PRT_98,
    OML_O21_ORC_99,
    OML_O21_PRT_100,
    OML_O21_OBR_101,
    OML_O21_NTE_102,
    OML_O21_PRT_103,
    OML_O21_OBX_106,
    OML_O21_PRT_107,
    OML_O21_OBX_108,
    OML_O21_PRT_109,
    OML_O21_TQ1_110,
    OML_O21_TQ2_111,
    OML_O21_OBX_112,
    OML_O21_PRT_113,
    OML_O21_TQ1_114,
    OML_O21_TQ2_115,
    OML_O21_OBX_116,
    OML_O21_PRT_117,
    OML_O21_NTE_118,
    OML_O21_AL1_119,
    OML_O21_PID_120,
    OML_O21_PD1_121,
    OML_O21_PRT_122,
    OML_O21_NTE_123,
    OML_O21_NK1_124,
    OML_O21_ARV_125,
    OML_O21_GT1_128,
    OML_O21_PV1_129,
    OML_O21_PV2_130,
    OML_O21_PRT_131,
    OML_O21_PV1_132,
    OML_O21_PV2_133,
    OML_O21_PRT_134,
    OML_O21_IN1_135,
    OML_O21_IN2_136,
    OML_O21_IN3_137,
    FIELD_ID_MAX
  };

  const char* className() const { return "OML_O21"; }
  OML_O21* create() const { return new OML_O21(); }

 private:
  /* Initialize object */
  void init() {
    setName("OML_O21");
    addObject<MSH>(OML_O21_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(OML_O21_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(OML_O21_UAC_3, "UAC.3", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O21_NTE_4, "NTE.4", HL7::optional, HL7::repetition_on);
    addObject<ORC>(OML_O21_ORC_7, "ORC.7", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_8, "PRT.8", HL7::optional, HL7::repetition_off);
    addObject<FT1>(OML_O21_FT1_11, "FT1.11", HL7::optional, HL7::repetition_off);
    addObject<CTI>(OML_O21_CTI_12, "CTI.12", HL7::optional, HL7::repetition_off);
    addObject<BLG>(OML_O21_BLG_13, "BLG.13", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OML_O21_TQ1_14, "TQ1.14", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OML_O21_TQ2_15, "TQ2.15", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OML_O21_TQ1_16, "TQ1.16", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OML_O21_TQ2_17, "TQ2.17", HL7::optional, HL7::repetition_off);
    addObject<OBR>(OML_O21_OBR_18, "OBR.18", HL7::initialized, HL7::repetition_off);
    addObject<TCD>(OML_O21_TCD_19, "TCD.19", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O21_NTE_20, "NTE.20", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_21, "PRT.21", HL7::optional, HL7::repetition_off);
    addObject<CTD>(OML_O21_CTD_22, "CTD.22", HL7::optional, HL7::repetition_off);
    addObject<DG1>(OML_O21_DG1_23, "DG1.23", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_27, "OBX.27", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_28, "PRT.28", HL7::optional, HL7::repetition_off);
    addObject<TCD>(OML_O21_TCD_29, "TCD.29", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O21_NTE_30, "NTE.30", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_31, "OBX.31", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_32, "PRT.32", HL7::optional, HL7::repetition_off);
    addObject<TCD>(OML_O21_TCD_33, "TCD.33", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O21_NTE_34, "NTE.34", HL7::optional, HL7::repetition_off);
    addObject<SPM>(OML_O21_SPM_35, "SPM.35", HL7::initialized, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_38, "OBX.38", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_39, "PRT.39", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_40, "OBX.40", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_41, "PRT.41", HL7::optional, HL7::repetition_off);
    addObject<SAC>(OML_O21_SAC_42, "SAC.42", HL7::initialized, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_44, "OBX.44", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_45, "PRT.45", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_46, "OBX.46", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_47, "PRT.47", HL7::optional, HL7::repetition_off);
    addObject<TCD>(OML_O21_TCD_48, "TCD.48", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O21_NTE_49, "NTE.49", HL7::optional, HL7::repetition_off);
    addObject<SPM>(OML_O21_SPM_50, "SPM.50", HL7::initialized, HL7::repetition_off);
    addObject<AL1>(OML_O21_AL1_55, "AL1.55", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_57, "OBX.57", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_58, "PRT.58", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_59, "OBX.59", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_60, "PRT.60", HL7::optional, HL7::repetition_off);
    addObject<SAC>(OML_O21_SAC_61, "SAC.61", HL7::initialized, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_63, "OBX.63", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_64, "PRT.64", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_65, "OBX.65", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_66, "PRT.66", HL7::optional, HL7::repetition_off);
    addObject<SAC>(OML_O21_SAC_67, "SAC.67", HL7::initialized, HL7::repetition_off);
    addObject<PID>(OML_O21_PID_69, "PID.69", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OML_O21_PD1_70, "PD1.70", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_71, "PRT.71", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OML_O21_ARV_72, "ARV.72", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_73, "OBX.73", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_74, "PRT.74", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_75, "OBX.75", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_76, "PRT.76", HL7::optional, HL7::repetition_off);
    addObject<SAC>(OML_O21_SAC_77, "SAC.77", HL7::initialized, HL7::repetition_off);
    addObject<PID>(OML_O21_PID_79, "PID.79", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OML_O21_PD1_80, "PD1.80", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_81, "PRT.81", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OML_O21_ARV_82, "ARV.82", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OML_O21_PV1_83, "PV1.83", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OML_O21_PV2_84, "PV2.84", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_85, "PRT.85", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_86, "OBX.86", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_87, "PRT.87", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_88, "OBX.88", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_89, "PRT.89", HL7::optional, HL7::repetition_off);
    addObject<SAC>(OML_O21_SAC_90, "SAC.90", HL7::initialized, HL7::repetition_off);
    addObject<PID>(OML_O21_PID_92, "PID.92", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OML_O21_PD1_93, "PD1.93", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_94, "PRT.94", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OML_O21_ARV_95, "ARV.95", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OML_O21_PV1_96, "PV1.96", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OML_O21_PV2_97, "PV2.97", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_98, "PRT.98", HL7::optional, HL7::repetition_off);
    addObject<ORC>(OML_O21_ORC_99, "ORC.99", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_100, "PRT.100", HL7::optional, HL7::repetition_off);
    addObject<OBR>(OML_O21_OBR_101, "OBR.101", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(OML_O21_NTE_102, "NTE.102", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_103, "PRT.103", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_106, "OBX.106", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_107, "PRT.107", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_108, "OBX.108", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_109, "PRT.109", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OML_O21_TQ1_110, "TQ1.110", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OML_O21_TQ2_111, "TQ2.111", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_112, "OBX.112", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_113, "PRT.113", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OML_O21_TQ1_114, "TQ1.114", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OML_O21_TQ2_115, "TQ2.115", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OML_O21_OBX_116, "OBX.116", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_117, "PRT.117", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O21_NTE_118, "NTE.118", HL7::optional, HL7::repetition_off);
    addObject<AL1>(OML_O21_AL1_119, "AL1.119", HL7::optional, HL7::repetition_off);
    addObject<PID>(OML_O21_PID_120, "PID.120", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(OML_O21_PD1_121, "PD1.121", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_122, "PRT.122", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OML_O21_NTE_123, "NTE.123", HL7::optional, HL7::repetition_off);
    addObject<NK1>(OML_O21_NK1_124, "NK1.124", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OML_O21_ARV_125, "ARV.125", HL7::optional, HL7::repetition_off);
    addObject<GT1>(OML_O21_GT1_128, "GT1.128", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OML_O21_PV1_129, "PV1.129", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OML_O21_PV2_130, "PV2.130", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_131, "PRT.131", HL7::optional, HL7::repetition_off);
    addObject<PV1>(OML_O21_PV1_132, "PV1.132", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(OML_O21_PV2_133, "PV2.133", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OML_O21_PRT_134, "PRT.134", HL7::optional, HL7::repetition_off);
    addObject<IN1>(OML_O21_IN1_135, "IN1.135", HL7::initialized, HL7::repetition_off);
    addObject<IN2>(OML_O21_IN2_136, "IN2.136", HL7::optional, HL7::repetition_off);
    addObject<IN3>(OML_O21_IN3_137, "IN3.137", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, OML_O21_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, OML_O21_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, OML_O21_UAC_3);
  }
  NTE* getNTE_4(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O21_NTE_4);
  }
  ORC* getORC_7(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OML_O21_ORC_7);
  }
  PRT* getPRT_8(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_8);
  }
  FT1* getFT1_11(size_t index = 0) {
    return (FT1*)this->getObjectSafe(index, OML_O21_FT1_11);
  }
  CTI* getCTI_12(size_t index = 0) {
    return (CTI*)this->getObjectSafe(index, OML_O21_CTI_12);
  }
  BLG* getBLG_13(size_t index = 0) {
    return (BLG*)this->getObjectSafe(index, OML_O21_BLG_13);
  }
  TQ1* getTQ1_14(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O21_TQ1_14);
  }
  TQ2* getTQ2_15(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O21_TQ2_15);
  }
  TQ1* getTQ1_16(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O21_TQ1_16);
  }
  TQ2* getTQ2_17(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O21_TQ2_17);
  }
  OBR* getOBR_18(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OML_O21_OBR_18);
  }
  TCD* getTCD_19(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O21_TCD_19);
  }
  NTE* getNTE_20(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O21_NTE_20);
  }
  PRT* getPRT_21(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_21);
  }
  CTD* getCTD_22(size_t index = 0) {
    return (CTD*)this->getObjectSafe(index, OML_O21_CTD_22);
  }
  DG1* getDG1_23(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, OML_O21_DG1_23);
  }
  OBX* getOBX_27(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_27);
  }
  PRT* getPRT_28(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_28);
  }
  TCD* getTCD_29(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O21_TCD_29);
  }
  NTE* getNTE_30(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O21_NTE_30);
  }
  OBX* getOBX_31(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_31);
  }
  PRT* getPRT_32(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_32);
  }
  TCD* getTCD_33(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O21_TCD_33);
  }
  NTE* getNTE_34(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O21_NTE_34);
  }
  SPM* getSPM_35(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OML_O21_SPM_35);
  }
  OBX* getOBX_38(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_38);
  }
  PRT* getPRT_39(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_39);
  }
  OBX* getOBX_40(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_40);
  }
  PRT* getPRT_41(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_41);
  }
  SAC* getSAC_42(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OML_O21_SAC_42);
  }
  OBX* getOBX_44(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_44);
  }
  PRT* getPRT_45(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_45);
  }
  OBX* getOBX_46(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_46);
  }
  PRT* getPRT_47(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_47);
  }
  TCD* getTCD_48(size_t index = 0) {
    return (TCD*)this->getObjectSafe(index, OML_O21_TCD_48);
  }
  NTE* getNTE_49(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O21_NTE_49);
  }
  SPM* getSPM_50(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OML_O21_SPM_50);
  }
  AL1* getAL1_55(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, OML_O21_AL1_55);
  }
  OBX* getOBX_57(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_57);
  }
  PRT* getPRT_58(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_58);
  }
  OBX* getOBX_59(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_59);
  }
  PRT* getPRT_60(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_60);
  }
  SAC* getSAC_61(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OML_O21_SAC_61);
  }
  OBX* getOBX_63(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_63);
  }
  PRT* getPRT_64(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_64);
  }
  OBX* getOBX_65(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_65);
  }
  PRT* getPRT_66(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_66);
  }
  SAC* getSAC_67(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OML_O21_SAC_67);
  }
  PID* getPID_69(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O21_PID_69);
  }
  PD1* getPD1_70(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O21_PD1_70);
  }
  PRT* getPRT_71(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_71);
  }
  ARV* getARV_72(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O21_ARV_72);
  }
  OBX* getOBX_73(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_73);
  }
  PRT* getPRT_74(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_74);
  }
  OBX* getOBX_75(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_75);
  }
  PRT* getPRT_76(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_76);
  }
  SAC* getSAC_77(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OML_O21_SAC_77);
  }
  PID* getPID_79(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O21_PID_79);
  }
  PD1* getPD1_80(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O21_PD1_80);
  }
  PRT* getPRT_81(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_81);
  }
  ARV* getARV_82(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O21_ARV_82);
  }
  PV1* getPV1_83(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O21_PV1_83);
  }
  PV2* getPV2_84(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O21_PV2_84);
  }
  PRT* getPRT_85(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_85);
  }
  OBX* getOBX_86(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_86);
  }
  PRT* getPRT_87(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_87);
  }
  OBX* getOBX_88(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_88);
  }
  PRT* getPRT_89(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_89);
  }
  SAC* getSAC_90(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OML_O21_SAC_90);
  }
  PID* getPID_92(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O21_PID_92);
  }
  PD1* getPD1_93(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O21_PD1_93);
  }
  PRT* getPRT_94(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_94);
  }
  ARV* getARV_95(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O21_ARV_95);
  }
  PV1* getPV1_96(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O21_PV1_96);
  }
  PV2* getPV2_97(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O21_PV2_97);
  }
  PRT* getPRT_98(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_98);
  }
  ORC* getORC_99(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OML_O21_ORC_99);
  }
  PRT* getPRT_100(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_100);
  }
  OBR* getOBR_101(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OML_O21_OBR_101);
  }
  NTE* getNTE_102(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O21_NTE_102);
  }
  PRT* getPRT_103(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_103);
  }
  OBX* getOBX_106(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_106);
  }
  PRT* getPRT_107(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_107);
  }
  OBX* getOBX_108(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_108);
  }
  PRT* getPRT_109(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_109);
  }
  TQ1* getTQ1_110(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O21_TQ1_110);
  }
  TQ2* getTQ2_111(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O21_TQ2_111);
  }
  OBX* getOBX_112(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_112);
  }
  PRT* getPRT_113(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_113);
  }
  TQ1* getTQ1_114(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OML_O21_TQ1_114);
  }
  TQ2* getTQ2_115(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OML_O21_TQ2_115);
  }
  OBX* getOBX_116(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OML_O21_OBX_116);
  }
  PRT* getPRT_117(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_117);
  }
  NTE* getNTE_118(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O21_NTE_118);
  }
  AL1* getAL1_119(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, OML_O21_AL1_119);
  }
  PID* getPID_120(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OML_O21_PID_120);
  }
  PD1* getPD1_121(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, OML_O21_PD1_121);
  }
  PRT* getPRT_122(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_122);
  }
  NTE* getNTE_123(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OML_O21_NTE_123);
  }
  NK1* getNK1_124(size_t index = 0) {
    return (NK1*)this->getObjectSafe(index, OML_O21_NK1_124);
  }
  ARV* getARV_125(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OML_O21_ARV_125);
  }
  GT1* getGT1_128(size_t index = 0) {
    return (GT1*)this->getObjectSafe(index, OML_O21_GT1_128);
  }
  PV1* getPV1_129(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O21_PV1_129);
  }
  PV2* getPV2_130(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O21_PV2_130);
  }
  PRT* getPRT_131(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_131);
  }
  PV1* getPV1_132(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, OML_O21_PV1_132);
  }
  PV2* getPV2_133(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, OML_O21_PV2_133);
  }
  PRT* getPRT_134(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OML_O21_PRT_134);
  }
  IN1* getIN1_135(size_t index = 0) {
    return (IN1*)this->getObjectSafe(index, OML_O21_IN1_135);
  }
  IN2* getIN2_136(size_t index = 0) {
    return (IN2*)this->getObjectSafe(index, OML_O21_IN2_136);
  }
  IN3* getIN3_137(size_t index = 0) {
    return (IN3*)this->getObjectSafe(index, OML_O21_IN3_137);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_4(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NTE_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_7(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_ORC_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_8(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isFT1_11(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_FT1_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCTI_12(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_CTI_12) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isBLG_13(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_BLG_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_14(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TQ1_14) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_15(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TQ2_15) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_16(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TQ1_16) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_17(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TQ2_17) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_18(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBR_18) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_19(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TCD_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_20(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NTE_20) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_21(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_21) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isCTD_22(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_CTD_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDG1_23(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_DG1_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_27(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_27) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_28(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_28) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_29(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TCD_29) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_30(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NTE_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_31(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_31) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_32(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_32) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_33(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TCD_33) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_34(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NTE_34) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_35(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_SPM_35) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_38(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_38) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_39(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_39) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_40(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_40) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_41(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_41) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_42(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_SAC_42) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_44(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_44) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_45(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_45) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_46(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_46) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_47(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_47) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTCD_48(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TCD_48) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_49(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NTE_49) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_50(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_SPM_50) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_55(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_AL1_55) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_57(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_57) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_58(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_58) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_59(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_59) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_60(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_60) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_61(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_SAC_61) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_63(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_63) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_64(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_64) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_65(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_65) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_66(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_66) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_67(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_SAC_67) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_69(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PID_69) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_70(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PD1_70) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_71(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_71) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_72(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_ARV_72) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_73(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_73) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_74(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_74) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_75(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_75) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_76(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_76) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_77(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_SAC_77) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_79(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PID_79) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_80(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PD1_80) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_81(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_81) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_82(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_ARV_82) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_83(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PV1_83) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_84(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PV2_84) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_85(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_85) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_86(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_86) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_87(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_87) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_88(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_88) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_89(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_89) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_90(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_SAC_90) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_92(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PID_92) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_93(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PD1_93) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_94(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_94) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_95(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_ARV_95) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_96(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PV1_96) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_97(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PV2_97) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_98(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_98) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_99(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_ORC_99) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_100(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_100) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_101(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBR_101) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_102(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NTE_102) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_103(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_103) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_106(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_106) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_107(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_107) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_108(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_108) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_109(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_109) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_110(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TQ1_110) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_111(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TQ2_111) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_112(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_112) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_113(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_113) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_114(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TQ1_114) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_115(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_TQ2_115) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_116(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_OBX_116) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_117(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_117) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_118(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NTE_118) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_119(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_AL1_119) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_120(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PID_120) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_121(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PD1_121) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_122(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_122) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_123(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NTE_123) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNK1_124(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_NK1_124) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_125(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_ARV_125) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isGT1_128(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_GT1_128) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_129(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PV1_129) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_130(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PV2_130) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_131(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_131) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_132(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PV1_132) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_133(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PV2_133) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_134(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_PRT_134) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN1_135(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_IN1_135) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN2_136(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_IN2_136) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isIN3_137(size_t index = 0) {
    try {
      return this->getObject(index, OML_O21_IN3_137) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OML_O21_ */
} /* namespace HL7_281 */
#endif /*  __OML_O21__281_H__ */
