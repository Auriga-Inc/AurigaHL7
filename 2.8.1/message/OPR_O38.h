/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:04:46 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __OPR_O38__281_H__
#define __OPR_O38__281_H__

#include "../../common/Util.h"
#include "../segment/ARV.h"
#include "../segment/ERR.h"
#include "../segment/MSA.h"
#include "../segment/MSH.h"
#include "../segment/NK1.h"
#include "../segment/NTE.h"
#include "../segment/OBR.h"
#include "../segment/OBX.h"
#include "../segment/ORC.h"
#include "../segment/PID.h"
#include "../segment/PRT.h"
#include "../segment/SAC.h"
#include "../segment/SFT.h"
#include "../segment/SPM.h"
#include "../segment/TQ1.h"
#include "../segment/TQ2.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct OPR_O38_RESPONSE; /* RESPONSE */
struct OPR_O38_SPECIMEN; /* SPECIMEN */
struct OPR_O38_SPECIMEN_OBSERVATION; /* SPECIMEN_OBSERVATION */
struct OPR_O38_OBSERVATION_REQUEST; /* OBSERVATION_REQUEST */
struct OPR_O38_TIMING; /* TIMING */

/* RESPONSE */
struct OPR_O38_RESPONSE : public HL7Group {
  OPR_O38_RESPONSE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPR_O38_ARV_1,
    OPR_O38_NK1_2,
    OPR_O38_OPR_O38_SPECIMEN_3,
    OPR_O38_PID_4,
    OPR_O38_PRT_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPR_O38_RESPONSE"; }
  OPR_O38_RESPONSE* create() const { return new OPR_O38_RESPONSE(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPR_O38.RESPONSE");
    addObject<ARV>(OPR_O38_ARV_1, "ARV.1", HL7::optional, HL7::repetition_on);
    addObject<NK1>(OPR_O38_NK1_2, "NK1.2", HL7::optional, HL7::repetition_on);
    addObject<OPR_O38_SPECIMEN>(OPR_O38_OPR_O38_SPECIMEN_3, "OPR_O38_SPECIMEN.3", HL7::optional, HL7::repetition_on);
    addObject<PID>(OPR_O38_PID_4, "PID.4", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OPR_O38_PRT_5, "PRT.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ARV* getARV_1(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OPR_O38_ARV_1);
  }
  NK1* getNK1_2(size_t index = 0) {
    return (NK1*)this->getObjectSafe(index, OPR_O38_NK1_2);
  }
  OPR_O38_SPECIMEN* getOPR_O38_SPECIMEN_3(size_t index = 0) {
    return (OPR_O38_SPECIMEN*)this->getObjectSafe(index, OPR_O38_OPR_O38_SPECIMEN_3);
  }
  PID* getPID_4(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OPR_O38_PID_4);
  }
  PRT* getPRT_5(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPR_O38_PRT_5);
  }

  /* Checker list */
  bool isARV_1(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_ARV_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNK1_2(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_NK1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOPR_O38_SPECIMEN_3(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_OPR_O38_SPECIMEN_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_4(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_PID_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_5(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_PRT_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPR_O38_RESPONSE */

/* SPECIMEN */
struct OPR_O38_SPECIMEN : public HL7Group {
  OPR_O38_SPECIMEN() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPR_O38_OPR_O38_OBSERVATION_REQUEST_1,
    OPR_O38_OPR_O38_SPECIMEN_OBSERVATION_2,
    OPR_O38_OPR_O38_TIMING_3,
    OPR_O38_SAC_4,
    OPR_O38_SPM_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPR_O38_SPECIMEN"; }
  OPR_O38_SPECIMEN* create() const { return new OPR_O38_SPECIMEN(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPR_O38.SPECIMEN");
    addObject<OPR_O38_OBSERVATION_REQUEST>(OPR_O38_OPR_O38_OBSERVATION_REQUEST_1, "OPR_O38_OBSERVATION_REQUEST.1", HL7::optional, HL7::repetition_on);
    addObject<OPR_O38_SPECIMEN_OBSERVATION>(OPR_O38_OPR_O38_SPECIMEN_OBSERVATION_2, "OPR_O38_SPECIMEN_OBSERVATION.2", HL7::optional, HL7::repetition_on);
    addObject<OPR_O38_TIMING>(OPR_O38_OPR_O38_TIMING_3, "OPR_O38_TIMING.3", HL7::optional, HL7::repetition_on);
    addObject<SAC>(OPR_O38_SAC_4, "SAC.4", HL7::optional, HL7::repetition_on);
    addObject<SPM>(OPR_O38_SPM_5, "SPM.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OPR_O38_OBSERVATION_REQUEST* getOPR_O38_OBSERVATION_REQUEST_1(size_t index = 0) {
    return (OPR_O38_OBSERVATION_REQUEST*)this->getObjectSafe(index, OPR_O38_OPR_O38_OBSERVATION_REQUEST_1);
  }
  OPR_O38_SPECIMEN_OBSERVATION* getOPR_O38_SPECIMEN_OBSERVATION_2(size_t index = 0) {
    return (OPR_O38_SPECIMEN_OBSERVATION*)this->getObjectSafe(index, OPR_O38_OPR_O38_SPECIMEN_OBSERVATION_2);
  }
  OPR_O38_TIMING* getOPR_O38_TIMING_3(size_t index = 0) {
    return (OPR_O38_TIMING*)this->getObjectSafe(index, OPR_O38_OPR_O38_TIMING_3);
  }
  SAC* getSAC_4(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OPR_O38_SAC_4);
  }
  SPM* getSPM_5(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OPR_O38_SPM_5);
  }

  /* Checker list */
  bool isOPR_O38_OBSERVATION_REQUEST_1(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_OPR_O38_OBSERVATION_REQUEST_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOPR_O38_SPECIMEN_OBSERVATION_2(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_OPR_O38_SPECIMEN_OBSERVATION_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOPR_O38_TIMING_3(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_OPR_O38_TIMING_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_4(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_SAC_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_5(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_SPM_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPR_O38_SPECIMEN */

/* SPECIMEN_OBSERVATION */
struct OPR_O38_SPECIMEN_OBSERVATION : public HL7Group {
  OPR_O38_SPECIMEN_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPR_O38_OBX_1,
    OPR_O38_PRT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPR_O38_SPECIMEN_OBSERVATION"; }
  OPR_O38_SPECIMEN_OBSERVATION* create() const { return new OPR_O38_SPECIMEN_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPR_O38.SPECIMEN_OBSERVATION");
    addObject<OBX>(OPR_O38_OBX_1, "OBX.1", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OPR_O38_PRT_2, "PRT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBX* getOBX_1(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPR_O38_OBX_1);
  }
  PRT* getPRT_2(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPR_O38_PRT_2);
  }

  /* Checker list */
  bool isOBX_1(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_OBX_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_2(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_PRT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPR_O38_SPECIMEN_OBSERVATION */

/* OBSERVATION_REQUEST */
struct OPR_O38_OBSERVATION_REQUEST : public HL7Group {
  OPR_O38_OBSERVATION_REQUEST() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPR_O38_OBR_1,
    OPR_O38_ORC_2,
    OPR_O38_PRT_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPR_O38_OBSERVATION_REQUEST"; }
  OPR_O38_OBSERVATION_REQUEST* create() const { return new OPR_O38_OBSERVATION_REQUEST(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPR_O38.OBSERVATION_REQUEST");
    addObject<OBR>(OPR_O38_OBR_1, "OBR.1", HL7::optional, HL7::repetition_on);
    addObject<ORC>(OPR_O38_ORC_2, "ORC.2", HL7::optional, HL7::repetition_on);
    addObject<PRT>(OPR_O38_PRT_3, "PRT.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  OBR* getOBR_1(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OPR_O38_OBR_1);
  }
  ORC* getORC_2(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OPR_O38_ORC_2);
  }
  PRT* getPRT_3(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPR_O38_PRT_3);
  }

  /* Checker list */
  bool isOBR_1(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_OBR_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_2(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_ORC_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_3(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_PRT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPR_O38_OBSERVATION_REQUEST */

/* TIMING */
struct OPR_O38_TIMING : public HL7Group {
  OPR_O38_TIMING() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPR_O38_TQ1_1,
    OPR_O38_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPR_O38_TIMING"; }
  OPR_O38_TIMING* create() const { return new OPR_O38_TIMING(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPR_O38.TIMING");
    addObject<TQ1>(OPR_O38_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(OPR_O38_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OPR_O38_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OPR_O38_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPR_O38_TIMING */

/* OPR_O38 */
struct OPR_O38 : public HL7Message {
  OPR_O38() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    OPR_O38_MSH_1,
    OPR_O38_MSA_2,
    OPR_O38_ERR_3,
    OPR_O38_SFT_4,
    OPR_O38_UAC_5,
    OPR_O38_NTE_6,
    OPR_O38_NK1_8,
    OPR_O38_PID_9,
    OPR_O38_PRT_10,
    OPR_O38_ARV_11,
    OPR_O38_SPM_13,
    OPR_O38_SAC_15,
    OPR_O38_OBX_18,
    OPR_O38_PRT_19,
    OPR_O38_OBX_20,
    OPR_O38_PRT_21,
    OPR_O38_ORC_22,
    OPR_O38_PRT_23,
    OPR_O38_OBR_24,
    OPR_O38_PRT_25,
    OPR_O38_OBX_26,
    OPR_O38_PRT_27,
    OPR_O38_ORC_28,
    OPR_O38_PRT_29,
    OPR_O38_OBR_30,
    OPR_O38_PRT_31,
    OPR_O38_TQ1_32,
    OPR_O38_TQ2_33,
    FIELD_ID_MAX
  };

  const char* className() const { return "OPR_O38"; }
  OPR_O38* create() const { return new OPR_O38(); }

 private:
  /* Initialize object */
  void init() {
    setName("OPR_O38");
    addObject<MSH>(OPR_O38_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<MSA>(OPR_O38_MSA_2, "MSA.2", HL7::initialized, HL7::repetition_off);
    addObject<ERR>(OPR_O38_ERR_3, "ERR.3", HL7::optional, HL7::repetition_on);
    addObject<SFT>(OPR_O38_SFT_4, "SFT.4", HL7::optional, HL7::repetition_on);
    addObject<UAC>(OPR_O38_UAC_5, "UAC.5", HL7::optional, HL7::repetition_off);
    addObject<NTE>(OPR_O38_NTE_6, "NTE.6", HL7::optional, HL7::repetition_on);
    addObject<NK1>(OPR_O38_NK1_8, "NK1.8", HL7::initialized, HL7::repetition_off);
    addObject<PID>(OPR_O38_PID_9, "PID.9", HL7::optional, HL7::repetition_off);
    addObject<PRT>(OPR_O38_PRT_10, "PRT.10", HL7::optional, HL7::repetition_off);
    addObject<ARV>(OPR_O38_ARV_11, "ARV.11", HL7::optional, HL7::repetition_off);
    addObject<SPM>(OPR_O38_SPM_13, "SPM.13", HL7::initialized, HL7::repetition_off);
    addObject<SAC>(OPR_O38_SAC_15, "SAC.15", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OPR_O38_OBX_18, "OBX.18", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPR_O38_PRT_19, "PRT.19", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OPR_O38_OBX_20, "OBX.20", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPR_O38_PRT_21, "PRT.21", HL7::optional, HL7::repetition_off);
    addObject<ORC>(OPR_O38_ORC_22, "ORC.22", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPR_O38_PRT_23, "PRT.23", HL7::optional, HL7::repetition_off);
    addObject<OBR>(OPR_O38_OBR_24, "OBR.24", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPR_O38_PRT_25, "PRT.25", HL7::optional, HL7::repetition_off);
    addObject<OBX>(OPR_O38_OBX_26, "OBX.26", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPR_O38_PRT_27, "PRT.27", HL7::optional, HL7::repetition_off);
    addObject<ORC>(OPR_O38_ORC_28, "ORC.28", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPR_O38_PRT_29, "PRT.29", HL7::optional, HL7::repetition_off);
    addObject<OBR>(OPR_O38_OBR_30, "OBR.30", HL7::initialized, HL7::repetition_off);
    addObject<PRT>(OPR_O38_PRT_31, "PRT.31", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(OPR_O38_TQ1_32, "TQ1.32", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(OPR_O38_TQ2_33, "TQ2.33", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, OPR_O38_MSH_1);
  }
  MSA* getMSA_2(size_t index = 0) {
    return (MSA*)this->getObjectSafe(index, OPR_O38_MSA_2);
  }
  ERR* getERR_3(size_t index = 0) {
    return (ERR*)this->getObjectSafe(index, OPR_O38_ERR_3);
  }
  SFT* getSFT_4(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, OPR_O38_SFT_4);
  }
  UAC* getUAC_5(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, OPR_O38_UAC_5);
  }
  NTE* getNTE_6(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, OPR_O38_NTE_6);
  }
  NK1* getNK1_8(size_t index = 0) {
    return (NK1*)this->getObjectSafe(index, OPR_O38_NK1_8);
  }
  PID* getPID_9(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, OPR_O38_PID_9);
  }
  PRT* getPRT_10(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPR_O38_PRT_10);
  }
  ARV* getARV_11(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, OPR_O38_ARV_11);
  }
  SPM* getSPM_13(size_t index = 0) {
    return (SPM*)this->getObjectSafe(index, OPR_O38_SPM_13);
  }
  SAC* getSAC_15(size_t index = 0) {
    return (SAC*)this->getObjectSafe(index, OPR_O38_SAC_15);
  }
  OBX* getOBX_18(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPR_O38_OBX_18);
  }
  PRT* getPRT_19(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPR_O38_PRT_19);
  }
  OBX* getOBX_20(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPR_O38_OBX_20);
  }
  PRT* getPRT_21(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPR_O38_PRT_21);
  }
  ORC* getORC_22(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OPR_O38_ORC_22);
  }
  PRT* getPRT_23(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPR_O38_PRT_23);
  }
  OBR* getOBR_24(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OPR_O38_OBR_24);
  }
  PRT* getPRT_25(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPR_O38_PRT_25);
  }
  OBX* getOBX_26(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, OPR_O38_OBX_26);
  }
  PRT* getPRT_27(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPR_O38_PRT_27);
  }
  ORC* getORC_28(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, OPR_O38_ORC_28);
  }
  PRT* getPRT_29(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPR_O38_PRT_29);
  }
  OBR* getOBR_30(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, OPR_O38_OBR_30);
  }
  PRT* getPRT_31(size_t index = 0) {
    return (PRT*)this->getObjectSafe(index, OPR_O38_PRT_31);
  }
  TQ1* getTQ1_32(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, OPR_O38_TQ1_32);
  }
  TQ2* getTQ2_33(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, OPR_O38_TQ2_33);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isMSA_2(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_MSA_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isERR_3(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_ERR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_4(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_SFT_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_5(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_UAC_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_6(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_NTE_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNK1_8(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_NK1_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_9(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_PID_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_10(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_PRT_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_11(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_ARV_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSPM_13(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_SPM_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSAC_15(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_SAC_15) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_18(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_OBX_18) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_19(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_PRT_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_20(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_OBX_20) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_21(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_PRT_21) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_22(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_ORC_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_23(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_PRT_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_24(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_OBR_24) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_25(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_PRT_25) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_26(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_OBX_26) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_27(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_PRT_27) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_28(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_ORC_28) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_29(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_PRT_29) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_30(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_OBR_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPRT_31(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_PRT_31) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_32(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_TQ1_32) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_33(size_t index = 0) {
    try {
      return this->getObject(index, OPR_O38_TQ2_33) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* OPR_O38_ */
} /* namespace HL7_281 */
#endif /*  __OPR_O38__281_H__ */
