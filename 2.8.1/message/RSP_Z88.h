/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:07:11 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __RSP_Z88__281_H__
#define __RSP_Z88__281_H__

#include "../../common/Util.h"
#include "../segment/AL1.h"
#include "../segment/DSC.h"
#include "../segment/ERR.h"
#include "../segment/MSA.h"
#include "../segment/MSH.h"
#include "../segment/NTE.h"
#include "../segment/OBX.h"
#include "../segment/ORC.h"
#include "../segment/PD1.h"
#include "../segment/PID.h"
#include "../segment/PV1.h"
#include "../segment/PV2.h"
#include "../segment/QAK.h"
#include "../segment/QPD.h"
#include "../segment/RCP.h"
#include "../segment/RXC.h"
#include "../segment/RXD.h"
#include "../segment/RXE.h"
#include "../segment/RXO.h"
#include "../segment/RXR.h"
#include "../segment/SFT.h"
#include "../segment/TQ1.h"
#include "../segment/TQ2.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct RSP_Z88_QUERY_RESPONSE; /* QUERY_RESPONSE */
struct RSP_Z88_PATIENT; /* PATIENT */
struct RSP_Z88_COMMON_ORDER; /* COMMON_ORDER */
struct RSP_Z88_ALLERGY; /* ALLERGY */
struct RSP_Z88_VISIT; /* VISIT */
struct RSP_Z88_ALLERGY; /* ALLERGY */
struct RSP_Z88_TIMING; /* TIMING */
struct RSP_Z88_ORDER_DETAIL; /* ORDER_DETAIL */
struct RSP_Z88_ORDER_ENCODED; /* ORDER_ENCODED */
struct RSP_Z88_OBSERVATION; /* OBSERVATION */
struct RSP_Z88_VISIT; /* VISIT */
struct RSP_Z88_VISIT; /* VISIT */
struct RSP_Z88_VISIT; /* VISIT */
struct RSP_Z88_COMPONENT; /* COMPONENT */
struct RSP_Z88_VISIT; /* VISIT */
struct RSP_Z88_COMPONENT; /* COMPONENT */
struct RSP_Z88_TIMING_ENCODED; /* TIMING_ENCODED */
struct RSP_Z88_VISIT; /* VISIT */
struct RSP_Z88_COMPONENT; /* COMPONENT */
struct RSP_Z88_TIMING_ENCODED; /* TIMING_ENCODED */

/* QUERY_RESPONSE */
struct RSP_Z88_QUERY_RESPONSE : public HL7Group {
  RSP_Z88_QUERY_RESPONSE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z88_RSP_Z88_COMMON_ORDER_1,
    RSP_Z88_RSP_Z88_PATIENT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z88_QUERY_RESPONSE"; }
  RSP_Z88_QUERY_RESPONSE* create() const { return new RSP_Z88_QUERY_RESPONSE(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z88.QUERY_RESPONSE");
    addObject<RSP_Z88_COMMON_ORDER>(RSP_Z88_RSP_Z88_COMMON_ORDER_1, "RSP_Z88_COMMON_ORDER.1", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z88_PATIENT>(RSP_Z88_RSP_Z88_PATIENT_2, "RSP_Z88_PATIENT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  RSP_Z88_COMMON_ORDER* getRSP_Z88_COMMON_ORDER_1(size_t index = 0) {
    return (RSP_Z88_COMMON_ORDER*)this->getObjectSafe(index, RSP_Z88_RSP_Z88_COMMON_ORDER_1);
  }
  RSP_Z88_PATIENT* getRSP_Z88_PATIENT_2(size_t index = 0) {
    return (RSP_Z88_PATIENT*)this->getObjectSafe(index, RSP_Z88_RSP_Z88_PATIENT_2);
  }

  /* Checker list */
  bool isRSP_Z88_COMMON_ORDER_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RSP_Z88_COMMON_ORDER_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z88_PATIENT_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RSP_Z88_PATIENT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z88_QUERY_RESPONSE */

/* PATIENT */
struct RSP_Z88_PATIENT : public HL7Group {
  RSP_Z88_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z88_NTE_1,
    RSP_Z88_PD1_2,
    RSP_Z88_PID_3,
    RSP_Z88_RSP_Z88_ALLERGY_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z88_PATIENT"; }
  RSP_Z88_PATIENT* create() const { return new RSP_Z88_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z88.PATIENT");
    addObject<NTE>(RSP_Z88_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<PD1>(RSP_Z88_PD1_2, "PD1.2", HL7::optional, HL7::repetition_on);
    addObject<PID>(RSP_Z88_PID_3, "PID.3", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z88_ALLERGY>(RSP_Z88_RSP_Z88_ALLERGY_4, "RSP_Z88_ALLERGY.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_1);
  }
  PD1* getPD1_2(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, RSP_Z88_PD1_2);
  }
  PID* getPID_3(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, RSP_Z88_PID_3);
  }
  RSP_Z88_ALLERGY* getRSP_Z88_ALLERGY_4(size_t index = 0) {
    return (RSP_Z88_ALLERGY*)this->getObjectSafe(index, RSP_Z88_RSP_Z88_ALLERGY_4);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PD1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_3(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PID_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z88_ALLERGY_4(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RSP_Z88_ALLERGY_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z88_PATIENT */

/* COMMON_ORDER */
struct RSP_Z88_COMMON_ORDER : public HL7Group {
  RSP_Z88_COMMON_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z88_ORC_1,
    RSP_Z88_RSP_Z88_OBSERVATION_2,
    RSP_Z88_RSP_Z88_ORDER_DETAIL_3,
    RSP_Z88_RSP_Z88_ORDER_ENCODED_4,
    RSP_Z88_RSP_Z88_TIMING_5,
    RSP_Z88_RXC_6,
    RSP_Z88_RXD_7,
    RSP_Z88_RXR_8,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z88_COMMON_ORDER"; }
  RSP_Z88_COMMON_ORDER* create() const { return new RSP_Z88_COMMON_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z88.COMMON_ORDER");
    addObject<ORC>(RSP_Z88_ORC_1, "ORC.1", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z88_OBSERVATION>(RSP_Z88_RSP_Z88_OBSERVATION_2, "RSP_Z88_OBSERVATION.2", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z88_ORDER_DETAIL>(RSP_Z88_RSP_Z88_ORDER_DETAIL_3, "RSP_Z88_ORDER_DETAIL.3", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z88_ORDER_ENCODED>(RSP_Z88_RSP_Z88_ORDER_ENCODED_4, "RSP_Z88_ORDER_ENCODED.4", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z88_TIMING>(RSP_Z88_RSP_Z88_TIMING_5, "RSP_Z88_TIMING.5", HL7::optional, HL7::repetition_on);
    addObject<RXC>(RSP_Z88_RXC_6, "RXC.6", HL7::optional, HL7::repetition_on);
    addObject<RXD>(RSP_Z88_RXD_7, "RXD.7", HL7::optional, HL7::repetition_on);
    addObject<RXR>(RSP_Z88_RXR_8, "RXR.8", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ORC* getORC_1(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, RSP_Z88_ORC_1);
  }
  RSP_Z88_OBSERVATION* getRSP_Z88_OBSERVATION_2(size_t index = 0) {
    return (RSP_Z88_OBSERVATION*)this->getObjectSafe(index, RSP_Z88_RSP_Z88_OBSERVATION_2);
  }
  RSP_Z88_ORDER_DETAIL* getRSP_Z88_ORDER_DETAIL_3(size_t index = 0) {
    return (RSP_Z88_ORDER_DETAIL*)this->getObjectSafe(index, RSP_Z88_RSP_Z88_ORDER_DETAIL_3);
  }
  RSP_Z88_ORDER_ENCODED* getRSP_Z88_ORDER_ENCODED_4(size_t index = 0) {
    return (RSP_Z88_ORDER_ENCODED*)this->getObjectSafe(index, RSP_Z88_RSP_Z88_ORDER_ENCODED_4);
  }
  RSP_Z88_TIMING* getRSP_Z88_TIMING_5(size_t index = 0) {
    return (RSP_Z88_TIMING*)this->getObjectSafe(index, RSP_Z88_RSP_Z88_TIMING_5);
  }
  RXC* getRXC_6(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z88_RXC_6);
  }
  RXD* getRXD_7(size_t index = 0) {
    return (RXD*)this->getObjectSafe(index, RSP_Z88_RXD_7);
  }
  RXR* getRXR_8(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z88_RXR_8);
  }

  /* Checker list */
  bool isORC_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_ORC_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z88_OBSERVATION_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RSP_Z88_OBSERVATION_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z88_ORDER_DETAIL_3(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RSP_Z88_ORDER_DETAIL_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z88_ORDER_ENCODED_4(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RSP_Z88_ORDER_ENCODED_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z88_TIMING_5(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RSP_Z88_TIMING_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_6(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXC_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXD_7(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXD_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_8(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXR_8) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z88_COMMON_ORDER */

/* ALLERGY */
struct RSP_Z88_ALLERGY : public HL7Group {
  RSP_Z88_ALLERGY() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z88_AL1_1,
    RSP_Z88_RSP_Z88_VISIT_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z88_ALLERGY"; }
  RSP_Z88_ALLERGY* create() const { return new RSP_Z88_ALLERGY(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z88.ALLERGY");
    addObject<AL1>(RSP_Z88_AL1_1, "AL1.1", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z88_VISIT>(RSP_Z88_RSP_Z88_VISIT_2, "RSP_Z88_VISIT.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AL1* getAL1_1(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z88_AL1_1);
  }
  RSP_Z88_VISIT* getRSP_Z88_VISIT_2(size_t index = 0) {
    return (RSP_Z88_VISIT*)this->getObjectSafe(index, RSP_Z88_RSP_Z88_VISIT_2);
  }

  /* Checker list */
  bool isAL1_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_AL1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z88_VISIT_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RSP_Z88_VISIT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z88_ALLERGY */

/* VISIT */
struct RSP_Z88_VISIT : public HL7Group {
  RSP_Z88_VISIT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z88_PV1_1,
    RSP_Z88_PV2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z88_VISIT"; }
  RSP_Z88_VISIT* create() const { return new RSP_Z88_VISIT(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z88.VISIT");
    addObject<PV1>(RSP_Z88_PV1_1, "PV1.1", HL7::optional, HL7::repetition_on);
    addObject<PV2>(RSP_Z88_PV2_2, "PV2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  PV1* getPV1_1(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z88_PV1_1);
  }
  PV2* getPV2_2(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z88_PV2_2);
  }

  /* Checker list */
  bool isPV1_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z88_VISIT */

/* TIMING */
struct RSP_Z88_TIMING : public HL7Group {
  RSP_Z88_TIMING() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z88_TQ1_1,
    RSP_Z88_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z88_TIMING"; }
  RSP_Z88_TIMING* create() const { return new RSP_Z88_TIMING(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z88.TIMING");
    addObject<TQ1>(RSP_Z88_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(RSP_Z88_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z88_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z88_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z88_TIMING */

/* ORDER_DETAIL */
struct RSP_Z88_ORDER_DETAIL : public HL7Group {
  RSP_Z88_ORDER_DETAIL() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z88_NTE_1,
    RSP_Z88_RSP_Z88_COMPONENT_2,
    RSP_Z88_RXO_3,
    RSP_Z88_RXR_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z88_ORDER_DETAIL"; }
  RSP_Z88_ORDER_DETAIL* create() const { return new RSP_Z88_ORDER_DETAIL(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z88.ORDER_DETAIL");
    addObject<NTE>(RSP_Z88_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<RSP_Z88_COMPONENT>(RSP_Z88_RSP_Z88_COMPONENT_2, "RSP_Z88_COMPONENT.2", HL7::optional, HL7::repetition_on);
    addObject<RXO>(RSP_Z88_RXO_3, "RXO.3", HL7::optional, HL7::repetition_on);
    addObject<RXR>(RSP_Z88_RXR_4, "RXR.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_1);
  }
  RSP_Z88_COMPONENT* getRSP_Z88_COMPONENT_2(size_t index = 0) {
    return (RSP_Z88_COMPONENT*)this->getObjectSafe(index, RSP_Z88_RSP_Z88_COMPONENT_2);
  }
  RXO* getRXO_3(size_t index = 0) {
    return (RXO*)this->getObjectSafe(index, RSP_Z88_RXO_3);
  }
  RXR* getRXR_4(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z88_RXR_4);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRSP_Z88_COMPONENT_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RSP_Z88_COMPONENT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXO_3(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXO_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_4(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXR_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z88_ORDER_DETAIL */

/* ORDER_ENCODED */
struct RSP_Z88_ORDER_ENCODED : public HL7Group {
  RSP_Z88_ORDER_ENCODED() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z88_RSP_Z88_TIMING_ENCODED_1,
    RSP_Z88_RXC_2,
    RSP_Z88_RXE_3,
    RSP_Z88_RXR_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z88_ORDER_ENCODED"; }
  RSP_Z88_ORDER_ENCODED* create() const { return new RSP_Z88_ORDER_ENCODED(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z88.ORDER_ENCODED");
    addObject<RSP_Z88_TIMING_ENCODED>(RSP_Z88_RSP_Z88_TIMING_ENCODED_1, "RSP_Z88_TIMING_ENCODED.1", HL7::optional, HL7::repetition_on);
    addObject<RXC>(RSP_Z88_RXC_2, "RXC.2", HL7::optional, HL7::repetition_on);
    addObject<RXE>(RSP_Z88_RXE_3, "RXE.3", HL7::optional, HL7::repetition_on);
    addObject<RXR>(RSP_Z88_RXR_4, "RXR.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  RSP_Z88_TIMING_ENCODED* getRSP_Z88_TIMING_ENCODED_1(size_t index = 0) {
    return (RSP_Z88_TIMING_ENCODED*)this->getObjectSafe(index, RSP_Z88_RSP_Z88_TIMING_ENCODED_1);
  }
  RXC* getRXC_2(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z88_RXC_2);
  }
  RXE* getRXE_3(size_t index = 0) {
    return (RXE*)this->getObjectSafe(index, RSP_Z88_RXE_3);
  }
  RXR* getRXR_4(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z88_RXR_4);
  }

  /* Checker list */
  bool isRSP_Z88_TIMING_ENCODED_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RSP_Z88_TIMING_ENCODED_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXC_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXE_3(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXE_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_4(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXR_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z88_ORDER_ENCODED */

/* OBSERVATION */
struct RSP_Z88_OBSERVATION : public HL7Group {
  RSP_Z88_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z88_NTE_1,
    RSP_Z88_OBX_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z88_OBSERVATION"; }
  RSP_Z88_OBSERVATION* create() const { return new RSP_Z88_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z88.OBSERVATION");
    addObject<NTE>(RSP_Z88_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(RSP_Z88_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, RSP_Z88_OBX_2);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z88_OBSERVATION */

/* COMPONENT */
struct RSP_Z88_COMPONENT : public HL7Group {
  RSP_Z88_COMPONENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z88_NTE_1,
    RSP_Z88_RXC_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z88_COMPONENT"; }
  RSP_Z88_COMPONENT* create() const { return new RSP_Z88_COMPONENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z88.COMPONENT");
    addObject<NTE>(RSP_Z88_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<RXC>(RSP_Z88_RXC_2, "RXC.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_1);
  }
  RXC* getRXC_2(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z88_RXC_2);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXC_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z88_COMPONENT */

/* TIMING_ENCODED */
struct RSP_Z88_TIMING_ENCODED : public HL7Group {
  RSP_Z88_TIMING_ENCODED() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z88_TQ1_1,
    RSP_Z88_TQ2_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z88_TIMING_ENCODED"; }
  RSP_Z88_TIMING_ENCODED* create() const { return new RSP_Z88_TIMING_ENCODED(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z88.TIMING_ENCODED");
    addObject<TQ1>(RSP_Z88_TQ1_1, "TQ1.1", HL7::optional, HL7::repetition_on);
    addObject<TQ2>(RSP_Z88_TQ2_2, "TQ2.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  TQ1* getTQ1_1(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z88_TQ1_1);
  }
  TQ2* getTQ2_2(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z88_TQ2_2);
  }

  /* Checker list */
  bool isTQ1_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ2_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z88_TIMING_ENCODED */

/* RSP_Z88 */
struct RSP_Z88 : public HL7Message {
  RSP_Z88() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    RSP_Z88_MSH_1,
    RSP_Z88_SFT_2,
    RSP_Z88_UAC_3,
    RSP_Z88_MSA_4,
    RSP_Z88_ERR_5,
    RSP_Z88_QAK_6,
    RSP_Z88_QPD_7,
    RSP_Z88_RCP_8,
    RSP_Z88_DSC_10,
    RSP_Z88_PID_13,
    RSP_Z88_PD1_14,
    RSP_Z88_NTE_15,
    RSP_Z88_AL1_17,
    RSP_Z88_PV1_19,
    RSP_Z88_PV2_20,
    RSP_Z88_PID_21,
    RSP_Z88_PD1_22,
    RSP_Z88_NTE_23,
    RSP_Z88_ORC_25,
    RSP_Z88_RXD_29,
    RSP_Z88_RXR_30,
    RSP_Z88_RXC_31,
    RSP_Z88_AL1_33,
    RSP_Z88_PV1_35,
    RSP_Z88_PV2_36,
    RSP_Z88_AL1_37,
    RSP_Z88_TQ1_39,
    RSP_Z88_TQ2_40,
    RSP_Z88_PV1_41,
    RSP_Z88_PV2_42,
    RSP_Z88_AL1_43,
    RSP_Z88_TQ1_45,
    RSP_Z88_TQ2_46,
    RSP_Z88_RXO_47,
    RSP_Z88_NTE_48,
    RSP_Z88_RXR_49,
    RSP_Z88_PV1_51,
    RSP_Z88_PV2_52,
    RSP_Z88_PV1_53,
    RSP_Z88_PV2_54,
    RSP_Z88_RXC_55,
    RSP_Z88_NTE_56,
    RSP_Z88_AL1_57,
    RSP_Z88_TQ1_59,
    RSP_Z88_TQ2_60,
    RSP_Z88_RXO_61,
    RSP_Z88_NTE_62,
    RSP_Z88_RXR_63,
    RSP_Z88_RXE_65,
    RSP_Z88_RXR_67,
    RSP_Z88_RXC_68,
    RSP_Z88_PV1_69,
    RSP_Z88_PV2_70,
    RSP_Z88_PV1_71,
    RSP_Z88_PV2_72,
    RSP_Z88_RXC_73,
    RSP_Z88_NTE_74,
    RSP_Z88_PV1_75,
    RSP_Z88_PV2_76,
    RSP_Z88_RXC_77,
    RSP_Z88_NTE_78,
    RSP_Z88_TQ1_79,
    RSP_Z88_TQ2_80,
    RSP_Z88_AL1_81,
    RSP_Z88_TQ1_83,
    RSP_Z88_TQ2_84,
    RSP_Z88_RXO_85,
    RSP_Z88_NTE_86,
    RSP_Z88_RXR_87,
    RSP_Z88_RXE_89,
    RSP_Z88_RXR_91,
    RSP_Z88_RXC_92,
    RSP_Z88_OBX_93,
    RSP_Z88_NTE_94,
    RSP_Z88_PV1_95,
    RSP_Z88_PV2_96,
    RSP_Z88_PV1_97,
    RSP_Z88_PV2_98,
    RSP_Z88_RXC_99,
    RSP_Z88_NTE_100,
    RSP_Z88_PV1_101,
    RSP_Z88_PV2_102,
    RSP_Z88_RXC_103,
    RSP_Z88_NTE_104,
    RSP_Z88_TQ1_105,
    RSP_Z88_TQ2_106,
    FIELD_ID_MAX
  };

  const char* className() const { return "RSP_Z88"; }
  RSP_Z88* create() const { return new RSP_Z88(); }

 private:
  /* Initialize object */
  void init() {
    setName("RSP_Z88");
    addObject<MSH>(RSP_Z88_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(RSP_Z88_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(RSP_Z88_UAC_3, "UAC.3", HL7::optional, HL7::repetition_off);
    addObject<MSA>(RSP_Z88_MSA_4, "MSA.4", HL7::initialized, HL7::repetition_off);
    addObject<ERR>(RSP_Z88_ERR_5, "ERR.5", HL7::optional, HL7::repetition_off);
    addObject<QAK>(RSP_Z88_QAK_6, "QAK.6", HL7::initialized, HL7::repetition_off);
    addObject<QPD>(RSP_Z88_QPD_7, "QPD.7", HL7::initialized, HL7::repetition_off);
    addObject<RCP>(RSP_Z88_RCP_8, "RCP.8", HL7::initialized, HL7::repetition_off);
    addObject<DSC>(RSP_Z88_DSC_10, "DSC.10", HL7::initialized, HL7::repetition_off);
    addObject<PID>(RSP_Z88_PID_13, "PID.13", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(RSP_Z88_PD1_14, "PD1.14", HL7::optional, HL7::repetition_off);
    addObject<NTE>(RSP_Z88_NTE_15, "NTE.15", HL7::optional, HL7::repetition_off);
    addObject<AL1>(RSP_Z88_AL1_17, "AL1.17", HL7::initialized, HL7::repetition_off);
    addObject<PV1>(RSP_Z88_PV1_19, "PV1.19", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z88_PV2_20, "PV2.20", HL7::optional, HL7::repetition_off);
    addObject<PID>(RSP_Z88_PID_21, "PID.21", HL7::initialized, HL7::repetition_off);
    addObject<PD1>(RSP_Z88_PD1_22, "PD1.22", HL7::optional, HL7::repetition_off);
    addObject<NTE>(RSP_Z88_NTE_23, "NTE.23", HL7::optional, HL7::repetition_off);
    addObject<ORC>(RSP_Z88_ORC_25, "ORC.25", HL7::initialized, HL7::repetition_off);
    addObject<RXD>(RSP_Z88_RXD_29, "RXD.29", HL7::initialized, HL7::repetition_off);
    addObject<RXR>(RSP_Z88_RXR_30, "RXR.30", HL7::initialized, HL7::repetition_off);
    addObject<RXC>(RSP_Z88_RXC_31, "RXC.31", HL7::optional, HL7::repetition_off);
    addObject<AL1>(RSP_Z88_AL1_33, "AL1.33", HL7::initialized, HL7::repetition_off);
    addObject<PV1>(RSP_Z88_PV1_35, "PV1.35", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z88_PV2_36, "PV2.36", HL7::optional, HL7::repetition_off);
    addObject<AL1>(RSP_Z88_AL1_37, "AL1.37", HL7::initialized, HL7::repetition_off);
    addObject<TQ1>(RSP_Z88_TQ1_39, "TQ1.39", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(RSP_Z88_TQ2_40, "TQ2.40", HL7::optional, HL7::repetition_off);
    addObject<PV1>(RSP_Z88_PV1_41, "PV1.41", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z88_PV2_42, "PV2.42", HL7::optional, HL7::repetition_off);
    addObject<AL1>(RSP_Z88_AL1_43, "AL1.43", HL7::initialized, HL7::repetition_off);
    addObject<TQ1>(RSP_Z88_TQ1_45, "TQ1.45", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(RSP_Z88_TQ2_46, "TQ2.46", HL7::optional, HL7::repetition_off);
    addObject<RXO>(RSP_Z88_RXO_47, "RXO.47", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z88_NTE_48, "NTE.48", HL7::optional, HL7::repetition_off);
    addObject<RXR>(RSP_Z88_RXR_49, "RXR.49", HL7::initialized, HL7::repetition_off);
    addObject<PV1>(RSP_Z88_PV1_51, "PV1.51", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z88_PV2_52, "PV2.52", HL7::optional, HL7::repetition_off);
    addObject<PV1>(RSP_Z88_PV1_53, "PV1.53", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z88_PV2_54, "PV2.54", HL7::optional, HL7::repetition_off);
    addObject<RXC>(RSP_Z88_RXC_55, "RXC.55", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z88_NTE_56, "NTE.56", HL7::optional, HL7::repetition_off);
    addObject<AL1>(RSP_Z88_AL1_57, "AL1.57", HL7::initialized, HL7::repetition_off);
    addObject<TQ1>(RSP_Z88_TQ1_59, "TQ1.59", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(RSP_Z88_TQ2_60, "TQ2.60", HL7::optional, HL7::repetition_off);
    addObject<RXO>(RSP_Z88_RXO_61, "RXO.61", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z88_NTE_62, "NTE.62", HL7::optional, HL7::repetition_off);
    addObject<RXR>(RSP_Z88_RXR_63, "RXR.63", HL7::initialized, HL7::repetition_off);
    addObject<RXE>(RSP_Z88_RXE_65, "RXE.65", HL7::initialized, HL7::repetition_off);
    addObject<RXR>(RSP_Z88_RXR_67, "RXR.67", HL7::initialized, HL7::repetition_off);
    addObject<RXC>(RSP_Z88_RXC_68, "RXC.68", HL7::optional, HL7::repetition_off);
    addObject<PV1>(RSP_Z88_PV1_69, "PV1.69", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z88_PV2_70, "PV2.70", HL7::optional, HL7::repetition_off);
    addObject<PV1>(RSP_Z88_PV1_71, "PV1.71", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z88_PV2_72, "PV2.72", HL7::optional, HL7::repetition_off);
    addObject<RXC>(RSP_Z88_RXC_73, "RXC.73", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z88_NTE_74, "NTE.74", HL7::optional, HL7::repetition_off);
    addObject<PV1>(RSP_Z88_PV1_75, "PV1.75", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z88_PV2_76, "PV2.76", HL7::optional, HL7::repetition_off);
    addObject<RXC>(RSP_Z88_RXC_77, "RXC.77", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z88_NTE_78, "NTE.78", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(RSP_Z88_TQ1_79, "TQ1.79", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(RSP_Z88_TQ2_80, "TQ2.80", HL7::optional, HL7::repetition_off);
    addObject<AL1>(RSP_Z88_AL1_81, "AL1.81", HL7::initialized, HL7::repetition_off);
    addObject<TQ1>(RSP_Z88_TQ1_83, "TQ1.83", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(RSP_Z88_TQ2_84, "TQ2.84", HL7::optional, HL7::repetition_off);
    addObject<RXO>(RSP_Z88_RXO_85, "RXO.85", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z88_NTE_86, "NTE.86", HL7::optional, HL7::repetition_off);
    addObject<RXR>(RSP_Z88_RXR_87, "RXR.87", HL7::initialized, HL7::repetition_off);
    addObject<RXE>(RSP_Z88_RXE_89, "RXE.89", HL7::initialized, HL7::repetition_off);
    addObject<RXR>(RSP_Z88_RXR_91, "RXR.91", HL7::initialized, HL7::repetition_off);
    addObject<RXC>(RSP_Z88_RXC_92, "RXC.92", HL7::optional, HL7::repetition_off);
    addObject<OBX>(RSP_Z88_OBX_93, "OBX.93", HL7::optional, HL7::repetition_off);
    addObject<NTE>(RSP_Z88_NTE_94, "NTE.94", HL7::optional, HL7::repetition_off);
    addObject<PV1>(RSP_Z88_PV1_95, "PV1.95", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z88_PV2_96, "PV2.96", HL7::optional, HL7::repetition_off);
    addObject<PV1>(RSP_Z88_PV1_97, "PV1.97", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z88_PV2_98, "PV2.98", HL7::optional, HL7::repetition_off);
    addObject<RXC>(RSP_Z88_RXC_99, "RXC.99", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z88_NTE_100, "NTE.100", HL7::optional, HL7::repetition_off);
    addObject<PV1>(RSP_Z88_PV1_101, "PV1.101", HL7::initialized, HL7::repetition_off);
    addObject<PV2>(RSP_Z88_PV2_102, "PV2.102", HL7::optional, HL7::repetition_off);
    addObject<RXC>(RSP_Z88_RXC_103, "RXC.103", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(RSP_Z88_NTE_104, "NTE.104", HL7::optional, HL7::repetition_off);
    addObject<TQ1>(RSP_Z88_TQ1_105, "TQ1.105", HL7::initialized, HL7::repetition_off);
    addObject<TQ2>(RSP_Z88_TQ2_106, "TQ2.106", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, RSP_Z88_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, RSP_Z88_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, RSP_Z88_UAC_3);
  }
  MSA* getMSA_4(size_t index = 0) {
    return (MSA*)this->getObjectSafe(index, RSP_Z88_MSA_4);
  }
  ERR* getERR_5(size_t index = 0) {
    return (ERR*)this->getObjectSafe(index, RSP_Z88_ERR_5);
  }
  QAK* getQAK_6(size_t index = 0) {
    return (QAK*)this->getObjectSafe(index, RSP_Z88_QAK_6);
  }
  QPD* getQPD_7(size_t index = 0) {
    return (QPD*)this->getObjectSafe(index, RSP_Z88_QPD_7);
  }
  RCP* getRCP_8(size_t index = 0) {
    return (RCP*)this->getObjectSafe(index, RSP_Z88_RCP_8);
  }
  DSC* getDSC_10(size_t index = 0) {
    return (DSC*)this->getObjectSafe(index, RSP_Z88_DSC_10);
  }
  PID* getPID_13(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, RSP_Z88_PID_13);
  }
  PD1* getPD1_14(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, RSP_Z88_PD1_14);
  }
  NTE* getNTE_15(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_15);
  }
  AL1* getAL1_17(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z88_AL1_17);
  }
  PV1* getPV1_19(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z88_PV1_19);
  }
  PV2* getPV2_20(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z88_PV2_20);
  }
  PID* getPID_21(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, RSP_Z88_PID_21);
  }
  PD1* getPD1_22(size_t index = 0) {
    return (PD1*)this->getObjectSafe(index, RSP_Z88_PD1_22);
  }
  NTE* getNTE_23(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_23);
  }
  ORC* getORC_25(size_t index = 0) {
    return (ORC*)this->getObjectSafe(index, RSP_Z88_ORC_25);
  }
  RXD* getRXD_29(size_t index = 0) {
    return (RXD*)this->getObjectSafe(index, RSP_Z88_RXD_29);
  }
  RXR* getRXR_30(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z88_RXR_30);
  }
  RXC* getRXC_31(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z88_RXC_31);
  }
  AL1* getAL1_33(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z88_AL1_33);
  }
  PV1* getPV1_35(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z88_PV1_35);
  }
  PV2* getPV2_36(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z88_PV2_36);
  }
  AL1* getAL1_37(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z88_AL1_37);
  }
  TQ1* getTQ1_39(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z88_TQ1_39);
  }
  TQ2* getTQ2_40(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z88_TQ2_40);
  }
  PV1* getPV1_41(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z88_PV1_41);
  }
  PV2* getPV2_42(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z88_PV2_42);
  }
  AL1* getAL1_43(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z88_AL1_43);
  }
  TQ1* getTQ1_45(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z88_TQ1_45);
  }
  TQ2* getTQ2_46(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z88_TQ2_46);
  }
  RXO* getRXO_47(size_t index = 0) {
    return (RXO*)this->getObjectSafe(index, RSP_Z88_RXO_47);
  }
  NTE* getNTE_48(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_48);
  }
  RXR* getRXR_49(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z88_RXR_49);
  }
  PV1* getPV1_51(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z88_PV1_51);
  }
  PV2* getPV2_52(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z88_PV2_52);
  }
  PV1* getPV1_53(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z88_PV1_53);
  }
  PV2* getPV2_54(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z88_PV2_54);
  }
  RXC* getRXC_55(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z88_RXC_55);
  }
  NTE* getNTE_56(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_56);
  }
  AL1* getAL1_57(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z88_AL1_57);
  }
  TQ1* getTQ1_59(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z88_TQ1_59);
  }
  TQ2* getTQ2_60(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z88_TQ2_60);
  }
  RXO* getRXO_61(size_t index = 0) {
    return (RXO*)this->getObjectSafe(index, RSP_Z88_RXO_61);
  }
  NTE* getNTE_62(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_62);
  }
  RXR* getRXR_63(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z88_RXR_63);
  }
  RXE* getRXE_65(size_t index = 0) {
    return (RXE*)this->getObjectSafe(index, RSP_Z88_RXE_65);
  }
  RXR* getRXR_67(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z88_RXR_67);
  }
  RXC* getRXC_68(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z88_RXC_68);
  }
  PV1* getPV1_69(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z88_PV1_69);
  }
  PV2* getPV2_70(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z88_PV2_70);
  }
  PV1* getPV1_71(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z88_PV1_71);
  }
  PV2* getPV2_72(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z88_PV2_72);
  }
  RXC* getRXC_73(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z88_RXC_73);
  }
  NTE* getNTE_74(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_74);
  }
  PV1* getPV1_75(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z88_PV1_75);
  }
  PV2* getPV2_76(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z88_PV2_76);
  }
  RXC* getRXC_77(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z88_RXC_77);
  }
  NTE* getNTE_78(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_78);
  }
  TQ1* getTQ1_79(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z88_TQ1_79);
  }
  TQ2* getTQ2_80(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z88_TQ2_80);
  }
  AL1* getAL1_81(size_t index = 0) {
    return (AL1*)this->getObjectSafe(index, RSP_Z88_AL1_81);
  }
  TQ1* getTQ1_83(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z88_TQ1_83);
  }
  TQ2* getTQ2_84(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z88_TQ2_84);
  }
  RXO* getRXO_85(size_t index = 0) {
    return (RXO*)this->getObjectSafe(index, RSP_Z88_RXO_85);
  }
  NTE* getNTE_86(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_86);
  }
  RXR* getRXR_87(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z88_RXR_87);
  }
  RXE* getRXE_89(size_t index = 0) {
    return (RXE*)this->getObjectSafe(index, RSP_Z88_RXE_89);
  }
  RXR* getRXR_91(size_t index = 0) {
    return (RXR*)this->getObjectSafe(index, RSP_Z88_RXR_91);
  }
  RXC* getRXC_92(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z88_RXC_92);
  }
  OBX* getOBX_93(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, RSP_Z88_OBX_93);
  }
  NTE* getNTE_94(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_94);
  }
  PV1* getPV1_95(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z88_PV1_95);
  }
  PV2* getPV2_96(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z88_PV2_96);
  }
  PV1* getPV1_97(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z88_PV1_97);
  }
  PV2* getPV2_98(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z88_PV2_98);
  }
  RXC* getRXC_99(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z88_RXC_99);
  }
  NTE* getNTE_100(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_100);
  }
  PV1* getPV1_101(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, RSP_Z88_PV1_101);
  }
  PV2* getPV2_102(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, RSP_Z88_PV2_102);
  }
  RXC* getRXC_103(size_t index = 0) {
    return (RXC*)this->getObjectSafe(index, RSP_Z88_RXC_103);
  }
  NTE* getNTE_104(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, RSP_Z88_NTE_104);
  }
  TQ1* getTQ1_105(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, RSP_Z88_TQ1_105);
  }
  TQ2* getTQ2_106(size_t index = 0) {
    return (TQ2*)this->getObjectSafe(index, RSP_Z88_TQ2_106);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isMSA_4(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_MSA_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isERR_5(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_ERR_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isQAK_6(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_QAK_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isQPD_7(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_QPD_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRCP_8(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RCP_8) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDSC_10(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_DSC_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_13(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PID_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_14(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PD1_14) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_15(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_15) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_17(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_AL1_17) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_19(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV1_19) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_20(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV2_20) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_21(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PID_21) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPD1_22(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PD1_22) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_23(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isORC_25(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_ORC_25) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXD_29(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXD_29) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_30(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXR_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_31(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXC_31) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_33(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_AL1_33) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_35(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV1_35) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_36(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV2_36) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_37(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_AL1_37) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_39(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ1_39) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_40(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ2_40) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_41(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV1_41) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_42(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV2_42) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_43(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_AL1_43) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_45(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ1_45) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_46(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ2_46) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXO_47(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXO_47) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_48(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_48) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_49(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXR_49) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_51(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV1_51) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_52(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV2_52) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_53(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV1_53) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_54(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV2_54) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_55(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXC_55) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_56(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_56) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_57(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_AL1_57) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_59(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ1_59) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_60(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ2_60) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXO_61(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXO_61) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_62(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_62) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_63(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXR_63) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXE_65(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXE_65) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_67(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXR_67) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_68(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXC_68) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_69(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV1_69) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_70(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV2_70) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_71(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV1_71) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_72(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV2_72) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_73(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXC_73) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_74(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_74) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_75(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV1_75) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_76(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV2_76) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_77(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXC_77) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_78(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_78) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_79(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ1_79) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_80(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ2_80) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAL1_81(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_AL1_81) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_83(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ1_83) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_84(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ2_84) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXO_85(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXO_85) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_86(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_86) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_87(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXR_87) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXE_89(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXE_89) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXR_91(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXR_91) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_92(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXC_92) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_93(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_OBX_93) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_94(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_94) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_95(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV1_95) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_96(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV2_96) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_97(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV1_97) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_98(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV2_98) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_99(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXC_99) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_100(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_100) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_101(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV1_101) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_102(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_PV2_102) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRXC_103(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_RXC_103) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_104(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_NTE_104) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_105(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ1_105) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ2_106(size_t index = 0) {
    try {
      return this->getObject(index, RSP_Z88_TQ2_106) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* RSP_Z88_ */
} /* namespace HL7_281 */
#endif /*  __RSP_Z88__281_H__ */
