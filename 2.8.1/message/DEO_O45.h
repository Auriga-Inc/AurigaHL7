/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:02:42 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __DEO_O45__281_H__
#define __DEO_O45__281_H__

#include "../../common/Util.h"
#include "../segment/ARV.h"
#include "../segment/MSH.h"
#include "../segment/NTE.h"
#include "../segment/OBR.h"
#include "../segment/OBX.h"
#include "../segment/PID.h"
#include "../segment/PV1.h"
#include "../segment/SFT.h"
#include "../segment/UAC.h"

namespace HL7_281 {

/* Internal structures/groups */
struct DEO_O45_DONOR; /* DONOR */
struct DEO_O45_DONATION_ORDER; /* DONATION_ORDER */
struct DEO_O45_DONATION_OBSERVATION; /* DONATION_OBSERVATION */
struct DEO_O45_DONOR_REGISTRATION; /* DONOR_REGISTRATION */

/* DONOR */
struct DEO_O45_DONOR : public HL7Group {
  DEO_O45_DONOR() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    DEO_O45_ARV_1,
    DEO_O45_DEO_O45_DONOR_REGISTRATION_2,
    DEO_O45_NTE_3,
    DEO_O45_OBX_4,
    DEO_O45_PID_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "DEO_O45_DONOR"; }
  DEO_O45_DONOR* create() const { return new DEO_O45_DONOR(); }

 private:
  /* Initialize object */
  void init() {
    setName("DEO_O45.DONOR");
    addObject<ARV>(DEO_O45_ARV_1, "ARV.1", HL7::optional, HL7::repetition_on);
    addObject<DEO_O45_DONOR_REGISTRATION>(DEO_O45_DEO_O45_DONOR_REGISTRATION_2, "DEO_O45_DONOR_REGISTRATION.2", HL7::optional, HL7::repetition_on);
    addObject<NTE>(DEO_O45_NTE_3, "NTE.3", HL7::optional, HL7::repetition_on);
    addObject<OBX>(DEO_O45_OBX_4, "OBX.4", HL7::optional, HL7::repetition_on);
    addObject<PID>(DEO_O45_PID_5, "PID.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  ARV* getARV_1(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, DEO_O45_ARV_1);
  }
  DEO_O45_DONOR_REGISTRATION* getDEO_O45_DONOR_REGISTRATION_2(size_t index = 0) {
    return (DEO_O45_DONOR_REGISTRATION*)this->getObjectSafe(index, DEO_O45_DEO_O45_DONOR_REGISTRATION_2);
  }
  NTE* getNTE_3(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, DEO_O45_NTE_3);
  }
  OBX* getOBX_4(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, DEO_O45_OBX_4);
  }
  PID* getPID_5(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, DEO_O45_PID_5);
  }

  /* Checker list */
  bool isARV_1(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_ARV_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDEO_O45_DONOR_REGISTRATION_2(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_DEO_O45_DONOR_REGISTRATION_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_3(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_NTE_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_4(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_OBX_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_5(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_PID_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* DEO_O45_DONOR */

/* DONATION_ORDER */
struct DEO_O45_DONATION_ORDER : public HL7Group {
  DEO_O45_DONATION_ORDER() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    DEO_O45_DEO_O45_DONATION_OBSERVATION_1,
    DEO_O45_NTE_2,
    DEO_O45_OBR_3,
    FIELD_ID_MAX
  };

  const char* className() const { return "DEO_O45_DONATION_ORDER"; }
  DEO_O45_DONATION_ORDER* create() const { return new DEO_O45_DONATION_ORDER(); }

 private:
  /* Initialize object */
  void init() {
    setName("DEO_O45.DONATION_ORDER");
    addObject<DEO_O45_DONATION_OBSERVATION>(DEO_O45_DEO_O45_DONATION_OBSERVATION_1, "DEO_O45_DONATION_OBSERVATION.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(DEO_O45_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
    addObject<OBR>(DEO_O45_OBR_3, "OBR.3", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  DEO_O45_DONATION_OBSERVATION* getDEO_O45_DONATION_OBSERVATION_1(size_t index = 0) {
    return (DEO_O45_DONATION_OBSERVATION*)this->getObjectSafe(index, DEO_O45_DEO_O45_DONATION_OBSERVATION_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, DEO_O45_NTE_2);
  }
  OBR* getOBR_3(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, DEO_O45_OBR_3);
  }

  /* Checker list */
  bool isDEO_O45_DONATION_OBSERVATION_1(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_DEO_O45_DONATION_OBSERVATION_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_3(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_OBR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* DEO_O45_DONATION_ORDER */

/* DONATION_OBSERVATION */
struct DEO_O45_DONATION_OBSERVATION : public HL7Group {
  DEO_O45_DONATION_OBSERVATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    DEO_O45_NTE_1,
    DEO_O45_OBX_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "DEO_O45_DONATION_OBSERVATION"; }
  DEO_O45_DONATION_OBSERVATION* create() const { return new DEO_O45_DONATION_OBSERVATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("DEO_O45.DONATION_OBSERVATION");
    addObject<NTE>(DEO_O45_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<OBX>(DEO_O45_OBX_2, "OBX.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, DEO_O45_NTE_1);
  }
  OBX* getOBX_2(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, DEO_O45_OBX_2);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_2(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_OBX_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* DEO_O45_DONATION_OBSERVATION */

/* DONOR_REGISTRATION */
struct DEO_O45_DONOR_REGISTRATION : public HL7Group {
  DEO_O45_DONOR_REGISTRATION() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    DEO_O45_NTE_1,
    DEO_O45_PV1_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "DEO_O45_DONOR_REGISTRATION"; }
  DEO_O45_DONOR_REGISTRATION* create() const { return new DEO_O45_DONOR_REGISTRATION(); }

 private:
  /* Initialize object */
  void init() {
    setName("DEO_O45.DONOR_REGISTRATION");
    addObject<NTE>(DEO_O45_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<PV1>(DEO_O45_PV1_2, "PV1.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, DEO_O45_NTE_1);
  }
  PV1* getPV1_2(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, DEO_O45_PV1_2);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_2(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_PV1_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* DEO_O45_DONOR_REGISTRATION */

/* DEO_O45 */
struct DEO_O45 : public HL7Message {
  DEO_O45() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    DEO_O45_MSH_1,
    DEO_O45_SFT_2,
    DEO_O45_UAC_3,
    DEO_O45_OBR_6,
    DEO_O45_NTE_7,
    DEO_O45_OBX_9,
    DEO_O45_NTE_10,
    DEO_O45_PID_11,
    DEO_O45_OBX_12,
    DEO_O45_ARV_13,
    DEO_O45_NTE_14,
    DEO_O45_PV1_16,
    DEO_O45_NTE_17,
    FIELD_ID_MAX
  };

  const char* className() const { return "DEO_O45"; }
  DEO_O45* create() const { return new DEO_O45(); }

 private:
  /* Initialize object */
  void init() {
    setName("DEO_O45");
    addObject<MSH>(DEO_O45_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<SFT>(DEO_O45_SFT_2, "SFT.2", HL7::optional, HL7::repetition_on);
    addObject<UAC>(DEO_O45_UAC_3, "UAC.3", HL7::optional, HL7::repetition_off);
    addObject<OBR>(DEO_O45_OBR_6, "OBR.6", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(DEO_O45_NTE_7, "NTE.7", HL7::optional, HL7::repetition_off);
    addObject<OBX>(DEO_O45_OBX_9, "OBX.9", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(DEO_O45_NTE_10, "NTE.10", HL7::optional, HL7::repetition_off);
    addObject<PID>(DEO_O45_PID_11, "PID.11", HL7::initialized, HL7::repetition_off);
    addObject<OBX>(DEO_O45_OBX_12, "OBX.12", HL7::optional, HL7::repetition_off);
    addObject<ARV>(DEO_O45_ARV_13, "ARV.13", HL7::optional, HL7::repetition_off);
    addObject<NTE>(DEO_O45_NTE_14, "NTE.14", HL7::optional, HL7::repetition_off);
    addObject<PV1>(DEO_O45_PV1_16, "PV1.16", HL7::optional, HL7::repetition_off);
    addObject<NTE>(DEO_O45_NTE_17, "NTE.17", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, DEO_O45_MSH_1);
  }
  SFT* getSFT_2(size_t index = 0) {
    return (SFT*)this->getObjectSafe(index, DEO_O45_SFT_2);
  }
  UAC* getUAC_3(size_t index = 0) {
    return (UAC*)this->getObjectSafe(index, DEO_O45_UAC_3);
  }
  OBR* getOBR_6(size_t index = 0) {
    return (OBR*)this->getObjectSafe(index, DEO_O45_OBR_6);
  }
  NTE* getNTE_7(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, DEO_O45_NTE_7);
  }
  OBX* getOBX_9(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, DEO_O45_OBX_9);
  }
  NTE* getNTE_10(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, DEO_O45_NTE_10);
  }
  PID* getPID_11(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, DEO_O45_PID_11);
  }
  OBX* getOBX_12(size_t index = 0) {
    return (OBX*)this->getObjectSafe(index, DEO_O45_OBX_12);
  }
  ARV* getARV_13(size_t index = 0) {
    return (ARV*)this->getObjectSafe(index, DEO_O45_ARV_13);
  }
  NTE* getNTE_14(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, DEO_O45_NTE_14);
  }
  PV1* getPV1_16(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, DEO_O45_PV1_16);
  }
  NTE* getNTE_17(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, DEO_O45_NTE_17);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSFT_2(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_SFT_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isUAC_3(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_UAC_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBR_6(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_OBR_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_7(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_NTE_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_9(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_OBX_9) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_10(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_NTE_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_11(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_PID_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isOBX_12(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_OBX_12) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isARV_13(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_ARV_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_14(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_NTE_14) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_16(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_PV1_16) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_17(size_t index = 0) {
    try {
      return this->getObject(index, DEO_O45_NTE_17) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* DEO_O45_ */
} /* namespace HL7_281 */
#endif /*  __DEO_O45__281_H__ */
