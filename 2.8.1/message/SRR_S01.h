/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 19:07:26 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __SRR_S01__281_H__
#define __SRR_S01__281_H__

#include "../../common/Util.h"
#include "../segment/AIG.h"
#include "../segment/AIL.h"
#include "../segment/AIP.h"
#include "../segment/AIS.h"
#include "../segment/DG1.h"
#include "../segment/ERR.h"
#include "../segment/MSA.h"
#include "../segment/MSH.h"
#include "../segment/NTE.h"
#include "../segment/PID.h"
#include "../segment/PV1.h"
#include "../segment/PV2.h"
#include "../segment/RGS.h"
#include "../segment/SCH.h"
#include "../segment/TQ1.h"

namespace HL7_281 {

/* Internal structures/groups */
struct SRR_S01_SCHEDULE; /* SCHEDULE */
struct SRR_S01_PATIENT; /* PATIENT */
struct SRR_S01_RESOURCES; /* RESOURCES */
struct SRR_S01_SERVICE; /* SERVICE */
struct SRR_S01_GENERAL_RESOURCE; /* GENERAL_RESOURCE */
struct SRR_S01_LOCATION_RESOURCE; /* LOCATION_RESOURCE */
struct SRR_S01_PERSONNEL_RESOURCE; /* PERSONNEL_RESOURCE */

/* SCHEDULE */
struct SRR_S01_SCHEDULE : public HL7Group {
  SRR_S01_SCHEDULE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRR_S01_NTE_1,
    SRR_S01_SCH_2,
    SRR_S01_SRR_S01_PATIENT_3,
    SRR_S01_SRR_S01_RESOURCES_4,
    SRR_S01_TQ1_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRR_S01_SCHEDULE"; }
  SRR_S01_SCHEDULE* create() const { return new SRR_S01_SCHEDULE(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRR_S01.SCHEDULE");
    addObject<NTE>(SRR_S01_NTE_1, "NTE.1", HL7::optional, HL7::repetition_on);
    addObject<SCH>(SRR_S01_SCH_2, "SCH.2", HL7::optional, HL7::repetition_on);
    addObject<SRR_S01_PATIENT>(SRR_S01_SRR_S01_PATIENT_3, "SRR_S01_PATIENT.3", HL7::optional, HL7::repetition_on);
    addObject<SRR_S01_RESOURCES>(SRR_S01_SRR_S01_RESOURCES_4, "SRR_S01_RESOURCES.4", HL7::optional, HL7::repetition_on);
    addObject<TQ1>(SRR_S01_TQ1_5, "TQ1.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  NTE* getNTE_1(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_1);
  }
  SCH* getSCH_2(size_t index = 0) {
    return (SCH*)this->getObjectSafe(index, SRR_S01_SCH_2);
  }
  SRR_S01_PATIENT* getSRR_S01_PATIENT_3(size_t index = 0) {
    return (SRR_S01_PATIENT*)this->getObjectSafe(index, SRR_S01_SRR_S01_PATIENT_3);
  }
  SRR_S01_RESOURCES* getSRR_S01_RESOURCES_4(size_t index = 0) {
    return (SRR_S01_RESOURCES*)this->getObjectSafe(index, SRR_S01_SRR_S01_RESOURCES_4);
  }
  TQ1* getTQ1_5(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, SRR_S01_TQ1_5);
  }

  /* Checker list */
  bool isNTE_1(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSCH_2(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_SCH_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSRR_S01_PATIENT_3(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_SRR_S01_PATIENT_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSRR_S01_RESOURCES_4(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_SRR_S01_RESOURCES_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_5(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_TQ1_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRR_S01_SCHEDULE */

/* PATIENT */
struct SRR_S01_PATIENT : public HL7Group {
  SRR_S01_PATIENT() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRR_S01_DG1_1,
    SRR_S01_PID_2,
    SRR_S01_PV1_3,
    SRR_S01_PV2_4,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRR_S01_PATIENT"; }
  SRR_S01_PATIENT* create() const { return new SRR_S01_PATIENT(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRR_S01.PATIENT");
    addObject<DG1>(SRR_S01_DG1_1, "DG1.1", HL7::optional, HL7::repetition_on);
    addObject<PID>(SRR_S01_PID_2, "PID.2", HL7::optional, HL7::repetition_on);
    addObject<PV1>(SRR_S01_PV1_3, "PV1.3", HL7::optional, HL7::repetition_on);
    addObject<PV2>(SRR_S01_PV2_4, "PV2.4", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  DG1* getDG1_1(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, SRR_S01_DG1_1);
  }
  PID* getPID_2(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, SRR_S01_PID_2);
  }
  PV1* getPV1_3(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, SRR_S01_PV1_3);
  }
  PV2* getPV2_4(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, SRR_S01_PV2_4);
  }

  /* Checker list */
  bool isDG1_1(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_DG1_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_2(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_PID_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_3(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_PV1_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_4(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_PV2_4) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRR_S01_PATIENT */

/* RESOURCES */
struct SRR_S01_RESOURCES : public HL7Group {
  SRR_S01_RESOURCES() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRR_S01_RGS_1,
    SRR_S01_SRR_S01_GENERAL_RESOURCE_2,
    SRR_S01_SRR_S01_LOCATION_RESOURCE_3,
    SRR_S01_SRR_S01_PERSONNEL_RESOURCE_4,
    SRR_S01_SRR_S01_SERVICE_5,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRR_S01_RESOURCES"; }
  SRR_S01_RESOURCES* create() const { return new SRR_S01_RESOURCES(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRR_S01.RESOURCES");
    addObject<RGS>(SRR_S01_RGS_1, "RGS.1", HL7::optional, HL7::repetition_on);
    addObject<SRR_S01_GENERAL_RESOURCE>(SRR_S01_SRR_S01_GENERAL_RESOURCE_2, "SRR_S01_GENERAL_RESOURCE.2", HL7::optional, HL7::repetition_on);
    addObject<SRR_S01_LOCATION_RESOURCE>(SRR_S01_SRR_S01_LOCATION_RESOURCE_3, "SRR_S01_LOCATION_RESOURCE.3", HL7::optional, HL7::repetition_on);
    addObject<SRR_S01_PERSONNEL_RESOURCE>(SRR_S01_SRR_S01_PERSONNEL_RESOURCE_4, "SRR_S01_PERSONNEL_RESOURCE.4", HL7::optional, HL7::repetition_on);
    addObject<SRR_S01_SERVICE>(SRR_S01_SRR_S01_SERVICE_5, "SRR_S01_SERVICE.5", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  RGS* getRGS_1(size_t index = 0) {
    return (RGS*)this->getObjectSafe(index, SRR_S01_RGS_1);
  }
  SRR_S01_GENERAL_RESOURCE* getSRR_S01_GENERAL_RESOURCE_2(size_t index = 0) {
    return (SRR_S01_GENERAL_RESOURCE*)this->getObjectSafe(index, SRR_S01_SRR_S01_GENERAL_RESOURCE_2);
  }
  SRR_S01_LOCATION_RESOURCE* getSRR_S01_LOCATION_RESOURCE_3(size_t index = 0) {
    return (SRR_S01_LOCATION_RESOURCE*)this->getObjectSafe(index, SRR_S01_SRR_S01_LOCATION_RESOURCE_3);
  }
  SRR_S01_PERSONNEL_RESOURCE* getSRR_S01_PERSONNEL_RESOURCE_4(size_t index = 0) {
    return (SRR_S01_PERSONNEL_RESOURCE*)this->getObjectSafe(index, SRR_S01_SRR_S01_PERSONNEL_RESOURCE_4);
  }
  SRR_S01_SERVICE* getSRR_S01_SERVICE_5(size_t index = 0) {
    return (SRR_S01_SERVICE*)this->getObjectSafe(index, SRR_S01_SRR_S01_SERVICE_5);
  }

  /* Checker list */
  bool isRGS_1(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_RGS_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSRR_S01_GENERAL_RESOURCE_2(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_SRR_S01_GENERAL_RESOURCE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSRR_S01_LOCATION_RESOURCE_3(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_SRR_S01_LOCATION_RESOURCE_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSRR_S01_PERSONNEL_RESOURCE_4(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_SRR_S01_PERSONNEL_RESOURCE_4) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSRR_S01_SERVICE_5(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_SRR_S01_SERVICE_5) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRR_S01_RESOURCES */

/* SERVICE */
struct SRR_S01_SERVICE : public HL7Group {
  SRR_S01_SERVICE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRR_S01_AIS_1,
    SRR_S01_NTE_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRR_S01_SERVICE"; }
  SRR_S01_SERVICE* create() const { return new SRR_S01_SERVICE(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRR_S01.SERVICE");
    addObject<AIS>(SRR_S01_AIS_1, "AIS.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(SRR_S01_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AIS* getAIS_1(size_t index = 0) {
    return (AIS*)this->getObjectSafe(index, SRR_S01_AIS_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_2);
  }

  /* Checker list */
  bool isAIS_1(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIS_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRR_S01_SERVICE */

/* GENERAL_RESOURCE */
struct SRR_S01_GENERAL_RESOURCE : public HL7Group {
  SRR_S01_GENERAL_RESOURCE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRR_S01_AIG_1,
    SRR_S01_NTE_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRR_S01_GENERAL_RESOURCE"; }
  SRR_S01_GENERAL_RESOURCE* create() const { return new SRR_S01_GENERAL_RESOURCE(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRR_S01.GENERAL_RESOURCE");
    addObject<AIG>(SRR_S01_AIG_1, "AIG.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(SRR_S01_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AIG* getAIG_1(size_t index = 0) {
    return (AIG*)this->getObjectSafe(index, SRR_S01_AIG_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_2);
  }

  /* Checker list */
  bool isAIG_1(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIG_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRR_S01_GENERAL_RESOURCE */

/* LOCATION_RESOURCE */
struct SRR_S01_LOCATION_RESOURCE : public HL7Group {
  SRR_S01_LOCATION_RESOURCE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRR_S01_AIL_1,
    SRR_S01_NTE_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRR_S01_LOCATION_RESOURCE"; }
  SRR_S01_LOCATION_RESOURCE* create() const { return new SRR_S01_LOCATION_RESOURCE(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRR_S01.LOCATION_RESOURCE");
    addObject<AIL>(SRR_S01_AIL_1, "AIL.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(SRR_S01_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AIL* getAIL_1(size_t index = 0) {
    return (AIL*)this->getObjectSafe(index, SRR_S01_AIL_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_2);
  }

  /* Checker list */
  bool isAIL_1(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIL_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRR_S01_LOCATION_RESOURCE */

/* PERSONNEL_RESOURCE */
struct SRR_S01_PERSONNEL_RESOURCE : public HL7Group {
  SRR_S01_PERSONNEL_RESOURCE() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRR_S01_AIP_1,
    SRR_S01_NTE_2,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRR_S01_PERSONNEL_RESOURCE"; }
  SRR_S01_PERSONNEL_RESOURCE* create() const { return new SRR_S01_PERSONNEL_RESOURCE(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRR_S01.PERSONNEL_RESOURCE");
    addObject<AIP>(SRR_S01_AIP_1, "AIP.1", HL7::optional, HL7::repetition_on);
    addObject<NTE>(SRR_S01_NTE_2, "NTE.2", HL7::optional, HL7::repetition_on);
  }

 public:
  /* Getters list */
  AIP* getAIP_1(size_t index = 0) {
    return (AIP*)this->getObjectSafe(index, SRR_S01_AIP_1);
  }
  NTE* getNTE_2(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_2);
  }

  /* Checker list */
  bool isAIP_1(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIP_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_2(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_2) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRR_S01_PERSONNEL_RESOURCE */

/* SRR_S01 */
struct SRR_S01 : public HL7Message {
  SRR_S01() { this->init(); }
  /* Fields ID  */
  enum FIELD_ID {
    SRR_S01_MSH_1,
    SRR_S01_MSA_2,
    SRR_S01_ERR_3,
    SRR_S01_SCH_5,
    SRR_S01_TQ1_6,
    SRR_S01_NTE_7,
    SRR_S01_PID_10,
    SRR_S01_PV1_11,
    SRR_S01_PV2_12,
    SRR_S01_DG1_13,
    SRR_S01_PID_14,
    SRR_S01_PV1_15,
    SRR_S01_PV2_16,
    SRR_S01_DG1_17,
    SRR_S01_RGS_18,
    SRR_S01_AIS_23,
    SRR_S01_NTE_24,
    SRR_S01_AIS_25,
    SRR_S01_NTE_26,
    SRR_S01_AIG_27,
    SRR_S01_NTE_28,
    SRR_S01_AIS_29,
    SRR_S01_NTE_30,
    SRR_S01_AIG_31,
    SRR_S01_NTE_32,
    SRR_S01_AIL_33,
    SRR_S01_NTE_34,
    SRR_S01_AIS_35,
    SRR_S01_NTE_36,
    SRR_S01_AIG_37,
    SRR_S01_NTE_38,
    SRR_S01_AIL_39,
    SRR_S01_NTE_40,
    SRR_S01_AIP_41,
    SRR_S01_NTE_42,
    FIELD_ID_MAX
  };

  const char* className() const { return "SRR_S01"; }
  SRR_S01* create() const { return new SRR_S01(); }

 private:
  /* Initialize object */
  void init() {
    setName("SRR_S01");
    addObject<MSH>(SRR_S01_MSH_1, "MSH.1", HL7::initialized, HL7::repetition_off);
    addObject<MSA>(SRR_S01_MSA_2, "MSA.2", HL7::initialized, HL7::repetition_off);
    addObject<ERR>(SRR_S01_ERR_3, "ERR.3", HL7::optional, HL7::repetition_on);
    addObject<SCH>(SRR_S01_SCH_5, "SCH.5", HL7::initialized, HL7::repetition_off);
    addObject<TQ1>(SRR_S01_TQ1_6, "TQ1.6", HL7::optional, HL7::repetition_off);
    addObject<NTE>(SRR_S01_NTE_7, "NTE.7", HL7::optional, HL7::repetition_off);
    addObject<PID>(SRR_S01_PID_10, "PID.10", HL7::initialized, HL7::repetition_off);
    addObject<PV1>(SRR_S01_PV1_11, "PV1.11", HL7::optional, HL7::repetition_off);
    addObject<PV2>(SRR_S01_PV2_12, "PV2.12", HL7::optional, HL7::repetition_off);
    addObject<DG1>(SRR_S01_DG1_13, "DG1.13", HL7::optional, HL7::repetition_off);
    addObject<PID>(SRR_S01_PID_14, "PID.14", HL7::initialized, HL7::repetition_off);
    addObject<PV1>(SRR_S01_PV1_15, "PV1.15", HL7::optional, HL7::repetition_off);
    addObject<PV2>(SRR_S01_PV2_16, "PV2.16", HL7::optional, HL7::repetition_off);
    addObject<DG1>(SRR_S01_DG1_17, "DG1.17", HL7::optional, HL7::repetition_off);
    addObject<RGS>(SRR_S01_RGS_18, "RGS.18", HL7::initialized, HL7::repetition_off);
    addObject<AIS>(SRR_S01_AIS_23, "AIS.23", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(SRR_S01_NTE_24, "NTE.24", HL7::optional, HL7::repetition_off);
    addObject<AIS>(SRR_S01_AIS_25, "AIS.25", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(SRR_S01_NTE_26, "NTE.26", HL7::optional, HL7::repetition_off);
    addObject<AIG>(SRR_S01_AIG_27, "AIG.27", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(SRR_S01_NTE_28, "NTE.28", HL7::optional, HL7::repetition_off);
    addObject<AIS>(SRR_S01_AIS_29, "AIS.29", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(SRR_S01_NTE_30, "NTE.30", HL7::optional, HL7::repetition_off);
    addObject<AIG>(SRR_S01_AIG_31, "AIG.31", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(SRR_S01_NTE_32, "NTE.32", HL7::optional, HL7::repetition_off);
    addObject<AIL>(SRR_S01_AIL_33, "AIL.33", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(SRR_S01_NTE_34, "NTE.34", HL7::optional, HL7::repetition_off);
    addObject<AIS>(SRR_S01_AIS_35, "AIS.35", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(SRR_S01_NTE_36, "NTE.36", HL7::optional, HL7::repetition_off);
    addObject<AIG>(SRR_S01_AIG_37, "AIG.37", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(SRR_S01_NTE_38, "NTE.38", HL7::optional, HL7::repetition_off);
    addObject<AIL>(SRR_S01_AIL_39, "AIL.39", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(SRR_S01_NTE_40, "NTE.40", HL7::optional, HL7::repetition_off);
    addObject<AIP>(SRR_S01_AIP_41, "AIP.41", HL7::initialized, HL7::repetition_off);
    addObject<NTE>(SRR_S01_NTE_42, "NTE.42", HL7::optional, HL7::repetition_off);
  }

 public:
  /* Getters list */
  MSH* getMSH_1(size_t index = 0) {
    return (MSH*)this->getObjectSafe(index, SRR_S01_MSH_1);
  }
  MSA* getMSA_2(size_t index = 0) {
    return (MSA*)this->getObjectSafe(index, SRR_S01_MSA_2);
  }
  ERR* getERR_3(size_t index = 0) {
    return (ERR*)this->getObjectSafe(index, SRR_S01_ERR_3);
  }
  SCH* getSCH_5(size_t index = 0) {
    return (SCH*)this->getObjectSafe(index, SRR_S01_SCH_5);
  }
  TQ1* getTQ1_6(size_t index = 0) {
    return (TQ1*)this->getObjectSafe(index, SRR_S01_TQ1_6);
  }
  NTE* getNTE_7(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_7);
  }
  PID* getPID_10(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, SRR_S01_PID_10);
  }
  PV1* getPV1_11(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, SRR_S01_PV1_11);
  }
  PV2* getPV2_12(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, SRR_S01_PV2_12);
  }
  DG1* getDG1_13(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, SRR_S01_DG1_13);
  }
  PID* getPID_14(size_t index = 0) {
    return (PID*)this->getObjectSafe(index, SRR_S01_PID_14);
  }
  PV1* getPV1_15(size_t index = 0) {
    return (PV1*)this->getObjectSafe(index, SRR_S01_PV1_15);
  }
  PV2* getPV2_16(size_t index = 0) {
    return (PV2*)this->getObjectSafe(index, SRR_S01_PV2_16);
  }
  DG1* getDG1_17(size_t index = 0) {
    return (DG1*)this->getObjectSafe(index, SRR_S01_DG1_17);
  }
  RGS* getRGS_18(size_t index = 0) {
    return (RGS*)this->getObjectSafe(index, SRR_S01_RGS_18);
  }
  AIS* getAIS_23(size_t index = 0) {
    return (AIS*)this->getObjectSafe(index, SRR_S01_AIS_23);
  }
  NTE* getNTE_24(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_24);
  }
  AIS* getAIS_25(size_t index = 0) {
    return (AIS*)this->getObjectSafe(index, SRR_S01_AIS_25);
  }
  NTE* getNTE_26(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_26);
  }
  AIG* getAIG_27(size_t index = 0) {
    return (AIG*)this->getObjectSafe(index, SRR_S01_AIG_27);
  }
  NTE* getNTE_28(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_28);
  }
  AIS* getAIS_29(size_t index = 0) {
    return (AIS*)this->getObjectSafe(index, SRR_S01_AIS_29);
  }
  NTE* getNTE_30(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_30);
  }
  AIG* getAIG_31(size_t index = 0) {
    return (AIG*)this->getObjectSafe(index, SRR_S01_AIG_31);
  }
  NTE* getNTE_32(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_32);
  }
  AIL* getAIL_33(size_t index = 0) {
    return (AIL*)this->getObjectSafe(index, SRR_S01_AIL_33);
  }
  NTE* getNTE_34(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_34);
  }
  AIS* getAIS_35(size_t index = 0) {
    return (AIS*)this->getObjectSafe(index, SRR_S01_AIS_35);
  }
  NTE* getNTE_36(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_36);
  }
  AIG* getAIG_37(size_t index = 0) {
    return (AIG*)this->getObjectSafe(index, SRR_S01_AIG_37);
  }
  NTE* getNTE_38(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_38);
  }
  AIL* getAIL_39(size_t index = 0) {
    return (AIL*)this->getObjectSafe(index, SRR_S01_AIL_39);
  }
  NTE* getNTE_40(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_40);
  }
  AIP* getAIP_41(size_t index = 0) {
    return (AIP*)this->getObjectSafe(index, SRR_S01_AIP_41);
  }
  NTE* getNTE_42(size_t index = 0) {
    return (NTE*)this->getObjectSafe(index, SRR_S01_NTE_42);
  }

  /* Checker list */
  bool isMSH_1(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_MSH_1) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isMSA_2(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_MSA_2) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isERR_3(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_ERR_3) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isSCH_5(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_SCH_5) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isTQ1_6(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_TQ1_6) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_7(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_7) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_10(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_PID_10) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_11(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_PV1_11) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_12(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_PV2_12) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDG1_13(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_DG1_13) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPID_14(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_PID_14) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV1_15(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_PV1_15) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isPV2_16(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_PV2_16) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isDG1_17(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_DG1_17) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isRGS_18(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_RGS_18) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIS_23(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIS_23) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_24(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_24) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIS_25(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIS_25) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_26(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_26) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIG_27(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIG_27) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_28(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_28) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIS_29(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIS_29) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_30(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_30) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIG_31(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIG_31) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_32(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_32) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIL_33(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIL_33) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_34(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_34) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIS_35(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIS_35) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_36(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_36) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIG_37(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIG_37) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_38(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_38) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIL_39(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIL_39) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_40(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_40) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isAIP_41(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_AIP_41) != NULL;
    } catch (...) {
    }
    return false;
  }
  bool isNTE_42(size_t index = 0) {
    try {
      return this->getObject(index, SRR_S01_NTE_42) != NULL;
    } catch (...) {
    }
    return false;
  }
}; /* SRR_S01_ */
} /* namespace HL7_281 */
#endif /*  __SRR_S01__281_H__ */
