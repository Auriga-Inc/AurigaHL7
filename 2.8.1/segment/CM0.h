/*
 * hacca - C Toolkit for the HL7 Protocol
 *
 * Warning: This file was automatically generated by [hawk], please do not edit.
 *          Thu 25 Jun 18:59:09 CEST 2020
 *
 * R. Carbone (rocco@tecsiel.it)
 * Jun 2020
 *
 * SPDX-License-Identifier: BSD-2-Clause-FreeBSD
 *
 * This file was developed as part of the ongoing activities related
 * to the design, implementation and execution of interoperability tests
 * between hacca-based versus AurigaHL7-based applications.
 *
 * In more details I decided to extend AurigaHL7 C++ Library with header files
 * implementing HL7 structures of the version 2.8.1 of the protocol (April 2014)
 * because the version 2.4 distributed with AurigaHL7 is a bit outdated (October 2000).
 *
 * All files in this fork was automatically generated by hacca-based tool [hawk]
 * and strictly follow the syntax and convention originally defined
 * by Auriga HL7 C++ Library just as form of continuity, convenience
 * and respect for their superb work.
 */


#ifndef __CM0_v281_H__
#define __CM0_v281_H__

#include "../../common/Util.h"
#include "../datatype/DT.h"
#include "../datatype/EI.h"
#include "../datatype/NM.h"
#include "../datatype/SI.h"
#include "../datatype/ST.h"
#include "../datatype/XAD.h"
#include "../datatype/XCN.h"
#include "../datatype/XTN.h"

namespace HL7_281 {

/* Clinical Study Master */
class CM0 : public HL7Segment {
 public:
  CM0() { this->init(); }

 private:
  /* */
  enum FIELD_ID {
    CM0_1,
    CM0_2,
    CM0_3,
    CM0_4,
    CM0_5,
    CM0_6,
    CM0_7,
    CM0_8,
    CM0_9,
    CM0_10,
    CM0_11,
    FIELD_ID_MAX
  };

 public:
  const char* className() const { return "CM0"; }
  CM0* create() const { return new CM0(); }

 private:
  void init() {
    setName("CM0");
    /* Init members */
    addObject<SI>(CM0_1, "CM0.1", HL7::initialized, HL7::repetition_off);
    addObject<EI>(CM0_2, "CM0.2", HL7::initialized, HL7::repetition_off);
    addObject<EI>(CM0_3, "CM0.3", HL7::initialized, HL7::repetition_off);
    addObject<ST>(CM0_4, "CM0.4", HL7::initialized, HL7::repetition_off);
    addObject<XCN>(CM0_5, "CM0.5", HL7::initialized, HL7::repetition_off);
    addObject<DT>(CM0_6, "CM0.6", HL7::initialized, HL7::repetition_off);
    addObject<NM>(CM0_7, "CM0.7", HL7::initialized, HL7::repetition_off);
    addObject<DT>(CM0_8, "CM0.8", HL7::initialized, HL7::repetition_off);
    addObject<XCN>(CM0_9, "CM0.9", HL7::initialized, HL7::repetition_off);
    addObject<XTN>(CM0_10, "CM0.10", HL7::initialized, HL7::repetition_off);
    addObject<XAD>(CM0_11, "CM0.11", HL7::initialized, HL7::repetition_off);
  }

 public:
  /* Getters */
  /****************************************
   * Set ID - CM0
   */

  SI* getCM0_1(size_t index = 0) {
    return (SI*)this->getObjectSafe(index, CM0_1);
  }

  SI* getSetIDCM0(size_t index = 0) {
    return (SI*)this->getObjectSafe(index, CM0_1);
  }

  bool isCM0_1(size_t index = 0) {
    try {
      return this->getObject(index, CM0_1) != NULL;
    } catch (...) {
    }
    return false;
  }

  bool isSetIDCM0(size_t index = 0) {
    try {
      return this->getObject(index, CM0_1) != NULL;
    } catch (...) {
    }
    return false;
  }

  /****************************************
   * Sponsor Study ID
   */

  EI* getCM0_2(size_t index = 0) {
    return (EI*)this->getObjectSafe(index, CM0_2);
  }

  EI* getSponsorStudyID(size_t index = 0) {
    return (EI*)this->getObjectSafe(index, CM0_2);
  }

  bool isCM0_2(size_t index = 0) {
    try {
      return this->getObject(index, CM0_2) != NULL;
    } catch (...) {
    }
    return false;
  }

  bool isSponsorStudyID(size_t index = 0) {
    try {
      return this->getObject(index, CM0_2) != NULL;
    } catch (...) {
    }
    return false;
  }

  /****************************************
   * Alternate Study ID
   */

  EI* getCM0_3(size_t index = 0) {
    return (EI*)this->getObjectSafe(index, CM0_3);
  }

  EI* getAlternateStudyID(size_t index = 0) {
    return (EI*)this->getObjectSafe(index, CM0_3);
  }

  bool isCM0_3(size_t index = 0) {
    try {
      return this->getObject(index, CM0_3) != NULL;
    } catch (...) {
    }
    return false;
  }

  bool isAlternateStudyID(size_t index = 0) {
    try {
      return this->getObject(index, CM0_3) != NULL;
    } catch (...) {
    }
    return false;
  }

  /****************************************
   * Title of Study
   */

  ST* getCM0_4(size_t index = 0) {
    return (ST*)this->getObjectSafe(index, CM0_4);
  }

  ST* getTitleofStudy(size_t index = 0) {
    return (ST*)this->getObjectSafe(index, CM0_4);
  }

  bool isCM0_4(size_t index = 0) {
    try {
      return this->getObject(index, CM0_4) != NULL;
    } catch (...) {
    }
    return false;
  }

  bool isTitleofStudy(size_t index = 0) {
    try {
      return this->getObject(index, CM0_4) != NULL;
    } catch (...) {
    }
    return false;
  }

  /****************************************
   * Chairman of Study
   */

  XCN* getCM0_5(size_t index = 0) {
    return (XCN*)this->getObjectSafe(index, CM0_5);
  }

  XCN* getChairmanofStudy(size_t index = 0) {
    return (XCN*)this->getObjectSafe(index, CM0_5);
  }

  bool isCM0_5(size_t index = 0) {
    try {
      return this->getObject(index, CM0_5) != NULL;
    } catch (...) {
    }
    return false;
  }

  bool isChairmanofStudy(size_t index = 0) {
    try {
      return this->getObject(index, CM0_5) != NULL;
    } catch (...) {
    }
    return false;
  }

  /****************************************
   * Last IRB Approval Date
   */

  DT* getCM0_6(size_t index = 0) {
    return (DT*)this->getObjectSafe(index, CM0_6);
  }

  DT* getLastIRBApprovalDate(size_t index = 0) {
    return (DT*)this->getObjectSafe(index, CM0_6);
  }

  bool isCM0_6(size_t index = 0) {
    try {
      return this->getObject(index, CM0_6) != NULL;
    } catch (...) {
    }
    return false;
  }

  bool isLastIRBApprovalDate(size_t index = 0) {
    try {
      return this->getObject(index, CM0_6) != NULL;
    } catch (...) {
    }
    return false;
  }

  /****************************************
   * Total Accrual to Date
   */

  NM* getCM0_7(size_t index = 0) {
    return (NM*)this->getObjectSafe(index, CM0_7);
  }

  NM* getTotalAccrualtoDate(size_t index = 0) {
    return (NM*)this->getObjectSafe(index, CM0_7);
  }

  bool isCM0_7(size_t index = 0) {
    try {
      return this->getObject(index, CM0_7) != NULL;
    } catch (...) {
    }
    return false;
  }

  bool isTotalAccrualtoDate(size_t index = 0) {
    try {
      return this->getObject(index, CM0_7) != NULL;
    } catch (...) {
    }
    return false;
  }

  /****************************************
   * Last Accrual Date
   */

  DT* getCM0_8(size_t index = 0) {
    return (DT*)this->getObjectSafe(index, CM0_8);
  }

  DT* getLastAccrualDate(size_t index = 0) {
    return (DT*)this->getObjectSafe(index, CM0_8);
  }

  bool isCM0_8(size_t index = 0) {
    try {
      return this->getObject(index, CM0_8) != NULL;
    } catch (...) {
    }
    return false;
  }

  bool isLastAccrualDate(size_t index = 0) {
    try {
      return this->getObject(index, CM0_8) != NULL;
    } catch (...) {
    }
    return false;
  }

  /****************************************
   * Contact for Study
   */

  XCN* getCM0_9(size_t index = 0) {
    return (XCN*)this->getObjectSafe(index, CM0_9);
  }

  XCN* getContactforStudy(size_t index = 0) {
    return (XCN*)this->getObjectSafe(index, CM0_9);
  }

  bool isCM0_9(size_t index = 0) {
    try {
      return this->getObject(index, CM0_9) != NULL;
    } catch (...) {
    }
    return false;
  }

  bool isContactforStudy(size_t index = 0) {
    try {
      return this->getObject(index, CM0_9) != NULL;
    } catch (...) {
    }
    return false;
  }

  /****************************************
   * Contact's Telephone Number
   */

  XTN* getCM0_10(size_t index = 0) {
    return (XTN*)this->getObjectSafe(index, CM0_10);
  }

  XTN* getContactsTelephoneNumber(size_t index = 0) {
    return (XTN*)this->getObjectSafe(index, CM0_10);
  }

  bool isCM0_10(size_t index = 0) {
    try {
      return this->getObject(index, CM0_10) != NULL;
    } catch (...) {
    }
    return false;
  }

  bool isContactsTelephoneNumber(size_t index = 0) {
    try {
      return this->getObject(index, CM0_10) != NULL;
    } catch (...) {
    }
    return false;
  }

  /****************************************
   * Contact's Address
   */

  XAD* getCM0_11(size_t index = 0) {
    return (XAD*)this->getObjectSafe(index, CM0_11);
  }

  XAD* getContactsAddress(size_t index = 0) {
    return (XAD*)this->getObjectSafe(index, CM0_11);
  }

  bool isCM0_11(size_t index = 0) {
    try {
      return this->getObject(index, CM0_11) != NULL;
    } catch (...) {
    }
    return false;
  }

  bool isContactsAddress(size_t index = 0) {
    try {
      return this->getObject(index, CM0_11) != NULL;
    } catch (...) {
    }
    return false;
  }

}; /* End of CM0 */

} /* End of namespace HL7_281 */
#endif /* __CM0_v281_H__ */
